<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.support.service.execution</value>
  <value name="is_public">false</value>
  <value name="shared">Ly8gcmVwcmVzZW50cyBhIHNpbmdsZSBjdXJyZW50bHkgZXhlY3V0aW5nIGludm9jYXRpb24gb2Yg
YSBzZXJ2aWNlCnB1YmxpYyBzdGF0aWMgY2xhc3MgU2VydmljZUV4ZWN1dGlvbiBpbXBsZW1lbnRz
IGNvbS53bS51dGlsLmNvZGVyLklEYXRhQ29kYWJsZSB7CiAgcHJpdmF0ZSBsb25nIHN0YXJ0VGlt
ZTsKICBwcml2YXRlIGNvbS53bS5hcHAuYjJiLnNlcnZlci5CYXNlU2VydmljZSBzZXJ2aWNlOwog
IHByaXZhdGUgSURhdGEgcGlwZWxpbmU7CiAgcHJpdmF0ZSBTdHJpbmcgdXNlciwgc2Vzc2lvbjsK
CiAgcHVibGljIFNlcnZpY2VFeGVjdXRpb24oU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5l
LCBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgc3RhdGUpIHsKICAgIHRoaXMoY29t
LndtLmxhbmcubnMuTlNOYW1lLmNyZWF0ZShzZXJ2aWNlKSwgcGlwZWxpbmUsIHN0YXRlKTsKICB9
CgogIHB1YmxpYyBTZXJ2aWNlRXhlY3V0aW9uKGNvbS53bS5sYW5nLm5zLk5TTmFtZSBzZXJ2aWNl
LCBJRGF0YSBwaXBlbGluZSwgY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIHN0YXRl
KSB7CiAgICB0aGlzKGNvbS53bS5hcHAuYjJiLnNlcnZlci5ucy5OYW1lc3BhY2UuZ2V0U2Vydmlj
ZShzZXJ2aWNlKSwgcGlwZWxpbmUsIHN0YXRlKTsKICB9CgogIHB1YmxpYyBTZXJ2aWNlRXhlY3V0
aW9uKGNvbS53bS5hcHAuYjJiLnNlcnZlci5CYXNlU2VydmljZSBzZXJ2aWNlLCBJRGF0YSBwaXBl
bGluZSwgY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIHN0YXRlKSB7CiAgICB0aGlz
LnNlcnZpY2UgPSBzZXJ2aWNlOwogICAgdGhpcy5waXBlbGluZSA9IHBpcGVsaW5lID09IG51bGwg
PyBJRGF0YUZhY3RvcnkuY3JlYXRlKCkgOiBJRGF0YVV0aWwuY2xvbmUocGlwZWxpbmUpOwogICAg
dGhpcy5zdGFydFRpbWUgPSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKICAgIHRoaXMuc2Vz
c2lvbiA9IHN0YXRlLmdldFNlc3Npb24oKS5nZXRTZXNzaW9uSUQoKTsKICAgIHRoaXMudXNlciA9
IHN0YXRlLmdldFVzZXIoKS5nZXROYW1lKCk7CiAgfQoKICAvLyByZXR1cm5zIHRoZSBuYW1lIG9m
IHRoZSBzZXJ2aWNlIGJlaW5nIGludm9rZWQKICBwdWJsaWMgU3RyaW5nIGdldFNlcnZpY2VOYW1l
KCkgewogICAgcmV0dXJuIHNlcnZpY2UuZ2V0TlNOYW1lKCkuZ2V0RnVsbE5hbWUoKTsKICB9Cgog
IC8vIHJldHVybnMgdGhlIG5hbWUgb2YgdGhlIHBhY2thZ2UgaW4gd2hpY2ggdGhlIHNlcnZpY2Ug
YmVpbmcgaW52b2tlZCByZXNpZGVzCiAgcHVibGljIFN0cmluZyBnZXRQYWNrYWdlTmFtZSgpIHsK
ICAgIHJldHVybiBzZXJ2aWNlLmdldFBhY2thZ2VOYW1lKCk7CiAgfQoKICAvLyByZXR1cm5zIHRo
ZSBuYW1lIG9mIHRoZSB1c2VyIGludm9raW5nIHRoZSBzZXJ2aWNlCiAgcHVibGljIFN0cmluZyBn
ZXRVc2VyKCkgewogICAgcmV0dXJuIHVzZXI7CiAgfQoKICAvLyByZXR1cm5zIHRoZSBzZXNzaW9u
IG5hbWUgaW52b2tpbmcgdGhlIHNlcnZpY2UKICBwdWJsaWMgU3RyaW5nIGdldFNlc3Npb24oKSB7
CiAgICByZXR1cm4gc2Vzc2lvbjsKICB9CgogIC8vIHJldHVybnMgdGhlIHBpcGVsaW5lIGFzc29j
aWF0ZWQgd2l0aCB0aGlzIGludm9jYXRpb24KICBwdWJsaWMgSURhdGEgZ2V0UGlwZWxpbmUoKSB7
CiAgICByZXR1cm4gcGlwZWxpbmU7CiAgfQoKICAvLyByZXR1cm5zIHRoZSBwaXBlbGluZSBhc3Nv
Y2lhdGVkIHdpdGggdGhpcyBpbnZvY2F0aW9uCiAgcHVibGljIGludCBnZXRQaXBlbGluZVNpemUo
KSB7CiAgICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKICAgIGlu
dCBzaXplID0gSURhdGFVdGlsLnNpemUoY3Vyc29yKTsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAg
ICByZXR1cm4gc2l6ZTsKICB9CgogIC8vIHJldHVybnMgdGhlIGludm9jYXRpb24gZHVyYXRpb24g
aW4gbWlsbGlzZWNvbmRzCiAgcHVibGljIGxvbmcgZ2V0RHVyYXRpb24oKSB7CiAgICByZXR1cm4g
U3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlzKCkgLSBzdGFydFRpbWU7CiAgfQoKICAvLyByZXR1cm5z
IGFuIElEYXRhIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgb2JqZWN0CiAgcHVibGljIElEYXRhIGdl
dElEYXRhKCkgewogICAgSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogICAg
SURhdGFDdXJzb3IgY3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoKICAgIElEYXRhVXRpbC5w
dXQoY3Vyc29yLCAic2VydmljZSIsIGdldFNlcnZpY2VOYW1lKCkpOwogICAgSURhdGFVdGlsLnB1
dChjdXJzb3IsICJwYWNrYWdlIiwgZ2V0UGFja2FnZU5hbWUoKSk7CiAgICBJRGF0YVV0aWwucHV0
KGN1cnNvciwgInBpcGVsaW5lIiwgZ2V0UGlwZWxpbmUoKSk7CiAgICBJRGF0YVV0aWwucHV0KGN1
cnNvciwgInBpcGVsaW5lLmxlbmd0aCIsIGdldFBpcGVsaW5lU2l6ZSgpKTsKICAgIElEYXRhVXRp
bC5wdXQoY3Vyc29yLCAic3RhcnQiLCB0dW5kcmEuZGF0ZXRpbWUuZm9ybWF0KCIiICsgc3RhcnRU
aW1lLCAibWlsbGlzZWNvbmRzIiwgImRhdGV0aW1lIikpOwogICAgSURhdGFVdGlsLnB1dChjdXJz
b3IsICJkdXJhdGlvbiIsIHR1bmRyYS5kdXJhdGlvbi5mb3JtYXQoIiIgKyBnZXREdXJhdGlvbigp
LCAibWlsbGlzZWNvbmRzIiwgInhtbCIpKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAic2Vz
c2lvbiIsIGdldFNlc3Npb24oKSk7CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgInVzZXIiLCBn
ZXRVc2VyKCkpOwogICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgICByZXR1cm4gb3V0cHV0OwogIH0K
CiAgLy8gc2V0cyB2YWx1ZXMgZnJvbSB0aGUgZ2l2ZW4gSURhdGEgLSBub3QgaW1wbGVtZW50ZWQK
ICBwdWJsaWMgdm9pZCBzZXRJRGF0YShJRGF0YSBpbnB1dCkgewogICAgdGhyb3cgbmV3IFVuc3Vw
cG9ydGVkT3BlcmF0aW9uRXhjZXB0aW9uKCJzZXRJRGF0YSBub3QgaW1wbGVtZW50ZWQiKTsKICB9
Cn0KCi8vIHJlcHJlc2VudHMgYSBzaW5nbGUgY3VycmVudGx5IGV4ZWN1dGluZyBpbnZvY2F0aW9u
IGNhbGwgc3RhY2sKcHVibGljIHN0YXRpYyBjbGFzcyBTZXJ2aWNlRXhlY3V0aW9uVGhyZWFkIGlt
cGxlbWVudHMgY29tLndtLnV0aWwuY29kZXIuSURhdGFDb2RhYmxlIHsKICBwcml2YXRlIFRocmVh
ZCB0aHJlYWQgPSBudWxsOwogIHByaXZhdGUgamF2YS51dGlsLkRlcXVlPFNlcnZpY2VFeGVjdXRp
b24+IHN0YWNrID0gbnVsbDsKICBsb25nIHN0YXJ0VGltZTsKCiAgLy8gY3JlYXRlcyBhIG5ldyBT
ZXJ2aWNlRXhlY3V0aW9uVGhyZWFkCiAgcHVibGljIFNlcnZpY2VFeGVjdXRpb25UaHJlYWQoVGhy
ZWFkIHRocmVhZCkgewogICAgdGhpcy50aHJlYWQgPSB0aHJlYWQ7CiAgICB0aGlzLnN0YWNrID0g
bmV3IGphdmEudXRpbC5BcnJheURlcXVlPFNlcnZpY2VFeGVjdXRpb24+KCk7CiAgICB0aGlzLnN0
YXJ0VGltZSA9IFN5c3RlbS5jdXJyZW50VGltZU1pbGxpcygpOwogIH0KCiAgcHVibGljIHZvaWQg
cHVzaChTZXJ2aWNlRXhlY3V0aW9uIGludm9jYXRpb24pIHsKICAgIHN0YWNrLnB1c2goaW52b2Nh
dGlvbik7CiAgfQoKICBwdWJsaWMgU2VydmljZUV4ZWN1dGlvbiBwb3AoKSB7CiAgICByZXR1cm4g
c3RhY2sucG9wKCk7CiAgfQoKICAvLyByZXR1cm5zIHRoZSBpbnZvY2F0aW9uIGR1cmF0aW9uIGlu
IG1pbGxpc2Vjb25kcwogIHB1YmxpYyBsb25nIGdldER1cmF0aW9uKCkgewogICAgcmV0dXJuIFN5
c3RlbS5jdXJyZW50VGltZU1pbGxpcygpIC0gc3RhcnRUaW1lOwogIH0KCiAgLy8gcmV0dXJucyBh
biBJRGF0YSByZXByZXNlbnRhdGlvbiBvZiB0aGlzIGludm9jYXRpb24gdHJlZQogIHB1YmxpYyBJ
RGF0YSBnZXRJRGF0YSgpIHsKICAgIElEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsKICAgIElEYXRhQ3Vyc29yIGN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsKCiAgICBJRGF0
YVV0aWwucHV0KGN1cnNvciwgInRocmVhZC5pZCIsIHRocmVhZC5nZXRJZCgpKTsKICAgIElEYXRh
VXRpbC5wdXQoY3Vyc29yLCAidGhyZWFkLm5hbWUiLCB0aHJlYWQuZ2V0TmFtZSgpKTsKICAgIElE
YXRhVXRpbC5wdXQoY3Vyc29yLCAidGhyZWFkLm9iamVjdCIsIHRocmVhZCk7CiAgICBJRGF0YVV0
aWwucHV0KGN1cnNvciwgInRocmVhZC5zdGFydCIsIHR1bmRyYS5kYXRldGltZS5mb3JtYXQoIiIg
KyBzdGFydFRpbWUsICJtaWxsaXNlY29uZHMiLCAiZGF0ZXRpbWUiKSk7CiAgICBJRGF0YVV0aWwu
cHV0KGN1cnNvciwgInRocmVhZC5kdXJhdGlvbiIsIHR1bmRyYS5kdXJhdGlvbi5mb3JtYXQoIiIg
KyBnZXREdXJhdGlvbigpLCAibWlsbGlzZWNvbmRzIiwgInhtbCIpKTsKCgogICAgaWYgKHN0YWNr
LnNpemUoKSA+IDApIHsKICAgICAgU2VydmljZUV4ZWN1dGlvbltdIGxpc3QgPSBzdGFjay50b0Fy
cmF5KG5ldyBTZXJ2aWNlRXhlY3V0aW9uWzBdKTsKICAgICAgSURhdGFbXSBzZXJ2aWNlcyA9IG5l
dyBJRGF0YVtsaXN0Lmxlbmd0aF07CiAgICAgIGZvcihpbnQgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0
aDsgaSsrKSBzZXJ2aWNlc1tpXSA9IGxpc3RbaV0uZ2V0SURhdGEoKTsKICAgICAgSURhdGFVdGls
LnB1dChjdXJzb3IsICJjYWxsc3RhY2siLCBzZXJ2aWNlcyk7CiAgICAgIElEYXRhVXRpbC5wdXQo
Y3Vyc29yLCAiY2FsbHN0YWNrLmxlbmd0aCIsIHNlcnZpY2VzLmxlbmd0aCk7CiAgICB9CgogICAg
Y3Vyc29yLmRlc3Ryb3koKTsKCiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgLy8gc2V0cyB2YWx1
ZXMgZnJvbSB0aGUgZ2l2ZW4gSURhdGEgLSBub3QgaW1wbGVtZW50ZWQKICBwdWJsaWMgdm9pZCBz
ZXRJRGF0YShJRGF0YSBpbnB1dCkgewogICAgdGhyb3cgbmV3IFVuc3VwcG9ydGVkT3BlcmF0aW9u
RXhjZXB0aW9uKCJzZXRJRGF0YSBub3QgaW1wbGVtZW50ZWQiKTsKICB9Cn0KCnB1YmxpYyBmaW5h
bCBzdGF0aWMgY2xhc3MgU2VydmljZUV4ZWN1dGlvbkNvbnRleHQgaW1wbGVtZW50cyBjb20ud20u
YXBwLmIyYi5zZXJ2ZXIuaW52b2tlLkludm9rZUNoYWluUHJvY2Vzc29yLCBjb20ud20udXRpbC5j
b2Rlci5JRGF0YUNvZGFibGUgewogIHByaXZhdGUgc3RhdGljIFNlcnZpY2VFeGVjdXRpb25Db250
ZXh0IGluc3RhbmNlID0gbnVsbDsKICBwcml2YXRlIGxvbmcgc3RhcnRUaW1lLCB0b3RhbEludm9j
YXRpb25zLCB0b3RhbEVycm9yczsKICBwcml2YXRlIGphdmEudXRpbC5NYXA8TG9uZywgU2Vydmlj
ZUV4ZWN1dGlvblRocmVhZD4gY3VycmVudFRocmVhZHMgPSBudWxsOwoKICAvLyBjcmVhdGVzIGEg
bmV3IFNlcnZpY2VFeGVjdXRpb25Db250ZXh0IG9iamVjdAogIHByaXZhdGUgU2VydmljZUV4ZWN1
dGlvbkNvbnRleHQoKSB7CiAgICBzdGFydFRpbWUgPSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMo
KTsKICAgIHRvdGFsSW52b2NhdGlvbnMgPSAwOwogICAgdG90YWxFcnJvcnMgPSAwOwogICAgY3Vy
cmVudFRocmVhZHMgPSBuZXcgamF2YS51dGlsLmNvbmN1cnJlbnQuQ29uY3VycmVudEhhc2hNYXA8
TG9uZywgU2VydmljZUV4ZWN1dGlvblRocmVhZD4oKTsKICB9CgogIC8vIHJldHVybnMgdGhlIHNp
bmdsZXRvbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzCiAgcHVibGljIHN0YXRpYyBTZXJ2aWNlRXhl
Y3V0aW9uQ29udGV4dCBnZXRJbnN0YW5jZSgpIHsKICAgIGlmIChpbnN0YW5jZSA9PSBudWxsKSB7
CiAgICAgIGluc3RhbmNlID0gbmV3IFNlcnZpY2VFeGVjdXRpb25Db250ZXh0KCk7CiAgICB9CiAg
ICByZXR1cm4gaW5zdGFuY2U7CiAgfQoKICAvLyByZWNvcmRzIGVhY2ggY3VycmVudGx5IGV4ZWN1
dGluZyBpbnZvY2F0aW9uCiAgcHVibGljIHZvaWQgcHJvY2VzcyhqYXZhLnV0aWwuSXRlcmF0b3Ig
Y2hhaW4sIGNvbS53bS5hcHAuYjJiLnNlcnZlci5CYXNlU2VydmljZSBzZXJ2aWNlLCBJRGF0YSBw
aXBlbGluZSwgY29tLndtLmFwcC5iMmIuc2VydmVyLmludm9rZS5TZXJ2aWNlU3RhdHVzIHN0YXR1
cykgdGhyb3dzIGNvbS53bS51dGlsLlNlcnZlckV4Y2VwdGlvbiB7CiAgICBUaHJlYWQgY3VycmVu
dFRocmVhZCA9IFRocmVhZC5jdXJyZW50VGhyZWFkKCk7CiAgICBsb25nIGlkID0gY3VycmVudFRo
cmVhZC5nZXRJZCgpOwogICAgU2VydmljZUV4ZWN1dGlvblRocmVhZCBzZXJ2aWNlVGhyZWFkID0g
bnVsbDsKCiAgICB0cnkgewogICAgICB0b3RhbEludm9jYXRpb25zKys7CgogICAgICBpZiAoc3Rh
dHVzLmlzVG9wU2VydmljZSgpKSB7CiAgICAgICAgc2VydmljZVRocmVhZCA9IG5ldyBTZXJ2aWNl
RXhlY3V0aW9uVGhyZWFkKGN1cnJlbnRUaHJlYWQpOwogICAgICAgIGN1cnJlbnRUaHJlYWRzLnB1
dChpZCwgc2VydmljZVRocmVhZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VydmljZVRocmVh
ZCA9IGN1cnJlbnRUaHJlYWRzLmdldChpZCk7CiAgICAgIH0KICAgICAgaWYgKHNlcnZpY2VUaHJl
YWQgIT0gbnVsbCkgc2VydmljZVRocmVhZC5wdXNoKG5ldyBTZXJ2aWNlRXhlY3V0aW9uKHNlcnZp
Y2UsIHBpcGVsaW5lLCBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUuZ2V0Q3VycmVu
dFN0YXRlKCkpKTsKCiAgICAgIGlmIChjaGFpbi5oYXNOZXh0KCkpICgoY29tLndtLmFwcC5iMmIu
c2VydmVyLmludm9rZS5JbnZva2VDaGFpblByb2Nlc3NvciljaGFpbi5uZXh0KCkpLnByb2Nlc3Mo
Y2hhaW4sIHNlcnZpY2UsIHBpcGVsaW5lLCBzdGF0dXMpOwogICAgfSBjYXRjaCAoY29tLndtLnV0
aWwuU2VydmVyRXhjZXB0aW9uIGV4KSB7CiAgICAgIHRvdGFsRXJyb3JzKys7CiAgICAgIHRocm93
IGV4OwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKHNlcnZpY2VUaHJlYWQgIT0gbnVsbCkgewog
ICAgICAgIHNlcnZpY2VUaHJlYWQucG9wKCk7IC8vIGludm9jYXRpb24gZmluaXNoZWQsIHNvIHJl
bW92ZSBmcm9tIGNhbGwgc3RhY2sKICAgICAgICBpZiAoc3RhdHVzLmlzVG9wU2VydmljZSgpKSBj
dXJyZW50VGhyZWFkcy5yZW1vdmUoaWQpOyAvLyB0b3AtbGV2ZWwgaW52b2NhdGlvbiBmaW5pc2hl
ZCwgc28gcmVtb3ZlIGZyb20gY3VycmVudGx5IGV4ZWN1dGluZyB0aHJlYWRzCiAgICAgIH0KICAg
IH0KICB9CgogIC8vIHJldHVybnMgdGhlIGN1cnJlbnQgaW52b2NhdGlvbiBjb250ZXh0IG9mIHRo
ZSBzZXJ2ZXIgYXMgYW4gSURhdGFbXSBkb2N1bWVudCBsaXN0CiAgcHVibGljIElEYXRhIGdldElE
YXRhKCkgewogICAgSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogICAgSURh
dGFDdXJzb3IgY3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoKICAgIElEYXRhVXRpbC5wdXQo
Y3Vyc29yLCAibW9uaXRvcmluZy5zdGFydCIsIHR1bmRyYS5kYXRldGltZS5mb3JtYXQoIiIgKyBz
dGFydFRpbWUsICJtaWxsaXNlY29uZHMiLCAiZGF0ZXRpbWUiKSk7CiAgICBJRGF0YVV0aWwucHV0
KGN1cnNvciwgIm1vbml0b3JpbmcuZHVyYXRpb24iLCB0dW5kcmEuZHVyYXRpb24uZm9ybWF0KCIi
ICsgZ2V0RHVyYXRpb24oKSwgIm1pbGxpc2Vjb25kcyIsICJ4bWwiKSk7CiAgICBJRGF0YVV0aWwu
cHV0KGN1cnNvciwgImludm9jYXRpb25zLnN0YXJ0ZWQiLCB0b3RhbEludm9jYXRpb25zKTsKICAg
IElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiaW52b2NhdGlvbnMuZXJyb3JlZCIsIHRvdGFsRXJyb3Jz
KTsKCiAgICBqYXZhLnV0aWwuTGlzdDxJRGF0YT4gdGhyZWFkcyA9IG5ldyBqYXZhLnV0aWwuQXJy
YXlMaXN0PElEYXRhPihjdXJyZW50VGhyZWFkcy5zaXplKCkpOwogICAgamF2YS51dGlsLkl0ZXJh
dG9yPFNlcnZpY2VFeGVjdXRpb25UaHJlYWQ+IGl0ZXJhdG9yID0gY3VycmVudFRocmVhZHMudmFs
dWVzKCkuaXRlcmF0b3IoKTsKICAgIHdoaWxlKGl0ZXJhdG9yLmhhc05leHQoKSkgdGhyZWFkcy5h
ZGQoaXRlcmF0b3IubmV4dCgpLmdldElEYXRhKCkpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3Is
ICJpbnZvY2F0aW9ucy5jdXJyZW50IiwgKElEYXRhW10pdGhyZWFkcy50b0FycmF5KG5ldyBJRGF0
YVswXSkpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICJpbnZvY2F0aW9ucy5jdXJyZW50Lmxl
bmd0aCIsIHRocmVhZHMuc2l6ZSgpKTsgICAgICAgICAgIAoKICAgIGN1cnNvci5kZXN0cm95KCk7
CgogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIC8vIHNldHMgdmFsdWVzIGZyb20gdGhlIGdpdmVu
IElEYXRhIC0gbm90IGltcGxlbWVudGVkCiAgcHVibGljIHZvaWQgc2V0SURhdGEoSURhdGEgaW5w
dXQpIHsKICAgIHRocm93IG5ldyBVbnN1cHBvcnRlZE9wZXJhdGlvbkV4Y2VwdGlvbigic2V0SURh
dGEgbm90IGltcGxlbWVudGVkIik7CiAgfQoKICAvLyByZXR1cm5zIHRoZSBkdXJhdGlvbiBpbiBt
aWxsaXNlY29uZHMgdGhpcyBjb250ZXh0IG9iamVjdCBoYXMgYmVlbiBtb25pdG9yaW5nIHRoZSBl
eGVjdXRpb24gc3RhdGUKICBwdWJsaWMgbG9uZyBnZXREdXJhdGlvbigpIHsKICAgIHJldHVybiBT
eXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIHN0YXJ0VGltZTsKICB9CgogIC8vIHJlZ2lzdGVy
cyB0aGlzIHByb2Nlc3NvciB3aXRoIHRoZSBpbnZvY2F0aW9uIG1hbmFnZXIKICBwdWJsaWMgdm9p
ZCBzdGFydCgpIHsKICAgIGNvbS53bS5hcHAuYjJiLnNlcnZlci5pbnZva2UuSW52b2tlTWFuYWdl
ciBpbnZva2VNYW5hZ2VyID0gY29tLndtLmFwcC5iMmIuc2VydmVyLmludm9rZS5JbnZva2VNYW5h
Z2VyLmdldERlZmF1bHQoKTsKICAgIGludm9rZU1hbmFnZXIucmVnaXN0ZXJQcm9jZXNzb3IodGhp
cyk7CiAgfQoKICAvLyBkZXJlZ2lzdGVycyB0aGlzIHByb2Nlc3NvciB3aXRoIHRoZSBpbnZvY2F0
aW9uIG1hbmFnZXIKICBwdWJsaWMgdm9pZCBzdG9wKCkgewogICAgY29tLndtLmFwcC5iMmIuc2Vy
dmVyLmludm9rZS5JbnZva2VNYW5hZ2VyIGludm9rZU1hbmFnZXIgPSBjb20ud20uYXBwLmIyYi5z
ZXJ2ZXIuaW52b2tlLkludm9rZU1hbmFnZXIuZ2V0RGVmYXVsdCgpOwogICAgaW52b2tlTWFuYWdl
ci51bnJlZ2lzdGVyUHJvY2Vzc29yKHRoaXMpOwogICAgaW5zdGFuY2UgPSBudWxsOyAvLyBmcmVl
IHRoZSBzaW5nbGV0b24gaW5zdGFuY2UgZm9yIGdhcmJhZ2UgY29sbGVjdGlvbgogIH0KfQ==</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
