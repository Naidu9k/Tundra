<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.string</value>
  <value name="shared">Ly8gcmV0dXJucyBhbiBlbXB0eSBzdHJpbmcgaWYgZ2l2ZW4gc3RyaW5nIGlzIG51bGwsIG90aGVy
d2lzZSByZXR1cm5zIHRoZSBnaXZlbiBzdHJpbmcKcHVibGljIHN0YXRpYyBTdHJpbmcgYmxhbmtp
ZnkoU3RyaW5nIGlucHV0KSB7CiAgaWYgKGlucHV0ID09IG51bGwpIGlucHV0ID0gIiI7CiAgcmV0
dXJuIGlucHV0Owp9CgovLyBjYXBpdGFsaXplcyB0aGUgZmlyc3QgY2hhcmFjdGVyIGluIGVpdGhl
ciB0aGUgZmlyc3Qgd29yZCBvciBhbGwKLy8gd29yZHMgaW4gdGhlIGdpdmVuIHN0cmluZwpwdWJs
aWMgc3RhdGljIFN0cmluZyBjYXBpdGFsaXplKFN0cmluZyBpbnB1dCwgU3RyaW5nIG1vZGUpIHsK
ICByZXR1cm4gY2FwaXRhbGl6ZShpbnB1dCwgbW9kZSA9PSBudWxsID8gZmFsc2UgOiBtb2RlLmVx
dWFscygiZmlyc3Qgd29yZCIpKTsKfQoKLy8gY2FwaXRhbGl6ZXMgdGhlIGZpcnN0IGNoYXJhY3Rl
ciBpbiBlaXRoZXIgdGhlIGZpcnN0IHdvcmQgb3IgYWxsCi8vIHdvcmRzIGluIHRoZSBnaXZlbiBz
dHJpbmcKcHVibGljIHN0YXRpYyBTdHJpbmcgY2FwaXRhbGl6ZShTdHJpbmcgaW5wdXQsIGJvb2xl
YW4gZmlyc3RXb3JkT25seSkgewogIGlmIChpbnB1dCA9PSBudWxsKSByZXR1cm4gbnVsbDsKCiAg
Y2hhcltdIGNoYXJhY3RlcnMgPSBpbnB1dC50b0NoYXJBcnJheSgpOwogIGJvb2xlYW4gY2FwaXRh
bGl6ZSA9IHRydWU7CgogIGZvciAoaW50IGkgPSAwOyBpIDwgY2hhcmFjdGVycy5sZW5ndGg7IGkr
KykgewogICAgY2hhciBjaGFyYWN0ZXIgPSBjaGFyYWN0ZXJzW2ldOwogICAgaWYgKENoYXJhY3Rl
ci5pc1doaXRlc3BhY2UoY2hhcmFjdGVyKSkgewogICAgICBjYXBpdGFsaXplID0gdHJ1ZTsKICAg
IH0gZWxzZSBpZiAoY2FwaXRhbGl6ZSkgewogICAgICBjaGFyYWN0ZXJzW2ldID0gQ2hhcmFjdGVy
LnRvVGl0bGVDYXNlKGNoYXJhY3Rlcik7CiAgICAgIGNhcGl0YWxpemUgPSBmYWxzZTsKICAgICAg
aWYgKGZpcnN0V29yZE9ubHkpIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIG5ldyBTdHJpbmco
Y2hhcmFjdGVycyk7Cn0KCi8vIHJldHVybnMgdGhlIHN0cmluZyBhcyBhIGxpc3Qgb2YgY2hhcmFj
dGVycyAKcHVibGljIHN0YXRpYyBDaGFyYWN0ZXJbXSBjaGFyYWN0ZXJzKFN0cmluZyBpbnB1dCkg
ewogIGlmIChpbnB1dCA9PSBudWxsKSByZXR1cm4gbnVsbDsKCiAgY2hhcltdIGNoYXJzID0gaW5w
dXQudG9DaGFyQXJyYXkoKTsKICBDaGFyYWN0ZXJbXSBjaGFyYWN0ZXJzID0gbmV3IENoYXJhY3Rl
cltjaGFycy5sZW5ndGhdOwogIGZvciAoaW50IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKysp
IHsKICAgIGNoYXJhY3RlcnNbaV0gPSBjaGFyc1tpXTsKICB9CgogIHJldHVybiBjaGFyYWN0ZXJz
Owp9CgovLyBjb252ZXJ0cyBhIGJ5dGUgYXJyYXksIGlucHV0IHN0cmVhbSBvciBzdHJpbmcgdG8g
YSBzdHJpbmcKcHVibGljIHN0YXRpYyBTdHJpbmcgbm9ybWFsaXplKE9iamVjdCBvYmplY3QsIFN0
cmluZyBlbmNvZGluZykgdGhyb3dzIGphdmEuaW8uSU9FeGNlcHRpb24gewogIGlmIChlbmNvZGlu
ZyA9PSBudWxsKSBlbmNvZGluZyA9IHR1bmRyYS5zdXBwb3J0LmNvbnN0YW50LkRFRkFVTFRfQ0hB
UkFDVEVSX0VOQ09ESU5HOwogIAogIFN0cmluZyBzdHJpbmcgPSBudWxsOwogIAogIGlmIChvYmpl
Y3QgIT0gbnVsbCkgewogICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIFN0cmluZykgewogICAgICBz
dHJpbmcgPSAoU3RyaW5nKW9iamVjdDsKICAgIH0gZWxzZSBpZiAob2JqZWN0IGluc3RhbmNlb2Yg
Ynl0ZVtdKSB7CiAgICAgIHN0cmluZyA9IG5ldyBTdHJpbmcoKGJ5dGVbXSlvYmplY3QsIGVuY29k
aW5nKTsKICAgIH0gZWxzZSBpZiAob2JqZWN0IGluc3RhbmNlb2YgamF2YS5pby5JbnB1dFN0cmVh
bSkgeyAgICAgIAogICAgICBqYXZhLmlvLldyaXRlciB3cml0ZXIgPSBuZXcgamF2YS5pby5TdHJp
bmdXcml0ZXIoKTsKICAgICAgdHVuZHJhLnN0cmVhbS5jb3B5KG5ldyBqYXZhLmlvLklucHV0U3Ry
ZWFtUmVhZGVyKChqYXZhLmlvLklucHV0U3RyZWFtKW9iamVjdCwgZW5jb2RpbmcpLCB3cml0ZXIp
OwogICAgICBzdHJpbmcgPSB3cml0ZXIudG9TdHJpbmcoKTsKICAgIH0gZWxzZSB7CiAgICAgIHRo
cm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oIm9iamVjdCBtdXN0IGJlIGEgc3RyaW5n
LCBieXRlW10gb3IgamF2YS5pby5JbnB1dFN0cmVhbTogIiArIG9iamVjdC5nZXRDbGFzcygpLmdl
dE5hbWUoKSk7CiAgICB9CiAgfQoKICByZXR1cm4gc3RyaW5nOwp9CgovLyBjb252ZXJ0cyBhIGJ5
dGUgYXJyYXksIGlucHV0IHN0cmVhbSBvciBzdHJpbmcgdG8gYSBzdHJpbmcKcHVibGljIHN0YXRp
YyBTdHJpbmcgbm9ybWFsaXplKE9iamVjdCBvYmplY3QpIHRocm93cyBqYXZhLmlvLklPRXhjZXB0
aW9uIHsKICByZXR1cm4gbm9ybWFsaXplKG9iamVjdCwgdHVuZHJhLnN1cHBvcnQuY29uc3RhbnQu
REVGQVVMVF9DSEFSQUNURVJfRU5DT0RJTkcpOwp9CgovLyByZXR1cm5zIGEgbmV3IGphdmEudXRp
bC5Mb2NhbGUgb2JqZWN0IGZvciB0aGUgZ2l2ZW4gbGFuZ3VhZ2UsIGNvdW50cnkgYW5kIHZhcmlh
bnQKcHVibGljIHN0YXRpYyBqYXZhLnV0aWwuTG9jYWxlIGxvY2FsZShTdHJpbmcgbGFuZ3VhZ2Us
IFN0cmluZyBjb3VudHJ5LCBTdHJpbmcgdmFyaWFudCkgewogIGphdmEudXRpbC5Mb2NhbGUgbG9j
YWxlID0gamF2YS51dGlsLkxvY2FsZS5nZXREZWZhdWx0KCk7CiAgCiAgaWYgKGxhbmd1YWdlICE9
IG51bGwpIHsgCiAgICBpZiAoY291bnRyeSA9PSBudWxsKSB7CiAgICAgIGxvY2FsZSA9IG5ldyBq
YXZhLnV0aWwuTG9jYWxlKGxhbmd1YWdlKTsKICAgIH0gZWxzZSBpZiAodmFyaWFudCA9PSBudWxs
KSB7CiAgICAgIGxvY2FsZSA9IG5ldyBqYXZhLnV0aWwuTG9jYWxlKGxhbmd1YWdlLCBjb3VudHJ5
KTsKICAgIH0gZWxzZSB7CiAgICAgIGxvY2FsZSA9IG5ldyBqYXZhLnV0aWwuTG9jYWxlKGxhbmd1
YWdlLCBjb3VudHJ5LCB2YXJpYW50KTsKICAgIH0KICB9CiAgCiAgcmV0dXJuIGxvY2FsZTsKfQoK
Ly8gY29udmVydHMgYW4gSURhdGEgbG9jYWxlIG9iamVjdCB0byBhIGphdmEudXRpbC5Mb2NhbGUg
b2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkxvY2FsZSBsb2NhbGUoSURhdGEgZG9jdW1l
bnQpIHsKICBTdHJpbmcgbGFuZ3VhZ2UgPSBudWxsLCBjb3VudHJ5ID0gbnVsbCwgdmFyaWFudCA9
IG51bGw7CiAgCiAgaWYgKGRvY3VtZW50ICE9IG51bGwpIHsKICAgIElEYXRhQ3Vyc29yIGN1cnNv
ciA9IGRvY3VtZW50LmdldEN1cnNvcigpOyAgICAKICAgIGxhbmd1YWdlID0gSURhdGFVdGlsLmdl
dFN0cmluZyhjdXJzb3IsICJsYW5ndWFnZSIpOwogICAgY291bnRyeSA9IElEYXRhVXRpbC5nZXRT
dHJpbmcoY3Vyc29yLCAiY291bnRyeSIpOwogICAgdmFyaWFudCA9IElEYXRhVXRpbC5nZXRTdHJp
bmcoY3Vyc29yLCAidmFyaWFudCIpOwogICAgY3Vyc29yLmRlc3Ryb3koKTsKICB9CiAgCiAgcmV0
dXJuIGxvY2FsZShsYW5ndWFnZSwgY291bnRyeSwgdmFyaWFudCk7Cn0KCi8vIGNvbXBhcmVzIHR3
byBzdHJpbmdzIGxleGljb2dyYXBoaWNhbGx5CnB1YmxpYyBzdGF0aWMgaW50IGNvbXBhcmUoU3Ry
aW5nIHgsIFN0cmluZyB5LCBib29sZWFuIGNhc2VJbnNlbnNpdGl2ZSkgewogIGlmICh4ID09IG51
bGwgJiYgeSA9PSBudWxsKSByZXR1cm4gMDsKICBpZiAoeCA9PSBudWxsICYmIHkgIT0gbnVsbCkg
cmV0dXJuIC0xOwogIGlmICh4ICE9IG51bGwgJiYgeSA9PSBudWxsKSByZXR1cm4gMTsKCiAgaWYg
KGNhc2VJbnNlbnNpdGl2ZSkgewogICAgcmV0dXJuIHguY29tcGFyZVRvSWdub3JlQ2FzZSh5KTsK
ICB9IGVsc2UgewogICAgcmV0dXJuIHguY29tcGFyZVRvKHkpOwogIH0KfQoKLy8gcmV0dXJucyB0
aGUgZ2l2ZW4gc3RyaW5nIHdpdGggbGVhZGluZyBhbmQgdHJhaWxpbmcgd2hpdGVzcGFjZSByZW1v
dmVkCnB1YmxpYyBzdGF0aWMgU3RyaW5nIHRyaW0oU3RyaW5nIGlucHV0KSB7CiAgU3RyaW5nIG91
dHB1dCA9IG51bGw7CiAgaWYgKGlucHV0ICE9IG51bGwpIG91dHB1dCA9IGlucHV0LnRyaW0oKTsK
ICByZXR1cm4gb3V0cHV0Owp9CgovLyByZXR1cm5zIHRoZSBsZW5ndGggKG51bWJlciBvZiBjaGFy
YWN0ZXJzKSBvZiB0aGUgc3RyaW5nCnB1YmxpYyBzdGF0aWMgaW50IGxlbmd0aChTdHJpbmcgaW5w
dXQpIHsKICBpbnQgbGVuZ3RoID0gMDsKICBpZiAoaW5wdXQgIT0gbnVsbCkgbGVuZ3RoID0gaW5w
dXQubGVuZ3RoKCk7CiAgcmV0dXJuIGxlbmd0aDsKfQoKLy8gcmV0dXJucyBhIHN1YnN0cmluZyBz
dGFydGluZyBhdCB0aGUgZ2l2ZW4gaW5kZXggZm9yIHRoZSBnaXZlbiBsZW5ndGgKcHVibGljIHN0
YXRpYyBTdHJpbmcgc2xpY2UoU3RyaW5nIGlucHV0LCBTdHJpbmcgaW5kZXgsIFN0cmluZyBsZW5n
dGgpIHsKICBpbnQgaXggPSBpbmRleCA9PSBudWxsID8gMCA6IEludGVnZXIucGFyc2VJbnQoaW5k
ZXgpOwogIGludCBsZW4gPSBsZW5ndGggPT0gbnVsbCA/IChpbnB1dCA9PSBudWxsID8gMCA6IChp
eCA8IDAgPyAtaW5wdXQubGVuZ3RoKCkgOiBpbnB1dC5sZW5ndGgoKSkpIDogSW50ZWdlci5wYXJz
ZUludChsZW5ndGgpOwogIHJldHVybiBzbGljZShpbnB1dCwgaXgsIGxlbik7Cn0KCi8vIHJldHVy
bnMgYSBzdWJzdHJpbmcgc3RhcnRpbmcgYXQgdGhlIGdpdmVuIGluZGV4IGZvciB0aGUgZ2l2ZW4g
bGVuZ3RoCnB1YmxpYyBzdGF0aWMgU3RyaW5nIHNsaWNlKFN0cmluZyBpbnB1dCwgaW50IGluZGV4
LCBpbnQgbGVuZ3RoKSB7CiAgaWYgKGlucHV0ID09IG51bGwgfHwgaW5wdXQuZXF1YWxzKCIiKSkg
cmV0dXJuIGlucHV0OwoKICBTdHJpbmcgb3V0cHV0ID0gIiI7CiAgaW50IGlucHV0TGVuZ3RoID0g
aW5wdXQubGVuZ3RoKCksIGVuZEluZGV4ID0gMDsKCiAgLy8gc3VwcG9ydCByZXZlcnNlIGxlbmd0
aAogIGlmIChsZW5ndGggPCAwKSB7CiAgICAvLyBzdXBwb3J0IHJldmVyc2UgaW5kZXhpbmcKICAg
IGlmIChpbmRleCA8IDApIHsKICAgICAgZW5kSW5kZXggPSBpbmRleCArIGlucHV0TGVuZ3RoICsg
MTsKICAgIH0gZWxzZSB7CiAgICAgIGlmIChpbmRleCA+PSBpbnB1dExlbmd0aCkgaW5kZXggPSBp
bnB1dExlbmd0aCAtIDE7CiAgICAgIGVuZEluZGV4ID0gaW5kZXggKyAxOwogICAgfQogICAgaW5k
ZXggPSBlbmRJbmRleCArIGxlbmd0aDsKICB9IGVsc2UgewogICAgLy8gc3VwcG9ydCByZXZlcnNl
IGluZGV4aW5nCiAgICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBpbnB1dExlbmd0aDsgIAogICAg
ZW5kSW5kZXggPSBpbmRleCArIGxlbmd0aDsKICB9CgogIGlmIChpbmRleCA8IGlucHV0TGVuZ3Ro
ICYmIGVuZEluZGV4ID4gMCkgewogICAgaWYgKGluZGV4IDwgMCkgaW5kZXggPSAwOwogICAgaWYg
KGVuZEluZGV4ID4gaW5wdXRMZW5ndGgpIGVuZEluZGV4ID0gaW5wdXRMZW5ndGg7CgogICAgb3V0
cHV0ID0gaW5wdXQuc3Vic3RyaW5nKGluZGV4LCBlbmRJbmRleCk7CiAgfQoKICByZXR1cm4gb3V0
cHV0Owp9CgovLyByZXR1cm5zIGFsbCB0aGUgZ3JvdXBzIGNhcHR1cmVkIGJ5IHRoZSBnaXZlbiBy
ZWd1bGFyIGV4cHJlc3Npb24gcGF0dGVybgovLyBpbiB0aGUgZ2l2ZW4gc3RyaW5nCnB1YmxpYyBz
dGF0aWMgSURhdGFbXSBjYXB0dXJlKFN0cmluZyBpbnB1dCwgU3RyaW5nIHBhdHRlcm4pIHsKICBp
ZiAoaW5wdXQgPT0gbnVsbCB8fCBwYXR0ZXJuID09IG51bGwpIHJldHVybiBudWxsOwoKICBqYXZh
LnV0aWwuTGlzdDxJRGF0YT4gY2FwdHVyZXMgPSBuZXcgamF2YS51dGlsLkFycmF5TGlzdDxJRGF0
YT4oKTsKICBqYXZhLnV0aWwucmVnZXguUGF0dGVybiByZWdleCA9IGphdmEudXRpbC5yZWdleC5Q
YXR0ZXJuLmNvbXBpbGUocGF0dGVybik7CiAgamF2YS51dGlsLnJlZ2V4Lk1hdGNoZXIgbWF0Y2hl
ciA9IHJlZ2V4Lm1hdGNoZXIoaW5wdXQpOwoKICB3aGlsZShtYXRjaGVyLmZpbmQoKSkgewogICAg
aW50IGNvdW50ID0gbWF0Y2hlci5ncm91cENvdW50KCk7CiAgICBqYXZhLnV0aWwuTGlzdDxJRGF0
YT4gZ3JvdXBzID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8SURhdGE+KGNvdW50KTsKICAgIGZv
ciAoaW50IGkgPSAwOyBpIDw9IGNvdW50OyBpKyspIHsKICAgICAgaW50IGluZGV4ID0gbWF0Y2hl
ci5zdGFydChpKTsKICAgICAgaW50IGxlbmd0aCA9IG1hdGNoZXIuZW5kKGkpIC0gaW5kZXg7CiAg
ICAgIFN0cmluZyBjb250ZW50ID0gbWF0Y2hlci5ncm91cChpKTsKICAgICAgYm9vbGVhbiBjYXB0
dXJlZCA9IGluZGV4ID49IDA7CgogICAgICBJRGF0YSBncm91cCA9IElEYXRhRmFjdG9yeS5jcmVh
dGUoKTsKICAgICAgSURhdGFDdXJzb3IgZ2MgPSBncm91cC5nZXRDdXJzb3IoKTsKICAgICAgSURh
dGFVdGlsLnB1dChnYywgImNhcHR1cmVkPyIsICIiICsgY2FwdHVyZWQpOwogICAgICBpZiAoY2Fw
dHVyZWQpIHsKICAgICAgICBJRGF0YVV0aWwucHV0KGdjLCAiaW5kZXgiLCAiIiArIGluZGV4KTsK
ICAgICAgICBJRGF0YVV0aWwucHV0KGdjLCAibGVuZ3RoIiwgIiIgKyBsZW5ndGgpOwogICAgICAg
IElEYXRhVXRpbC5wdXQoZ2MsICJjb250ZW50IiwgY29udGVudCk7CiAgICAgIH0KICAgICAgZ2Mu
ZGVzdHJveSgpOwogICAgICBncm91cHMuYWRkKGdyb3VwKTsKICAgIH0KCiAgICBJRGF0YSBjYXB0
dXJlID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogICAgSURhdGFDdXJzb3IgY2MgPSBjYXB0dXJl
LmdldEN1cnNvcigpOwogICAgSURhdGFVdGlsLnB1dChjYywgImdyb3VwcyIsIChJRGF0YVtdKWdy
b3Vwcy50b0FycmF5KG5ldyBJRGF0YVswXSkpOwogICAgSURhdGFVdGlsLnB1dChjYywgImdyb3Vw
cy5sZW5ndGgiLCAiIiArIGdyb3Vwcy5zaXplKCkpOwogICAgY2MuZGVzdHJveSgpOwogICAgY2Fw
dHVyZXMuYWRkKGNhcHR1cmUpOwogIH0KCiAgcmV0dXJuIChJRGF0YVtdKWNhcHR1cmVzLnRvQXJy
YXkobmV3IElEYXRhWzBdKTsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiByZWd1bGFy
IGV4cHJlc3Npb24gcGF0dGVybiBpcyBmb3VuZCBhbnl3aGVyZSBpbiB0aGUgZ2l2ZW4gc3RyaW5n
CnB1YmxpYyBzdGF0aWMgYm9vbGVhbiBmaW5kKFN0cmluZyBpbnB1dCwgU3RyaW5nIHBhdHRlcm4p
IHsKICByZXR1cm4gZmluZChpbnB1dCwgcGF0dGVybiwgZmFsc2UpOwp9CgovLyByZXR1cm5zIHRy
dWUgaWYgdGhlIGdpdmVuIHJlZ3VsYXIgZXhwcmVzc2lvbiBvciBsaXRlcmFsIHBhdHRlcm4gaXMg
Zm91bmQgYW55d2hlcmUgaW4gdGhlIGdpdmVuIHN0cmluZwpwdWJsaWMgc3RhdGljIGJvb2xlYW4g
ZmluZChTdHJpbmcgaW5wdXQsIFN0cmluZyBwYXR0ZXJuLCBib29sZWFuIGxpdGVyYWwpIHsKICBi
b29sZWFuIGZvdW5kID0gZmFsc2U7CiAgaWYgKGlucHV0ICE9IG51bGwgJiYgcGF0dGVybiAhPSBu
dWxsKSB7CiAgICBpZiAobGl0ZXJhbCkgewogICAgICBmb3VuZCA9IGlucHV0LmluZGV4T2YocGF0
dGVybikgPj0gMDsKICAgIH0gZWxzZSB7CiAgICAgIGphdmEudXRpbC5yZWdleC5QYXR0ZXJuIHJl
Z2V4ID0gamF2YS51dGlsLnJlZ2V4LlBhdHRlcm4uY29tcGlsZShwYXR0ZXJuKTsKICAgICAgamF2
YS51dGlsLnJlZ2V4Lk1hdGNoZXIgbWF0Y2hlciA9IHJlZ2V4Lm1hdGNoZXIoaW5wdXQpOwogICAg
ICBmb3VuZCA9IG1hdGNoZXIuZmluZCgpOwogICAgfQogIH0KICByZXR1cm4gZm91bmQ7Cn0KCi8v
IHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gcmVndWxhciBleHByZXNzaW9uIHBhdHRlcm4gbWF0
Y2hlcyB0aGUgZ2l2ZW4gc3RyaW5nCnB1YmxpYyBzdGF0aWMgYm9vbGVhbiBtYXRjaChTdHJpbmcg
aW5wdXQsIFN0cmluZyBwYXR0ZXJuKSB7CiAgcmV0dXJuIG1hdGNoKGlucHV0LCBwYXR0ZXJuLCBm
YWxzZSk7Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gcmVndWxhciBleHByZXNzaW9u
IG9yIGxpdGVyYWwgcGF0dGVybiBtYXRjaGVzIHRoZSBnaXZlbiBzdHJpbmcKcHVibGljIHN0YXRp
YyBib29sZWFuIG1hdGNoKFN0cmluZyBpbnB1dCwgU3RyaW5nIHBhdHRlcm4sIGJvb2xlYW4gbGl0
ZXJhbCkgewogIGJvb2xlYW4gbWF0Y2ggPSBmYWxzZTsKICBpZiAoaW5wdXQgIT0gbnVsbCAmJiBw
YXR0ZXJuICE9IG51bGwpIHsKICAgIGlmIChsaXRlcmFsKSB7CiAgICAgIG1hdGNoID0gaW5wdXQu
ZXF1YWxzKHBhdHRlcm4pOwogICAgfSBlbHNlIHsKICAgICAgbWF0Y2ggPSBpbnB1dC5tYXRjaGVz
KHBhdHRlcm4pOwogICAgfQogIH0KICByZXR1cm4gbWF0Y2g7Cn0KCi8vIHJlcGxhY2VzIGFsbCBv
Y2N1cnJlbmNlcyBvZiB0aGUgZ2l2ZW4gcmVndWxhciBleHByZXNzaW9uIGluIHRoZSBnaXZlbiBz
dHJpbmcgd2l0aCB0aGUgZ2l2ZW4gcmVwbGFjZW1lbnQKcHVibGljIHN0YXRpYyBTdHJpbmcgcmVw
bGFjZShTdHJpbmcgaW5wdXQsIFN0cmluZyByZWdleCwgU3RyaW5nIHJlcGxhY2VtZW50LCBib29s
ZWFuIGxpdGVyYWwpIHsKICBTdHJpbmcgb3V0cHV0ID0gaW5wdXQ7CiAgaWYgKGlucHV0ICE9IG51
bGwgJiYgcmVnZXggIT0gbnVsbCAmJiByZXBsYWNlbWVudCAhPSBudWxsKSB7CiAgICBpZiAobGl0
ZXJhbCkgcmVwbGFjZW1lbnQgPSBqYXZhLnV0aWwucmVnZXguTWF0Y2hlci5xdW90ZVJlcGxhY2Vt
ZW50KHJlcGxhY2VtZW50KTsKICAgIGphdmEudXRpbC5yZWdleC5QYXR0ZXJuIHBhdHRlcm4gPSBq
YXZhLnV0aWwucmVnZXguUGF0dGVybi5jb21waWxlKHJlZ2V4KTsKICAgIGphdmEudXRpbC5yZWdl
eC5NYXRjaGVyIG1hdGNoZXIgPSBwYXR0ZXJuLm1hdGNoZXIoaW5wdXQpOwogICAgb3V0cHV0ID0g
bWF0Y2hlci5yZXBsYWNlQWxsKHJlcGxhY2VtZW50KTsKICB9CiAgcmV0dXJuIG91dHB1dDsKfQoK
Ly8gc3BsaXRzIGEgc3RyaW5nIGFyb3VuZCBlYWNoIG1hdGNoIG9mIHRoZSBnaXZlbiByZWd1bGFy
IGV4cHJlc3Npb24gcGF0dGVybgpwdWJsaWMgc3RhdGljIFN0cmluZ1tdIHNwbGl0KFN0cmluZyBp
bnB1dCwgU3RyaW5nIHJlZ2V4KSB7CiAgU3RyaW5nW10gb3V0cHV0ID0gbnVsbDsKICBpZiAoaW5w
dXQgIT0gbnVsbCAmJiByZWdleCAhPSBudWxsKSB7CiAgICBqYXZhLnV0aWwucmVnZXguUGF0dGVy
biBwYXR0ZXJuID0gamF2YS51dGlsLnJlZ2V4LlBhdHRlcm4uY29tcGlsZShyZWdleCk7CiAgICBv
dXRwdXQgPSBwYXR0ZXJuLnNwbGl0KGlucHV0KTsKICB9CiAgcmV0dXJuIG91dHB1dDsKfQoKLy8g
cmV0dXJucyBhbGwgdGhlIGxpbmVzIGluIHRoZSBnaXZlbiBzdHJpbmcgYXMgYW4gYXJyYXkKcHVi
bGljIHN0YXRpYyBTdHJpbmdbXSBsaW5lcyhTdHJpbmcgaW5wdXQpIHsKICByZXR1cm4gc3BsaXQo
aW5wdXQsICJcbiIpOwp9CgovLyByZXBsYWNlcyBydW5zIG9mIHdoaXRlc3BhY2UgY2hhcmFjdGVy
cyB3aXRoIGEgc2luZ2xlIHNwYWNlCnB1YmxpYyBzdGF0aWMgU3RyaW5nIHNxdWVlemUoU3RyaW5n
IGlucHV0KSB7CiAgcmV0dXJuIHJlcGxhY2UoaW5wdXQsICJcXHMrIiwgIiAiLCBmYWxzZSk7Cn0K
CnB1YmxpYyBzdGF0aWMgZmluYWwgamF2YS51dGlsLnJlZ2V4LlBhdHRlcm4gU1VCU1RJVFVUSU9O
X1BBVFRFUk4gPSBqYXZhLnV0aWwucmVnZXguUGF0dGVybi5jb21waWxlKCIlKFteJV0rKSUiKTsK
Ci8vIHBlcmZvcm1zIHZhcmlhYmxlIHN1YnN0aXR1dGlvbiBvbiB0aGUgZ2l2ZW4gc3RyaW5nIGJ5
IHJlcGxhY2luZyBhbGwgb2NjdXJyZW5jZXMgb2YgCi8vIHN1YnN0cmluZ3MgbWF0Y2hpbmcgIiVr
ZXklIiB3aXRoIHRoZSBhc3NvY2lhdGVkIHZhbHVlIGZyb20gdGhlIGdpdmVuIHNjb3BlCnB1Ymxp
YyBzdGF0aWMgU3RyaW5nIHN1YnN0aXR1dGUoU3RyaW5nIGlucHV0LCBJRGF0YSBzY29wZSkgewog
IHJldHVybiBzdWJzdGl0dXRlKGlucHV0LCBzY29wZSwgbnVsbCk7Cn0KCi8vIHBlcmZvcm1zIHZh
cmlhYmxlIHN1YnN0aXR1dGlvbiBvbiB0aGUgZ2l2ZW4gc3RyaW5nIGJ5IHJlcGxhY2luZyBhbGwg
b2NjdXJyZW5jZXMgb2YgCi8vIHN1YnN0cmluZ3MgbWF0Y2hpbmcgIiVrZXklIiB3aXRoIHRoZSBh
c3NvY2lhdGVkIHZhbHVlIGZyb20gdGhlIGdpdmVuIHNjb3BlOyBpZgovLyB0aGUga2V5IGhhcyBu
byB2YWx1ZSwgdGhlIGdpdmVuIGRlZmF1bHRWYWx1ZSBpcyB1c2VkIGluc3RlYWQKcHVibGljIHN0
YXRpYyBTdHJpbmcgc3Vic3RpdHV0ZShTdHJpbmcgaW5wdXQsIElEYXRhIHNjb3BlLCBTdHJpbmcg
ZGVmYXVsdFZhbHVlKSB7CiAgaWYgKGlucHV0ID09IG51bGwgfHwgc2NvcGUgPT0gbnVsbCkgcmV0
dXJuIGlucHV0OwoKICBqYXZhLnV0aWwucmVnZXguTWF0Y2hlciBtYXRjaGVyID0gU1VCU1RJVFVU
SU9OX1BBVFRFUk4ubWF0Y2hlcihpbnB1dCk7CiAgU3RyaW5nQnVmZmVyIG91dHB1dCA9IG5ldyBT
dHJpbmdCdWZmZXIoKTsKCiAgd2hpbGUobWF0Y2hlci5maW5kKCkpIHsKICAgIFN0cmluZyBrZXkg
PSBtYXRjaGVyLmdyb3VwKDEpOwogICAgT2JqZWN0IHZhbHVlID0gdHVuZHJhLnN1cHBvcnQuZG9j
dW1lbnQuZ2V0KHNjb3BlLCBrZXkpOwoKICAgIGlmICh2YWx1ZSAhPSBudWxsICYmIHZhbHVlIGlu
c3RhbmNlb2YgU3RyaW5nKSB7CiAgICAgIG1hdGNoZXIuYXBwZW5kUmVwbGFjZW1lbnQob3V0cHV0
LCBtYXRjaGVyLnF1b3RlUmVwbGFjZW1lbnQoKFN0cmluZyl2YWx1ZSkpOwogICAgfSBlbHNlIGlm
IChkZWZhdWx0VmFsdWUgIT0gbnVsbCkgewogICAgICBtYXRjaGVyLmFwcGVuZFJlcGxhY2VtZW50
KG91dHB1dCwgbWF0Y2hlci5xdW90ZVJlcGxhY2VtZW50KGRlZmF1bHRWYWx1ZSkpOwogICAgfSBl
bHNlIHsKICAgICAgbWF0Y2hlci5hcHBlbmRSZXBsYWNlbWVudChvdXRwdXQsIG1hdGNoZXIucXVv
dGVSZXBsYWNlbWVudChtYXRjaGVyLmdyb3VwKDApKSk7CiAgICB9CiAgfQoKICBtYXRjaGVyLmFw
cGVuZFRhaWwob3V0cHV0KTsKICByZXR1cm4gb3V0cHV0LnRvU3RyaW5nKCk7Cn0KCi8vIHJldHVy
bnMgYSBsaXRlcmFsIHJlZ3VsYXIgZXhwcmVzc2lvbiBwYXR0ZXJuIGZvciB0aGUgZ2l2ZW4gc3Ry
aW5nCnB1YmxpYyBzdGF0aWMgU3RyaW5nIHF1b3RlKFN0cmluZyBzdHJpbmcpIHsKICBpZiAoc3Ry
aW5nID09IG51bGwpIHJldHVybiBudWxsOwogIHJldHVybiBqYXZhLnV0aWwucmVnZXguUGF0dGVy
bi5xdW90ZShzdHJpbmcpOwp9CgovLyBwYWRzIGEgc3RyaW5nIHdpdGggdGhlIGdpdmVuIGNoYXJh
Y3RlciB0byB0aGUgZ2l2ZW4gbGVuZ3RoOwovLyBpZiBsZW5ndGggPCAwLCBwYWRzIGZyb20gcmln
aHQgdG8gbGVmdApwdWJsaWMgc3RhdGljIFN0cmluZyBwYWQoU3RyaW5nIGlucHV0LCBTdHJpbmcg
bGVuZ3RoLCBTdHJpbmcgY2hhcmFjdGVyKSB7CiAgaW50IGxlbiA9IGxlbmd0aCA9PSBudWxsID8g
KGlucHV0ID09IG51bGwgPyAwIDogaW5wdXQubGVuZ3RoKCkpIDogSW50ZWdlci5wYXJzZUludChs
ZW5ndGgpOwogIGNoYXIgYyA9IGNoYXJhY3RlciA9PSBudWxsID8gJyAnIDogY2hhcmFjdGVyLmNo
YXJBdCgwKTsKICByZXR1cm4gcGFkKGlucHV0LCBsZW4sIGMpOwp9CgovLyBwYWRzIGEgc3RyaW5n
IHdpdGggdGhlIGdpdmVuIGNoYXJhY3RlciB0byB0aGUgZ2l2ZW4gbGVuZ3RoCi8vIGlmIGxlbmd0
aCA8IDAsIHBhZHMgZnJvbSByaWdodCB0byBsZWZ0CnB1YmxpYyBzdGF0aWMgU3RyaW5nIHBhZChT
dHJpbmcgaW5wdXQsIGludCBsZW5ndGgsIGNoYXIgY2hhcmFjdGVyKSB7CiAgYm9vbGVhbiBsZWZ0
ID0gbGVuZ3RoID49IDA7CiAgaWYgKGxlbmd0aCA8IDApIGxlbmd0aCA9IGxlbmd0aCAqIC0xOwoK
ICAvLyBUT0RPOiBpZiBwYWRkaW5nIGEgbnVsbCBzdHJpbmcsIHNob3VsZCB3ZSByZXR1cm4gbGVu
Z3RoICogY2hhcmFjdGVyPwogIGlmIChpbnB1dCA9PSBudWxsIHx8IGlucHV0Lmxlbmd0aCgpID49
IGxlbmd0aCkgcmV0dXJuIGlucHV0OwoKICBTdHJpbmdCdWlsZGVyIGJ1aWxkZXIgPSBuZXcgU3Ry
aW5nQnVpbGRlcihsZW5ndGgpOwoKICBpZiAoIWxlZnQpIGJ1aWxkZXIuYXBwZW5kKGlucHV0KTsK
CiAgZm9yIChpbnQgaSA9IGlucHV0Lmxlbmd0aCgpOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgIGJ1
aWxkZXIuYXBwZW5kKGNoYXJhY3Rlcik7CiAgfQogIAogIGlmIChsZWZ0KSBidWlsZGVyLmFwcGVu
ZChpbnB1dCk7CgogIHJldHVybiBidWlsZGVyLnRvU3RyaW5nKCk7Cn0KCQ==</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>permafrost.tundra.lang.BooleanHelper</value>
  </array>
</Values>
