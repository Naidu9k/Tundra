<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.list.document</value>
  <value name="shared">Ly8gcmV0dXJucyBhIG5ldyBJRGF0YVtdIHdpdGggYWxsIG51bGwgdmFsdWVzIHJlbW92ZWQKcHVi
bGljIHN0YXRpYyBJRGF0YVtdIGNvbXBhY3QoSURhdGFbXSBhcnJheSwgYm9vbGVhbiByZWN1cnNl
KSB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwgYXJyYXkubGVuZ3RoID09IDApIHJldHVybiBhcnJh
eTsKCiAgLy8gdGFrZSBhIGNvcHkgb2YgdGhlIGFycmF5LCB0byBtYWtlIHN1cmUgaXQncyByZWFs
bHkgYW4gSURhdGFbXSBhbmQgbm90IHNvbWUgc3ViY2xhc3MgdGhhdCB3b24ndAogIC8vIGJlIGFi
bGUgdG8gc3RvcmUgZGlmZmVyZW50IElEYXRhIGltcGxlbWVudGF0aW9ucwogIGFycmF5ID0gKElE
YXRhW10pamF2YS51dGlsLkFycmF5cy5jb3B5T2YoYXJyYXksIGFycmF5Lmxlbmd0aCwgKG5ldyBJ
RGF0YVswXSkuZ2V0Q2xhc3MoKSk7CgogIGZvciAoaW50IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3Ro
OyBpKyspIHsKICAgIGlmIChhcnJheVtpXSAhPSBudWxsKSBhcnJheVtpXSA9IHR1bmRyYS5kb2N1
bWVudC5jb21wYWN0KGFycmF5W2ldLCByZWN1cnNlKTsKICB9CgogIHJldHVybiB0dW5kcmEubGlz
dC5vYmplY3QuY29tcGFjdChhcnJheSk7Cn0KCi8vIHJldHVybnMgdGhlIHVuaW9uIHNldCBvZiBr
ZXlzIHByZXNlbnQgaW4gZXZlcnkgaXRlbSBpbiB0aGUgZ2l2ZW4KLy8gSURhdGFbXSBkb2N1bWVu
dCBsaXN0CnB1YmxpYyBzdGF0aWMgU3RyaW5nW10ga2V5cyhJRGF0YVtdIGlucHV0KSB7CiAgcmV0
dXJuIGtleXMoaW5wdXQsIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSB1bmlvbiBzZXQgb2Yga2V5
cyBwcmVzZW50IGluIGV2ZXJ5IGl0ZW0gaW4gdGhlIGdpdmVuCi8vIElEYXRhW10gZG9jdW1lbnQg
bGlzdApwdWJsaWMgc3RhdGljIFN0cmluZ1tdIGtleXMoSURhdGFbXSBpbnB1dCwgU3RyaW5nIHBh
dHRlcm5TdHJpbmcpIHsKICBqYXZhLnV0aWwucmVnZXguUGF0dGVybiBwYXR0ZXJuID0gbnVsbDsK
ICBpZiAocGF0dGVyblN0cmluZyAhPSBudWxsKSBwYXR0ZXJuID0gamF2YS51dGlsLnJlZ2V4LlBh
dHRlcm4uY29tcGlsZShwYXR0ZXJuU3RyaW5nKTsKICAKICBqYXZhLnV0aWwuU2V0PFN0cmluZz4g
a2V5cyA9IG5ldyBqYXZhLnV0aWwuTGlua2VkSGFzaFNldDxTdHJpbmc+KCk7CgogIGlmIChpbnB1
dCAhPSBudWxsKSB7CiAgICBmb3IgKElEYXRhIGRvY3VtZW50IDogaW5wdXQpIHsKICAgICAgaWYg
KGRvY3VtZW50ICE9IG51bGwpIHsKICAgICAgICBJRGF0YUN1cnNvciBjdXJzb3IgPSBkb2N1bWVu
dC5nZXRDdXJzb3IoKTsKICAgICAgICB3aGlsZShjdXJzb3IubmV4dCgpKSB7CiAgICAgICAgICBT
dHJpbmcga2V5ID0gY3Vyc29yLmdldEtleSgpOwogICAgICAgICAgCiAgICAgICAgICBpZiAocGF0
dGVybiA9PSBudWxsKSB7CiAgICAgICAgICAgIGtleXMuYWRkKGtleSk7CiAgICAgICAgICB9IGVs
c2UgewogICAgICAgICAgICBqYXZhLnV0aWwucmVnZXguTWF0Y2hlciBtYXRjaGVyID0gcGF0dGVy
bi5tYXRjaGVyKGtleSk7CiAgICAgICAgICAgIGlmIChtYXRjaGVyLm1hdGNoZXMoKSkga2V5cy5h
ZGQoa2V5KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY3Vyc29yLmRlc3Ryb3koKTsg
ICAgIAogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4ga2V5cy50b0FycmF5KG5ldyBTdHJpbmdb
MF0pOwp9CgovLyByZXR1cm5zIGFuIElEYXRhIGRvY3VtZW50IHdoZXJlIHRoZSBrZXlzIGFyZSB0
aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aAovLyBnaXZlbiBwaXZvdCBrZXkgZnJvbSB0aGUgZ2l2
ZW4gSURhdGFbXSBkb2N1bWVudCBsaXN0LCBhbmQgdGhlIHZhbHVlcyBhcmUKLy8gdGhlIElEYXRh
W10gZG9jdW1lbnQgbGlzdCBpdGVtcyBhc3NvY2lhdGVkIHdpdGggZWFjaCBwaXZvdCBrZXkKcHVi
bGljIHN0YXRpYyBJRGF0YSBwaXZvdChJRGF0YVtdIGFycmF5LCBTdHJpbmcgcGl2b3RLZXkpIHsK
ICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBwaXZvdEtleSA9PSBudWxsKSByZXR1cm4gbnVsbDsKCiAg
SURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogIElEYXRhQ3Vyc29yIG9jID0g
b3V0cHV0LmdldEN1cnNvcigpOwoKICBmb3IgKElEYXRhIGl0ZW0gOiBhcnJheSkgewogICAgaWYg
KGl0ZW0gIT0gbnVsbCkgewogICAgICBJRGF0YUN1cnNvciBpYyA9IGl0ZW0uZ2V0Q3Vyc29yKCk7
CiAgICAgIE9iamVjdCB2YWx1ZSA9IElEYXRhVXRpbC5nZXQoaWMsIHBpdm90S2V5KTsKICAgICAg
aWYgKHZhbHVlICE9IG51bGwpIHsKICAgICAgICBTdHJpbmcga2V5ID0gdmFsdWUudG9TdHJpbmco
KTsKICAgICAgICBpZiAoSURhdGFVdGlsLmdldChvYywga2V5KSA9PSBudWxsKSBJRGF0YVV0aWwu
cHV0KG9jLCBrZXksIGl0ZW0pOwogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gb3V0cHV0Owp9
CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIGVsZW1lbnRzIHNvcnRlZCBpbiBhc2Nl
bmRpbmcgb3JkZXIgYnkKLy8gdGhlIHZhbHVlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuIGtl
eQpwdWJsaWMgc3RhdGljIElEYXRhW10gc29ydChJRGF0YVtdIGFycmF5LCBTdHJpbmcga2V5KSB7
CiAgcmV0dXJuIHNvcnQoYXJyYXksIGtleSwgdHJ1ZSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJy
YXkgd2l0aCBhbGwgZWxlbWVudHMgc29ydGVkIGVpdGhlciBpbiBhc2NlbmRpbmcgb3IKLy8gZGVz
Y2VuZGluZyBvcmRlciBieSB0aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZ2l2ZW4ga2V5
CnB1YmxpYyBzdGF0aWMgSURhdGFbXSBzb3J0KElEYXRhW10gYXJyYXksIFN0cmluZyBrZXksIGJv
b2xlYW4gYXNjZW5kaW5nKSB7CiAgU3RyaW5nW10ga2V5cyA9IG51bGw7CiAgaWYgKGtleSAhPSBu
dWxsKSB7CiAgICBrZXlzID0gbmV3IFN0cmluZ1sxXTsKICAgIGtleXNbMF0gPSBrZXk7CiAgfQoK
ICByZXR1cm4gc29ydChhcnJheSwga2V5cywgYXNjZW5kaW5nKTsKfQoKLy8gcmV0dXJucyBhIG5l
dyBhcnJheSB3aXRoIGFsbCBlbGVtZW50cyBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyIGJ5IHRo
ZSAKLy8gdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZ2l2ZW4ga2V5cwpwdWJsaWMgc3RhdGlj
IElEYXRhW10gc29ydChJRGF0YVtdIGFycmF5LCBTdHJpbmdbXSBrZXlzKSB7CiAgcmV0dXJuIHNv
cnQoYXJyYXksIGtleXMsIHRydWUpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxs
IGVsZW1lbnRzIHNvcnRlZCBieSB0aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCAKLy8gdGhlIGdp
dmVuIGtleXMKcHVibGljIHN0YXRpYyBJRGF0YVtdIHNvcnQoSURhdGFbXSBhcnJheSwgU3RyaW5n
W10ga2V5cywgYm9vbGVhbiBhc2NlbmRpbmcpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJh
eS5sZW5ndGggPCAyIHx8IGtleXMgPT0gbnVsbCB8fCBrZXlzLmxlbmd0aCA9PSAwKSByZXR1cm4g
YXJyYXk7CgogIElEYXRhW10gc29ydEtleXMgPSBuZXcgSURhdGFba2V5cy5sZW5ndGhdOwogIGZv
ciAoaW50IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgewogICAgc29ydEtleXNbaV0gPSBJ
RGF0YUZhY3RvcnkuY3JlYXRlKCk7CiAgICBJRGF0YUN1cnNvciBjdXJzb3IgPSBzb3J0S2V5c1tp
XS5nZXRDdXJzb3IoKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAia2V5Iiwga2V5c1tpXSk7
CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgImRlc2NlbmRpbmc/IiwgIiIgKyAhYXNjZW5kaW5n
KTsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAgfQoKICByZXR1cm4gc29ydChhcnJheSwgc29ydEtl
eXMpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIGVsZW1lbnRzIHNvcnRlZCBi
eSB0aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCAKLy8gdGhlIGdpdmVuIGtleXMKcHVibGljIHN0
YXRpYyBJRGF0YVtdIHNvcnQoSURhdGFbXSBhcnJheSwgSURhdGFbXSBjcml0ZXJpYSkgewogIGlm
IChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0aCA8IDIgfHwgY3JpdGVyaWEgPT0gbnVsbCB8
fCBjcml0ZXJpYS5sZW5ndGggPT0gMCkgcmV0dXJuIGFycmF5OwoKICBhcnJheSA9IGphdmEudXRp
bC5BcnJheXMuY29weU9mKGFycmF5LCBhcnJheS5sZW5ndGgpOwogIGphdmEudXRpbC5BcnJheXMu
c29ydChhcnJheSwgbmV3IElEYXRhQ29tcGFyYXRvcihjcml0ZXJpYSkpOwoKICByZXR1cm4gYXJy
YXk7Cn0KCi8vIHJldHVybnMgYSBuZXcgSURhdGFbXSB3aXRoIGFsbCBlbXB0eSBhbmQgbnVsbCBp
dGVtcyByZW1vdmVkCnB1YmxpYyBzdGF0aWMgSURhdGFbXSBzcXVlZXplKElEYXRhW10gYXJyYXks
IGJvb2xlYW4gcmVjdXJzZSkgewogIGlmIChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0aCA9
PSAwKSByZXR1cm4gYXJyYXk7CgogIC8vIHRha2UgYSBjb3B5IG9mIHRoZSBhcnJheSwgdG8gbWFr
ZSBzdXJlIGl0J3MgcmVhbGx5IGFuIElEYXRhW10gYW5kIG5vdCBzb21lIHN1YmNsYXNzIHRoYXQg
d29uJ3QKICAvLyBiZSBhYmxlIHRvIHN0b3JlIGRpZmZlcmVudCBJRGF0YSBpbXBsZW1lbnRhdGlv
bnMKICBhcnJheSA9IChJRGF0YVtdKWphdmEudXRpbC5BcnJheXMuY29weU9mKGFycmF5LCBhcnJh
eS5sZW5ndGgsIChuZXcgSURhdGFbMF0pLmdldENsYXNzKCkpOwoKICBqYXZhLnV0aWwuTGlzdDxJ
RGF0YT4gbGlzdCA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PElEYXRhPihhcnJheS5sZW5ndGgp
OwoKICBmb3IgKGludCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoYXJy
YXlbaV0gIT0gbnVsbCkgYXJyYXlbaV0gPSB0dW5kcmEuZG9jdW1lbnQuc3F1ZWV6ZShhcnJheVtp
XSwgcmVjdXJzZSk7CiAgICBpZiAoYXJyYXlbaV0gIT0gbnVsbCkgbGlzdC5hZGQoYXJyYXlbaV0p
OwogIH0KCiAgYXJyYXkgPSBsaXN0LnRvQXJyYXkobmV3IElEYXRhWzBdKTsKICBpZiAoYXJyYXku
bGVuZ3RoID09IDApIGFycmF5ID0gbnVsbDsKCiAgcmV0dXJuIGFycmF5Owp9CgovLyBjb21wYXJl
cyB0d28gSURhdGEgb2JqZWN0cyB1c2luZyB0aGUgdmFsdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUg
Z2l2ZW4gbGlzdAovLyBvZiBrZXlzCnB1YmxpYyBzdGF0aWMgY2xhc3MgSURhdGFDb21wYXJhdG9y
IGltcGxlbWVudHMgamF2YS51dGlsLkNvbXBhcmF0b3I8SURhdGE+IHsKICBwcm90ZWN0ZWQgSURh
dGFbXSBjcml0ZXJpYTsKCiAgcHVibGljIElEYXRhQ29tcGFyYXRvcihJRGF0YVtdIGNyaXRlcmlh
KSB7CiAgICB0aGlzLmNyaXRlcmlhID0gY3JpdGVyaWE7CiAgfQoKICBwcm90ZWN0ZWQgc3RhdGlj
IGludCBub3JtYWxpemUoaW50IHJlc3VsdCwgYm9vbGVhbiBkZXNjZW5kaW5nKSB7CiAgICBpZiAo
ZGVzY2VuZGluZykgewogICAgICBpZiAocmVzdWx0IDwgMCkgewogICAgICAgIHJlc3VsdCA9IDE7
CiAgICAgIH0gZWxzZSBpZiAocmVzdWx0ID4gMCkgewogICAgICAgIHJlc3VsdCA9IC0xOwogICAg
ICB9CiAgICB9CiAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgcHVibGljIGludCBjb21wYXJlKElE
YXRhIGEsIElEYXRhIGIpIHsKICAgIGludCByZXN1bHQgPSAwOwogICAgZm9yIChJRGF0YSBpdGVt
IDogY3JpdGVyaWEpIHsKICAgICAgSURhdGFDdXJzb3IgY3Vyc29yID0gaXRlbS5nZXRDdXJzb3Io
KTsKICAgICAgU3RyaW5nIGtleSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAia2V5Iik7
CiAgICAgIFN0cmluZyB0eXBlID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICJ0eXBlIik7
CiAgICAgIFN0cmluZyBwYXR0ZXJuID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICJwYXR0
ZXJuIik7CiAgICAgIGJvb2xlYW4gZGVzY2VuZGluZyA9IHR1bmRyYS5ib29sLnBhcnNlKElEYXRh
VXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAiZGVzY2VuZGluZz8iKSk7CiAgICAgIGN1cnNvci5kZXN0
cm95KCk7CgogICAgICBPYmplY3QgdmFsdWVfYSA9IHR1bmRyYS5zdXBwb3J0LmRvY3VtZW50Lmdl
dChhLCBrZXkpOwogICAgICBPYmplY3QgdmFsdWVfYiA9IHR1bmRyYS5zdXBwb3J0LmRvY3VtZW50
LmdldChiLCBrZXkpOwoKICAgICAgaWYgKHZhbHVlX2EgPT0gbnVsbCkgewogICAgICAgIGlmICh2
YWx1ZV9iICE9IG51bGwpIHsKICAgICAgICAgIHJlc3VsdCA9IG5vcm1hbGl6ZSgtMSwgZGVzY2Vu
ZGluZyk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAodmFsdWVf
YiA9PSBudWxsKSB7CiAgICAgICAgaWYgKHZhbHVlX2EgIT0gbnVsbCkgewogICAgICAgICAgcmVz
dWx0ID0gbm9ybWFsaXplKDEsIGRlc2NlbmRpbmcpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAg
fQogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0eXBlICE9IG51bGwpIHsKICAgICAgICAgIHZh
bHVlX2EgPSB2YWx1ZV9hLnRvU3RyaW5nKCk7CiAgICAgICAgICB2YWx1ZV9iID0gdmFsdWVfYi50
b1N0cmluZygpOwogICAgICAgICAgaWYgKHR5cGUuZXF1YWxzKCJpbnRlZ2VyIikpIHsKICAgICAg
ICAgICAgdmFsdWVfYSA9IHR1bmRyYS5pbnRlZ2VyLnBhcnNlKChTdHJpbmcpdmFsdWVfYSk7CiAg
ICAgICAgICAgIHZhbHVlX2IgPSB0dW5kcmEuaW50ZWdlci5wYXJzZSgoU3RyaW5nKXZhbHVlX2Ip
OwogICAgICAgICAgfSBlbHNlIGlmICh0eXBlLmVxdWFscygiZGVjaW1hbCIpKSB7CiAgICAgICAg
ICAgIHZhbHVlX2EgPSB0dW5kcmEuZGVjaW1hbC5wYXJzZSgoU3RyaW5nKXZhbHVlX2EpOwogICAg
ICAgICAgICB2YWx1ZV9iID0gdHVuZHJhLmRlY2ltYWwucGFyc2UoKFN0cmluZyl2YWx1ZV9iKTsK
ICAgICAgICAgIH0gZWxzZSBpZiAodHlwZS5lcXVhbHMoImRhdGV0aW1lIikpIHsKICAgICAgICAg
ICAgdmFsdWVfYSA9IHR1bmRyYS5kYXRldGltZS5wYXJzZSgoU3RyaW5nKXZhbHVlX2EsIHBhdHRl
cm4pOwogICAgICAgICAgICB2YWx1ZV9iID0gdHVuZHJhLmRhdGV0aW1lLnBhcnNlKChTdHJpbmcp
dmFsdWVfYiwgcGF0dGVybik7CiAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUuZXF1YWxzKCJkdXJh
dGlvbiIpKSB7CiAgICAgICAgICAgIHZhbHVlX2EgPSB0dW5kcmEuaW50ZWdlci5wYXJzZSh0dW5k
cmEuZHVyYXRpb24uZm9ybWF0KChTdHJpbmcpdmFsdWVfYSwgcGF0dGVybiwgIm1pbGxpc2Vjb25k
cyIpKTsKICAgICAgICAgICAgdmFsdWVfYiA9IHR1bmRyYS5pbnRlZ2VyLnBhcnNlKHR1bmRyYS5k
dXJhdGlvbi5mb3JtYXQoKFN0cmluZyl2YWx1ZV9iLCBwYXR0ZXJuLCAibWlsbGlzZWNvbmRzIikp
OwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHZhbHVlX2EgaW5zdGFuY2VvZiBD
b21wYXJhYmxlICYmIHZhbHVlX2IgaW5zdGFuY2VvZiBDb21wYXJhYmxlKSB7CiAgICAgICAgICBy
ZXN1bHQgPSBub3JtYWxpemUoKChDb21wYXJhYmxlKXZhbHVlX2EpLmNvbXBhcmVUbygoQ29tcGFy
YWJsZSl2YWx1ZV9iKSwgZGVzY2VuZGluZyk7CiAgICAgICAgICBpZiAocmVzdWx0ICE9IDApIGJy
ZWFrOwogICAgICAgIH0KICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKICB9Cn0KCi8v
IGdyb3VwcyB0aGUgZ2l2ZW4gbGlzdCBieSB0aGUgZ2l2ZW4ga2V5cwpwdWJsaWMgc3RhdGljIElE
YXRhW10gZ3JvdXAoSURhdGFbXSBsaXN0LCBTdHJpbmdbXSBrZXlzKSB7CiAgaWYgKGxpc3QgPT0g
bnVsbCB8fCBsaXN0Lmxlbmd0aCA9PSAwKSByZXR1cm4gbGlzdDsKCiAgaWYgKGtleXMgPT0gbnVs
bCB8fCBrZXlzLmxlbmd0aCA9PSAwKSB7CiAgICBJRGF0YVtdIHJlc3VsdCA9IG5ldyBJRGF0YVsx
XTsKICAgIHJlc3VsdFswXSA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKICAgIElEYXRhQ3Vyc29y
IGN1cnNvciA9IHJlc3VsdFswXS5nZXRDdXJzb3IoKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29y
LCAiZ3JvdXAiLCBJRGF0YUZhY3RvcnkuY3JlYXRlKCkpOwogICAgSURhdGFVdGlsLnB1dChjdXJz
b3IsICJpdGVtcyIsIGxpc3QpOwogICAgY3Vyc29yLmRlc3Ryb3koKTsKICAgIHJldHVybiByZXN1
bHQ7CiAgfSBlbHNlIHsKICAgIGphdmEudXRpbC5NYXA8Q29tcG91bmRLZXksIGphdmEudXRpbC5M
aXN0PElEYXRhPj4gZ3JvdXBzID0gbmV3IGphdmEudXRpbC5UcmVlTWFwPENvbXBvdW5kS2V5LCBq
YXZhLnV0aWwuTGlzdDxJRGF0YT4+KCk7CgogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBsaXN0Lmxl
bmd0aDsgaSsrKSB7CiAgICAgIGlmIChsaXN0W2ldICE9IG51bGwpIHsKICAgICAgICBDb21wb3Vu
ZEtleSBrZXkgPSBuZXcgQ29tcG91bmRLZXkoa2V5cywgbGlzdFtpXSk7CiAgICAgICAgamF2YS51
dGlsLkxpc3Q8SURhdGE+IGFycmF5ID0gZ3JvdXBzLmdldChrZXkpOwogICAgICAgIGlmIChhcnJh
eSA9PSBudWxsKSBhcnJheSA9IG5ldyBqYXZhLnV0aWwuTGlua2VkTGlzdDxJRGF0YT4oKTsKICAg
ICAgICBhcnJheS5hZGQobGlzdFtpXSk7CiAgICAgICAgZ3JvdXBzLnB1dChrZXksIGFycmF5KTsK
ICAgICAgfQogICAgfQoKICAgIGphdmEudXRpbC5MaXN0PElEYXRhPiByZXN1bHQgPSBuZXcgamF2
YS51dGlsLkFycmF5TGlzdDxJRGF0YT4oZ3JvdXBzLnNpemUoKSk7CiAgICBqYXZhLnV0aWwuSXRl
cmF0b3I8Q29tcG91bmRLZXk+IGl0ZXJhdG9yID0gZ3JvdXBzLmtleVNldCgpLml0ZXJhdG9yKCk7
CgogICAgd2hpbGUoaXRlcmF0b3IuaGFzTmV4dCgpKSB7CiAgICAgIENvbXBvdW5kS2V5IGtleSA9
IGl0ZXJhdG9yLm5leHQoKTsKICAgICAgamF2YS51dGlsLkxpc3Q8SURhdGE+IGl0ZW1zID0gZ3Jv
dXBzLmdldChrZXkpOwoKICAgICAgSURhdGEgZ3JvdXAgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7
CiAgICAgIElEYXRhQ3Vyc29yIGN1cnNvciA9IGdyb3VwLmdldEN1cnNvcigpOwogICAgICBJRGF0
YVV0aWwucHV0KGN1cnNvciwgImdyb3VwIiwga2V5LmdldElEYXRhKCkpOwogICAgICBJRGF0YVV0
aWwucHV0KGN1cnNvciwgIml0ZW1zIiwgKElEYXRhW10paXRlbXMudG9BcnJheShuZXcgSURhdGFb
MF0pKTsKICAgICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgICAgIHJlc3VsdC5hZGQoZ3JvdXApOwog
ICAgfQogICAgcmV0dXJuIChJRGF0YVtdKXJlc3VsdC50b0FycmF5KG5ldyBJRGF0YVswXSk7CiAg
fQp9CgpwdWJsaWMgc3RhdGljIGNsYXNzIENvbXBvdW5kS2V5IGV4dGVuZHMgamF2YS51dGlsLkxp
bmtlZEhhc2hNYXA8U3RyaW5nLCBDb21wYXJhYmxlPiBpbXBsZW1lbnRzIENvbXBhcmFibGU8Q29t
cG91bmRLZXk+LCBjb20ud20udXRpbC5jb2Rlci5JRGF0YUNvZGFibGUgewogIHB1YmxpYyBDb21w
b3VuZEtleSgpIHsKICAgIHN1cGVyKCk7CiAgfQoKICBwdWJsaWMgQ29tcG91bmRLZXkoaW50IGlu
aXRpYWxDYXBhY2l0eSkgewogICAgc3VwZXIoaW5pdGlhbENhcGFjaXR5KTsKICB9CgogIHB1Ymxp
YyBDb21wb3VuZEtleShpbnQgaW5pdGlhbENhcGFjaXR5LCBmbG9hdCBsb2FkRmFjdG9yKSB7CiAg
ICBzdXBlcihpbml0aWFsQ2FwYWNpdHksIGxvYWRGYWN0b3IpOwogIH0KCiAgcHVibGljIENvbXBv
dW5kS2V5KGludCBpbml0aWFsQ2FwYWNpdHksIGZsb2F0IGxvYWRGYWN0b3IsIGJvb2xlYW4gYWNj
ZXNzT3JkZXIpIHsKICAgIHN1cGVyKGluaXRpYWxDYXBhY2l0eSwgbG9hZEZhY3RvciwgYWNjZXNz
T3JkZXIpOwogIH0KCiAgcHVibGljIENvbXBvdW5kS2V5KGphdmEudXRpbC5NYXA8PyBleHRlbmRz
IFN0cmluZyw/IGV4dGVuZHMgQ29tcGFyYWJsZT4gbWFwKSB7CiAgICBzdXBlcihtYXApOwogIH0K
CiAgcHVibGljIENvbXBvdW5kS2V5KFN0cmluZ1tdIGtleXMsIElEYXRhIGRvY3VtZW50KSB7CiAg
ICBzdXBlcihrZXlzLmxlbmd0aCk7CiAgICAKICAgIC8vIHNlZWQgd2l0aCBrZXkgdmFsdWUgcGFp
cnMKICAgIGZvciAoaW50IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykgewogICAgICBPYmpl
Y3QgdmFsdWUgPSB0dW5kcmEuc3VwcG9ydC5kb2N1bWVudC5nZXQoZG9jdW1lbnQsIGtleXNbaV0p
OwogICAgICBpZiAodmFsdWUgIT0gbnVsbCAmJiB2YWx1ZSBpbnN0YW5jZW9mIENvbXBhcmFibGUp
IHRoaXMucHV0KGtleXNbaV0sIChDb21wYXJhYmxlKXZhbHVlKTsKICAgIH0gICAgCiAgfQoKICBw
dWJsaWMgaW50IGNvbXBhcmVUbyhDb21wb3VuZEtleSBvdGhlcikgewogICAgaWYgKG90aGVyID09
IG51bGwpIHJldHVybiAxOwoKICAgIGludCByZXN1bHQgPSAwOwogICAgCiAgICBqYXZhLnV0aWwu
SXRlcmF0b3I8U3RyaW5nPiBpdGVyYXRvciA9IHRoaXMua2V5U2V0KCkuaXRlcmF0b3IoKTsKCiAg
ICB3aGlsZShpdGVyYXRvci5oYXNOZXh0KCkpIHsKICAgICAgU3RyaW5nIGtleSA9IGl0ZXJhdG9y
Lm5leHQoKTsKICAgICAgQ29tcGFyYWJsZSB0aGlzVmFsdWUgPSB0aGlzLmdldChrZXkpOwogICAg
ICBDb21wYXJhYmxlIG90aGVyVmFsdWUgPSBvdGhlci5nZXQoa2V5KTsKCiAgICAgIGlmICh0aGlz
VmFsdWUgPT0gbnVsbCkgewogICAgICAgIGlmIChvdGhlclZhbHVlICE9IG51bGwpIHJlc3VsdCA9
IC0xOwogICAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdCA9IHRoaXNWYWx1ZS5jb21wYXJlVG8o
b3RoZXJWYWx1ZSk7CiAgICAgIH0KICAgICAgaWYgKHJlc3VsdCAhPSAwKSBicmVhazsKICAgIH0K
ICAgIHJldHVybiByZXN1bHQ7CiAgfQoKICBwdWJsaWMgYm9vbGVhbiBlcXVhbHMoT2JqZWN0IG90
aGVyKSB7CiAgICBib29sZWFuIHJlc3VsdCA9IGZhbHNlOwoKICAgIGlmIChvdGhlciAhPSBudWxs
ICYmIG90aGVyIGluc3RhbmNlb2YgQ29tcG91bmRLZXkpIHsKICAgICAgcmVzdWx0ID0gdGhpcy5j
b21wYXJlVG8oKENvbXBvdW5kS2V5KW90aGVyKSA9PSAwOwogICAgfQogICAgcmV0dXJuIHJlc3Vs
dDsKICB9CgogIHB1YmxpYyBJRGF0YSBnZXRJRGF0YSgpIHsKICAgIElEYXRhIG91dHB1dCA9IElE
YXRhRmFjdG9yeS5jcmVhdGUoKTsKICAgIGphdmEudXRpbC5JdGVyYXRvcjxTdHJpbmc+IGl0ZXJh
dG9yID0gdGhpcy5rZXlTZXQoKS5pdGVyYXRvcigpOwogICAgd2hpbGUoaXRlcmF0b3IuaGFzTmV4
dCgpKSB7CiAgICAgIFN0cmluZyBrZXkgPSBpdGVyYXRvci5uZXh0KCk7CiAgICAgIE9iamVjdCB2
YWx1ZSA9IHRoaXMuZ2V0KGtleSk7CiAgICAgIHR1bmRyYS5zdXBwb3J0LmRvY3VtZW50LnB1dChv
dXRwdXQsIGtleSwgdmFsdWUpOwogICAgfQogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHB1Ymxp
YyB2b2lkIHNldElEYXRhKElEYXRhIGlucHV0KSB7CiAgICBpZiAoaW5wdXQgPT0gbnVsbCkgcmV0
dXJuOwoKICAgIHRoaXMuY2xlYXIoKTsKCiAgICBJRGF0YUN1cnNvciBjdXJzb3IgPSBpbnB1dC5n
ZXRDdXJzb3IoKTsKICAgIHdoaWxlKGN1cnNvci5uZXh0KCkpIHsKICAgICAgU3RyaW5nIGtleSA9
IGN1cnNvci5nZXRLZXkoKTsKICAgICAgT2JqZWN0IHZhbHVlID0gY3Vyc29yLmdldFZhbHVlKCk7
CgogICAgICBpZiAodmFsdWUgIT0gbnVsbCAmJiB2YWx1ZSBpbnN0YW5jZW9mIENvbXBhcmFibGUp
IHRoaXMucHV0KGtleSwgKENvbXBhcmFibGUpdmFsdWUpOwogICAgfQogICAgY3Vyc29yLmRlc3Ry
b3koKTsKICB9Cn0K</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
