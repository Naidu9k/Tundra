<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.list.object</value>
  <value name="shared">Ly8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNlcnRlZCBh
dCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBhcHBlbmQoVFtdIGFycmF5LCBUIGl0ZW0s
IENsYXNzPFQ+IGtsYXNzKSB7CiAgcmV0dXJuIGluc2VydChhcnJheSwgaXRlbSwgLTEsIGtsYXNz
KTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNl
cnRlZCBhdCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IHZvaWQgYXBwZW5kKElEYXRhIHBpcGVs
aW5lLCBDbGFzczxUPiBrbGFzcykgewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdl
dEN1cnNvcigpOwoKICB0cnkgewogICAgVFtdIGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmpl
Y3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChj
dXJzb3IsICIkaXRlbSIpOwoKICAgIGxpc3QgPSBhcHBlbmQobGlzdCA9PSBudWxsID8gbnVsbCA6
IGphdmEudXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xhc3M8VFtdPilq
YXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0Q2xhc3MoKSks
IGl0ZW0sIGtsYXNzKTsKCiAgICBpZiAobGlzdCAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNv
ciwgIiRsaXN0IiwgbGlzdCk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAg
fQp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIG51bGwgZWxlbWVudHMgcmVtb3Zl
ZApwdWJsaWMgc3RhdGljIDxUPiBUW10gY29tcGFjdChUW10gYXJyYXkpIHsKICBpZiAoYXJyYXkg
PT0gbnVsbCkgcmV0dXJuIGFycmF5OwogIAogIGphdmEudXRpbC5MaXN0PFQ+IGxpc3QgPSBuZXcg
amF2YS51dGlsLkFycmF5TGlzdDxUPihhcnJheS5sZW5ndGgpOwoKICBmb3IgKGludCBpID0gMDsg
aSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoYXJyYXlbaV0gIT0gbnVsbCkgbGlzdC5h
ZGQoYXJyYXlbaV0pOwogIH0KICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJh
eXMuY29weU9mKGFycmF5LCAwKSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2hpY2ggY29u
dGFpbnMgYWxsIHRoZSBlbGVtZW50cyBmcm9tIHRoZSBnaXZlbiBhcnJheXMKcHVibGljIHN0YXRp
YyA8VD4gVFtdIGNvbmNhdGVuYXRlKFRbXSBhcnJheSwgVFtdIGl0ZW1zKSB7CiAgaWYgKGFycmF5
ID09IG51bGwpIHJldHVybiBpdGVtczsKICBpZiAoaXRlbXMgPT0gbnVsbCkgcmV0dXJuIGFycmF5
OwoKICBqYXZhLnV0aWwuTGlzdDxUPiBsaXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4o
YXJyYXkubGVuZ3RoICsgaXRlbXMubGVuZ3RoKTsKICAKICBqYXZhLnV0aWwuQ29sbGVjdGlvbnMu
YWRkQWxsKGxpc3QsIGFycmF5KTsKICBqYXZhLnV0aWwuQ29sbGVjdGlvbnMuYWRkQWxsKGxpc3Qs
IGl0ZW1zKTsKICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJheXMuY29weU9m
KGFycmF5LCAwKSk7Cn0KCi8vIGludm9rZXMgdGhlIGdpdmVuIHNlcnZpY2UgZm9yIGVhY2ggZWxl
bWVudCBpbiB0aGUgYXJyYXkKcHVibGljIHN0YXRpYyA8VD4gdm9pZCBlYWNoKFRbXSBhcnJheSwg
U3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lLCBTdHJpbmcgaW5wdXQpIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsKICBtYXAoYXJyYXksIHNlcnZpY2UsIHBpcGVsaW5lLCBpbnB1dCwgbnVs
bCk7Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gYXJyYXlzIGFyZSBlcXVhbApwdWJs
aWMgc3RhdGljIDxUPiBib29sZWFuIGVxdWFsKFRbXSB4LCBUW10geSkgewogIGJvb2xlYW4gcmVz
dWx0ID0gdHJ1ZTsKCiAgaWYgKHggIT0gbnVsbCAmJiB5ICE9IG51bGwpIHsKICAgIHJlc3VsdCA9
ICh4Lmxlbmd0aCA9PSB5Lmxlbmd0aCk7CgogICAgaWYgKHJlc3VsdCkgewogICAgICBmb3IgKGlu
dCBpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHsKICAgICAgICByZXN1bHQgPSByZXN1bHQgJiYg
dHVuZHJhLm9iamVjdC5lcXVhbCh4W2ldLCB5W2ldKTsKICAgICAgICBpZiAoIXJlc3VsdCkgYnJl
YWs7CiAgICAgIH0KICAgIH0KICB9IGVsc2UgewogICAgcmVzdWx0ID0gKHggPT0gbnVsbCAmJiB5
ID09IG51bGwpOwogIH0KCiAgcmV0dXJuIHJlc3VsdDsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJh
eSB3aGljaCBpcyBhIG9uZS1kaW1lbnNpb25hbCByZWN1cnNpdmUgZmxhdHRlbmluZyBvZiB0aGUg
Z2l2ZW4gYXJyYXkKcHVibGljIHN0YXRpYyA8VD4gVFtdIGZsYXR0ZW4oVFtdIGFycmF5KSB7CiAg
aWYgKGFycmF5ID09IG51bGwgfHwgYXJyYXkubGVuZ3RoID09IDApIHJldHVybiBhcnJheTsKCiAg
amF2YS51dGlsLkFycmF5TGlzdDxUPiBsaXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4o
YXJyYXkubGVuZ3RoKTsKCiAgZm9yIChpbnQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykg
ewogICAgaWYgKGFycmF5W2ldICE9IG51bGwgJiYgYXJyYXlbaV0uZ2V0Q2xhc3MoKS5pc0FycmF5
KCkpIHsKICAgICAgbGlzdC5lbnN1cmVDYXBhY2l0eShsaXN0LnNpemUoKSArICgoVFtdKWFycmF5
W2ldKS5sZW5ndGgpOwogICAgICBsaXN0LmFkZEFsbChqYXZhLnV0aWwuQXJyYXlzLmFzTGlzdChm
bGF0dGVuKChUW10pYXJyYXlbaV0pKSk7CiAgICB9IGVsc2UgewogICAgICBsaXN0LmFkZChhcnJh
eVtpXSk7CiAgICB9CiAgfQogIAogIHJldHVybiBsaXN0LnRvQXJyYXkoamF2YS51dGlsLkFycmF5
cy5jb3B5T2YoYXJyYXksIDApKTsgIAp9CgovLyByZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIGl0
ZW0gaXMgZm91bmQgaW4gdGhlIGdpdmVuIGFycmF5CnB1YmxpYyBzdGF0aWMgPFQ+IGJvb2xlYW4g
aW5jbHVkZShUW10gYXJyYXksIFQgaXRlbSkgewogIGJvb2xlYW4gZm91bmQgPSBmYWxzZTsKCiAg
aWYgKGFycmF5ICE9IG51bGwpIHsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3Ro
OyBpKyspIHsKICAgICAgZm91bmQgPSB0dW5kcmEub2JqZWN0LmVxdWFsKGFycmF5W2ldLCBpdGVt
KTsKICAgICAgaWYgKGZvdW5kKSBicmVhazsKICAgIH0KICB9CgogIHJldHVybiBmb3VuZDsKfQoK
Ly8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIHRoZSBnaXZlbiBpdGVtIGluc2VydGVkIGF0IHRo
ZSBnaXZlbiBpbmRleApwdWJsaWMgc3RhdGljIDxUPiBUW10gaW5zZXJ0KFRbXSBhcnJheSwgVCBp
dGVtLCBTdHJpbmcgaW5kZXgsIENsYXNzPFQ+IGtsYXNzKSB7CiAgaWYgKGluZGV4ID09IG51bGwp
IGluZGV4ID0gIi0xIjsKICByZXR1cm4gaW5zZXJ0KGFycmF5LCBpdGVtLCBJbnRlZ2VyLnBhcnNl
SW50KGluZGV4KSwga2xhc3MpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggdGhlIGdp
dmVuIGl0ZW0gaW5zZXJ0ZWQgYXQgdGhlIGdpdmVuIGluZGV4CnB1YmxpYyBzdGF0aWMgPFQ+IFRb
XSBpbnNlcnQoVFtdIGFycmF5LCBUIGl0ZW0sIGludCBpbmRleCwgQ2xhc3M8VD4ga2xhc3MpIHsK
ICBpZiAoYXJyYXkgPT0gbnVsbCkgYXJyYXkgPSAoVFtdKWphdmEubGFuZy5yZWZsZWN0LkFycmF5
Lm5ld0luc3RhbmNlKGtsYXNzLCAwKTsKCiAgamF2YS51dGlsLkFycmF5TGlzdDxUPiBsaXN0ID0g
bmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4oamF2YS51dGlsLkFycmF5cy5hc0xpc3QoYXJyYXkp
KTsKCiAgaW50IGNhcGFjaXR5ID0gMDsKICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBsaXN0LnNp
emUoKSArIDE7CiAgaWYgKGluZGV4IDwgMCkgewogICAgY2FwYWNpdHkgPSAoaW5kZXggKiAtMSkg
KyBsaXN0LnNpemUoKTsKICAgIGluZGV4ID0gMDsKICB9IGVsc2UgewogICAgY2FwYWNpdHkgPSBp
bmRleDsKICB9CgogIGxpc3QuZW5zdXJlQ2FwYWNpdHkoY2FwYWNpdHkpOwogIGlmIChjYXBhY2l0
eSA+PSBsaXN0LnNpemUoKSkgewogICAgLy8gZmlsbCB0aGUgbGlzdCB3aXRoIG51bGxzIGlmIGl0
IG5lZWRzIHRvIGJlIGV4dGVuZGVkCiAgICBmb3IgKGludCBpID0gbGlzdC5zaXplKCk7IGkgPCBj
YXBhY2l0eTsgaSsrKSB7CiAgICAgIGxpc3QuYWRkKGksIG51bGwpOwogICAgfQogIH0KICBsaXN0
LmFkZChpbmRleCwgaXRlbSk7CiAgCiAgcmV0dXJuIGxpc3QudG9BcnJheShhcnJheSk7Cn0KCi8v
IHJldHVybnMgYSBuZXcgYXJyYXksIHdpdGggdGhlIGdpdmVuIGVsZW1lbnQgaW5zZXJ0ZWQgYXQg
dGhlIGVuZApwdWJsaWMgc3RhdGljIDxUPiB2b2lkIGluc2VydChJRGF0YSBwaXBlbGluZSwgQ2xh
c3M8VD4ga2xhc3MpIHsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3Io
KTsKCiAgdHJ5IHsKICAgIFRbXSBsaXN0ID0gKFRbXSlJRGF0YVV0aWwuZ2V0T2JqZWN0QXJyYXko
Y3Vyc29yLCAiJGxpc3QiKTsKICAgIFQgaXRlbSA9IChUKUlEYXRhVXRpbC5nZXQoY3Vyc29yLCAi
JGl0ZW0iKTsKICAgIFN0cmluZyBpbmRleCA9IElEYXRhVXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAi
JGluZGV4Iik7CgogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGlzdCIsIGluc2VydChsaXN0
ID09IG51bGwgPyBudWxsIDogamF2YS51dGlsLkFycmF5cy5jb3B5T2YobGlzdCwgbGlzdC5sZW5n
dGgsIChDbGFzczxUW10+KWphdmEubGFuZy5yZWZsZWN0LkFycmF5Lm5ld0luc3RhbmNlKGtsYXNz
LCAwKS5nZXRDbGFzcygpKSwgaXRlbSwgaW5kZXgsIGtsYXNzKSk7CiAgfSBmaW5hbGx5IHsKICAg
IGN1cnNvci5kZXN0cm95KCk7CiAgfQp9CgovLyByZXR1cm5zIHRoZSBlbGVtZW50IGZyb20gdGhl
IGdpdmVuIGFycmF5IGF0IHRoZSBnaXZlbiBpbmRleCAoc3VwcG9ydHMgcnVieS1zdHlsZSByZXZl
cnNlIGluZGV4aW5nKQpwdWJsaWMgc3RhdGljIDxUPiBUIGl0ZW0oVFtdIGFycmF5LCBTdHJpbmcg
aW5kZXgpIHsKICByZXR1cm4gaXRlbShhcnJheSwgSW50ZWdlci5wYXJzZUludChpbmRleCkpOwp9
CgovLyByZXR1cm5zIHRoZSBlbGVtZW50IGZyb20gdGhlIGdpdmVuIGFycmF5IGF0IHRoZSBnaXZl
biBpbmRleCAoc3VwcG9ydHMgcnVieS1zdHlsZSByZXZlcnNlIGluZGV4aW5nKQpwdWJsaWMgc3Rh
dGljIDxUPiBUIGl0ZW0oVFtdIGFycmF5LCBpbnQgaW5kZXgpIHsKICBUIGl0ZW0gPSBudWxsOwog
IAogIGlmIChhcnJheSAhPSBudWxsKSB7CiAgICAvLyBzdXBwb3J0IHJldmVyc2UvdGFpbCBpbmRl
eGluZwogICAgaWYgKGluZGV4IDwgMCkgaW5kZXggKz0gYXJyYXkubGVuZ3RoOwogICAgCiAgICBp
dGVtID0gYXJyYXlbaW5kZXhdOwogIH0KICAKICByZXR1cm4gaXRlbTsKfQoKLy8gcmV0dXJucyBh
IHN0cmluZyBjcmVhdGVkIGJ5IGNvbmNhdGVuYXRpbmcgZWFjaCBlbGVtZW50IG9mIHRoZSBnaXZl
biBhcnJheSwgc2VwYXJhdGVkIGJ5IHRoZSBnaXZlbiBzZXBhcmF0b3Igc3RyaW5nCnB1YmxpYyBz
dGF0aWMgPFQ+IFN0cmluZyBqb2luKFRbXSBhcnJheSwgU3RyaW5nIHNlcGFyYXRvcikgewogIFN0
cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7CiAgCiAgaWYgKGFycmF5
ICE9IG51bGwpIHsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHsK
ICAgICAgVCB2YWx1ZSA9IGFycmF5W2ldOwogICAgICBpZiAodmFsdWUgIT0gbnVsbCkgYnVpbGRl
ci5hcHBlbmQodmFsdWUudG9TdHJpbmcoKSk7CiAgICAgIGlmIChzZXBhcmF0b3IgIT0gbnVsbCAm
JiBpIDwgYXJyYXkubGVuZ3RoIC0gMSkgYnVpbGRlci5hcHBlbmQoc2VwYXJhdG9yKTsKICAgIH0K
ICB9CiAgCiAgcmV0dXJuIGJ1aWxkZXIudG9TdHJpbmcoKTsKfQoKLy8gcmV0dXJucyB0aGUgbGVu
Z3RoIG9mIHRoZSBnaXZlbiBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBpbnQgbGVuZ3RoKFRbXSBh
cnJheSkgewogIHJldHVybiAoYXJyYXkgPT0gbnVsbD8gMCA6IGFycmF5Lmxlbmd0aCk7Cn0KCnB1
YmxpYyBzdGF0aWMgPFQ+IHZvaWQgbWFwKElEYXRhIHBpcGVsaW5lLCBDbGFzczxUPiBrbGFzcykg
dGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5l
LmdldEN1cnNvcigpOwoKICB0cnkgewogICAgT2JqZWN0W10gbGlzdCA9IElEYXRhVXRpbC5nZXRP
YmplY3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwogICAgU3RyaW5nIHNlcnZpY2UgPSBJRGF0YVV0
aWwuZ2V0U3RyaW5nKGN1cnNvciwgIiRzZXJ2aWNlIik7CiAgICBJRGF0YSBzY29wZSA9IElEYXRh
VXRpbC5nZXRJRGF0YShjdXJzb3IsICIkcGlwZWxpbmUiKTsKICAgIFN0cmluZyBpbnB1dCA9IElE
YXRhVXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAiJGl0ZW0uaW5wdXQiKTsKICAgIFN0cmluZyBvdXRw
dXQgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGN1cnNvciwgIiRpdGVtLm91dHB1dCIpOwoKICAgIGJv
b2xlYW4gc2NvcGVkID0gc2NvcGUgIT0gbnVsbDsKCiAgICAvLyBpbnZva2UgdGhlIHNlcnZpY2Ug
Zm9yIGVhY2ggaXRlbSBpbiB0aGUgbGlzdCwgcGFzc2luZyAkaXRlbSBhbmQgJGluZGV4IHZhcmlh
YmxlcyBvbiBlYWNoIGludm9jYXRpb24KICAgIC8vIGFuZCBjb2xsZWN0IHRoZSByZXR1cm5lZCAk
aXRlbSdzIGludG8gYSBuZXcgbGlzdAogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGlzdCIs
IG1hcChsaXN0ID09IG51bGwgPyBudWxsIDogamF2YS51dGlsLkFycmF5cy5jb3B5T2YobGlzdCwg
bGlzdC5sZW5ndGgsIChDbGFzczxUW10+KWphdmEubGFuZy5yZWZsZWN0LkFycmF5Lm5ld0luc3Rh
bmNlKGtsYXNzLCAwKS5nZXRDbGFzcygpKSwgc2VydmljZSwgc2NvcGVkID8gc2NvcGUgOiBwaXBl
bGluZSwgaW5wdXQsIG91dHB1dCkpOwogIH0gZmluYWxseSB7CiAgICBjdXJzb3IuZGVzdHJveSgp
OwogIH0KfQoKLy8gbWFwcyB0aGUgZ2l2ZW4gYXJyYXkgdG8gYSBuZXcgYXJyYXkgYnkgaW52b2tp
bmcgYSBzZXJ2aWNlIGZvciBlYWNoIGVsZW1lbnQgYW5kIGNvbGxlY3RpbmcgdGhlIG91dHB1dApw
dWJsaWMgc3RhdGljIDxUPiBUW10gbWFwKFRbXSBhcnJheSwgU3RyaW5nIHNlcnZpY2UsIElEYXRh
IHBpcGVsaW5lLCBTdHJpbmcgaW5wdXQsIFN0cmluZyBvdXRwdXQpIHRocm93cyBTZXJ2aWNlRXhj
ZXB0aW9uIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGggPT0gMCB8fCBzZXJ2
aWNlID09IG51bGwpIHJldHVybiBhcnJheTsKICBpZiAocGlwZWxpbmUgPT0gbnVsbCkgcGlwZWxp
bmUgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CiAgaWYgKGlucHV0ID09IG51bGwpIGlucHV0ID0g
IiRpdGVtIjsKICBpZiAob3V0cHV0ID09IG51bGwpIG91dHB1dCA9IGlucHV0OwogICAKICBqYXZh
LnV0aWwuTGlzdDxUPiBsaXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4oYXJyYXkubGVu
Z3RoKTsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBudWxsOwogIAogIGZvciAoaW50IGkgPSAwOyBp
IDwgYXJyYXkubGVuZ3RoOyBpKyspIHsKICAgIC8vIGFkZCAkaXRlbSwgJGluZGV4LCAkaXRlcmF0
aW9uIGFuZCAkbGVuZ3RoIHZhcmlhYmxlcyB0byB0aGUgaW5wdXQgcGlwZWxpbmUKICAgIGN1cnNv
ciA9IHBpcGVsaW5lLmdldEN1cnNvcigpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsIGlucHV0
LCBhcnJheVtpXSk7CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRpbmRleCIsICIiICsgaSk7
CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRpdGVyYXRpb24iLCAiIiArIChpICsgMSkpOwog
ICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGVuZ3RoIiwgIiIgKyBhcnJheS5sZW5ndGgpOwog
ICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgICAvLyBpbnZva2UgdGhlIGl0ZXJhdG9yIHNlcnZpY2UK
ICAgIHBpcGVsaW5lID0gdHVuZHJhLnNlcnZpY2UuaW52b2tlKHNlcnZpY2UsIHBpcGVsaW5lKTsK
CiAgICAvLyBjbGVhbiB1cCB0aGUgaW5wdXQgcGlwZWxpbmUKICAgIGN1cnNvciA9IHBpcGVsaW5l
LmdldEN1cnNvcigpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChjdXJzb3IsIG91dHB1
dCk7CiAgICBJRGF0YVV0aWwucmVtb3ZlKGN1cnNvciwgaW5wdXQpOwogICAgSURhdGFVdGlsLnJl
bW92ZShjdXJzb3IsIG91dHB1dCk7CiAgICBJRGF0YVV0aWwucmVtb3ZlKGN1cnNvciwgIiRpbmRl
eCIpOwogICAgSURhdGFVdGlsLnJlbW92ZShjdXJzb3IsICIkaXRlcmF0aW9uIik7CiAgICBJRGF0
YVV0aWwucmVtb3ZlKGN1cnNvciwgIiRsZW5ndGgiKTsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAg
ICAKICAgIC8vIGNvbGxlY3QgdGhlIG1hcHBlZCBpdGVtcwogICAgbGlzdC5hZGQoaXRlbSk7CiAg
fQogIAogIHJldHVybiBsaXN0LnRvQXJyYXkoamF2YS51dGlsLkFycmF5cy5jb3B5T2YoYXJyYXks
IDApKTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIGEgbmV3IGVsZW1lbnQgaW5zZXJ0
ZWQgYXQgdGhlIGJlZ2lubmluZwpwdWJsaWMgc3RhdGljIDxUPiBUW10gcHJlcGVuZChUW10gYXJy
YXksIFQgaXRlbSwgQ2xhc3M8VD4ga2xhc3MpIHsKICByZXR1cm4gaW5zZXJ0KGFycmF5LCBpdGVt
LCAwLCBrbGFzcyk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXksIHdpdGggdGhlIGdpdmVuIGVs
ZW1lbnQgaW5zZXJ0ZWQgYXQgdGhlIGVuZApwdWJsaWMgc3RhdGljIDxUPiB2b2lkIHByZXBlbmQo
SURhdGEgcGlwZWxpbmUsIENsYXNzPFQ+IGtsYXNzKSB7CiAgSURhdGFDdXJzb3IgY3Vyc29yID0g
cGlwZWxpbmUuZ2V0Q3Vyc29yKCk7CgogIHRyeSB7CiAgICBUW10gbGlzdCA9IChUW10pSURhdGFV
dGlsLmdldE9iamVjdEFycmF5KGN1cnNvciwgIiRsaXN0Iik7CiAgICBUIGl0ZW0gPSAoVClJRGF0
YVV0aWwuZ2V0KGN1cnNvciwgIiRpdGVtIik7CgogICAgbGlzdCA9IHByZXBlbmQobGlzdCA9PSBu
dWxsID8gbnVsbCA6IGphdmEudXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAo
Q2xhc3M8VFtdPilqYXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCku
Z2V0Q2xhc3MoKSksIGl0ZW0sIGtsYXNzKTsKCiAgICBpZiAobGlzdCAhPSBudWxsKSBJRGF0YVV0
aWwucHV0KGN1cnNvciwgIiRsaXN0IiwgbGlzdCk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5k
ZXN0cm95KCk7CiAgfQp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIGVsZW1lbnRz
IGZyb20gdGhlIGdpdmVuIGFycmF5IGJ1dCBpbiByZXZlcnNlIG9yZGVyCnB1YmxpYyBzdGF0aWMg
PFQ+IFRbXSByZXZlcnNlKFRbXSBhcnJheSkgewogIGlmIChhcnJheSA9PSBudWxsIHx8IGFycmF5
Lmxlbmd0aCA8PSAxKSByZXR1cm4gYXJyYXk7CiAgCiAgamF2YS51dGlsLkFycmF5TGlzdDxUPiBs
aXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4oamF2YS51dGlsLkFycmF5cy5hc0xpc3Qo
YXJyYXkpKTsKICBqYXZhLnV0aWwuQ29sbGVjdGlvbnMucmV2ZXJzZShsaXN0KTsKICAKICByZXR1
cm4gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJheXMuY29weU9mKGFycmF5LCAwKSk7ICAKfQoK
Ly8gcmV0dXJucyBhIG5ldyBhcnJheSB3aGljaCBpcyBhIHN1YnNldCBvZiBlbGVtZW50cyBmcm9t
IHRoZSBnaXZlbiBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBUW10gc2xpY2UoVFtdIGFycmF5LCBT
dHJpbmcgaW5kZXgsIFN0cmluZyBsZW5ndGgpIHsKICByZXR1cm4gc2xpY2UoYXJyYXksIGluZGV4
ID09IG51bGwgPyAwIDogSW50ZWdlci5wYXJzZUludChpbmRleCksIGxlbmd0aCA9PSBudWxsID8g
KGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoKSA6IEludGVnZXIucGFyc2VJbnQobGVu
Z3RoKSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2hpY2ggaXMgYSBzdWJzZXQgb2YgZWxl
bWVudHMgZnJvbSB0aGUgZ2l2ZW4gYXJyYXkKcHVibGljIHN0YXRpYyA8VD4gVFtdIHNsaWNlKFRb
XSBhcnJheSwgaW50IGluZGV4LCBpbnQgbGVuZ3RoKSB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwg
YXJyYXkubGVuZ3RoID09IDApIHJldHVybiBhcnJheTsKICAvLyBzdXBwb3J0IHJldmVyc2UvdGFp
bCBsZW5ndGgKICBpZiAobGVuZ3RoIDwgMCkgbGVuZ3RoID0gYXJyYXkubGVuZ3RoICsgbGVuZ3Ro
OwogIC8vIHN1cHBvcnQgcmV2ZXJzZS90YWlsIGluZGV4aW5nCiAgaWYgKGluZGV4IDwgMCkgaW5k
ZXggKz0gYXJyYXkubGVuZ3RoOwogIC8vIGRvbid0IHNsaWNlIHBhc3QgdGhlIGVuZCBvZiB0aGUg
YXJyYXkKICBpZiAoKGxlbmd0aCArPSBpbmRleCkgPiBhcnJheS5sZW5ndGgpIGxlbmd0aCA9IGFy
cmF5Lmxlbmd0aDsKICAKICByZXR1cm4gamF2YS51dGlsLkFycmF5cy5jb3B5T2ZSYW5nZShhcnJh
eSwgaW5kZXgsIGxlbmd0aCk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCBhbGwgZWxl
bWVudHMgc29ydGVkCnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBzb3J0KFRbXSBhcnJheSkgewogIGlm
IChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0aCA8PSAxKSByZXR1cm4gYXJyYXk7CiAgCiAg
VFtdIGNvcHkgPSBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgYXJyYXkubGVuZ3RoKTsK
ICBqYXZhLnV0aWwuQXJyYXlzLnNvcnQoY29weSk7CiAgcmV0dXJuIGNvcHk7Cn0KCi8vIHJldHVy
bnMgYSBuZXcgYXJyYXkgd2l0aCBhbGwgZHVwbGljYXRlIGVsZW1lbnRzIHJlbW92ZWQKcHVibGlj
IHN0YXRpYyA8VD4gVFtdIHVuaXF1ZShUW10gYXJyYXkpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8
fCBhcnJheS5sZW5ndGggPD0gMSkgcmV0dXJuIGFycmF5OwogIAogIGphdmEudXRpbC5TZXQ8VD4g
c2V0ID0gbmV3IGphdmEudXRpbC5UcmVlU2V0PFQ+KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KGFy
cmF5KSk7CiAgCiAgcmV0dXJuIHNldC50b0FycmF5KGphdmEudXRpbC5BcnJheXMuY29weU9mKGFy
cmF5LCAwKSk7Cn0=</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
