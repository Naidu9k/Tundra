<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.list.object</value>
  <value name="shared">Ly8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNlcnRlZCBh
dCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBhcHBlbmQoVFtdIGFycmF5LCBUIGl0ZW0s
IENsYXNzPFQ+IGtsYXNzKSB7CiAgcmV0dXJuIGluc2VydChhcnJheSwgaXRlbSwgLTEsIGtsYXNz
KTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNl
cnRlZCBhdCB0aGUgZW5kCnB1YmxpYyBzdGF0aWMgPFQ+IHZvaWQgYXBwZW5kKElEYXRhIHBpcGVs
aW5lLCBDbGFzczxUPiBrbGFzcykgewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdl
dEN1cnNvcigpOwoKICB0cnkgewogICAgVFtdIGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmpl
Y3RBcnJheShjdXJzb3IsICIkbGlzdCIpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChj
dXJzb3IsICIkaXRlbSIpOwoKICAgIGxpc3QgPSBhcHBlbmQobGlzdCA9PSBudWxsID8gbnVsbCA6
IGphdmEudXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xhc3M8VFtdPilq
YXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0Q2xhc3MoKSks
IGl0ZW0sIGtsYXNzKTsKCiAgICBpZiAobGlzdCAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNv
ciwgIiRsaXN0IiwgbGlzdCk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAg
fQp9CgovLyByZXR1cm5zIHRoZSBmaXJzdCBub24tbnVsbCBpdGVtIGZyb20gdGhlIGdpdmVuIGxp
c3QsIG9yIGRlZmF1bHRWYWx1ZSBpZiBhbGwgaXRlbXMgYXJlIG51bGwKcHVibGljIHN0YXRpYyA8
VD4gVCBjb2FsZXNjZShUW10gbGlzdCwgVCBkZWZhdWx0VmFsdWUpIHsgCiAgVCByZXN1bHQgPSBu
dWxsOwoKICBpZiAobGlzdCAhPSBudWxsICYmIGxpc3QubGVuZ3RoID4gMCkgeyAgCiAgICBmb3Ig
KGludCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgcmVzdWx0ID0gbGlzdFtp
XTsKICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSBicmVhazsKICAgIH0KICB9CiAgaWYgKHJlc3Vs
dCA9PSBudWxsKSByZXN1bHQgPSBkZWZhdWx0VmFsdWU7CgogIHJldHVybiByZXN1bHQ7Cn0KCi8v
IHJldHVybnMgdGhlIGZpcnN0IG5vbi1udWxsIGl0ZW0gZnJvbSB0aGUgZ2l2ZW4gbGlzdApwdWJs
aWMgc3RhdGljIDxUPiBUIGNvYWxlc2NlKFRbXSBsaXN0KSB7IAogIHJldHVybiBjb2FsZXNjZShs
aXN0LCBudWxsKTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIGFsbCBudWxsIGVsZW1l
bnRzIHJlbW92ZWQKcHVibGljIHN0YXRpYyA8VD4gVFtdIGNvbXBhY3QoVFtdIGFycmF5KSB7CiAg
aWYgKGFycmF5ID09IG51bGwpIHJldHVybiBhcnJheTsKICAKICBqYXZhLnV0aWwuTGlzdDxUPiBs
aXN0ID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8VD4oYXJyYXkubGVuZ3RoKTsKCiAgZm9yIChp
bnQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykgewogICAgaWYgKGFycmF5W2ldICE9IG51
bGwpIGxpc3QuYWRkKGFycmF5W2ldKTsKICB9CiAgCiAgcmV0dXJuIGxpc3QudG9BcnJheShqYXZh
LnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgMCkpOwp9CgovLyByZXR1cm5zIGEgbmV3IGFycmF5
IHdoaWNoIGNvbnRhaW5zIGFsbCB0aGUgZWxlbWVudHMgZnJvbSB0aGUgZ2l2ZW4gYXJyYXlzCnB1
YmxpYyBzdGF0aWMgPFQ+IFRbXSBjb25jYXRlbmF0ZShUW10gYXJyYXksIFRbXSBpdGVtcykgewog
IGlmIChhcnJheSA9PSBudWxsKSByZXR1cm4gaXRlbXM7CiAgaWYgKGl0ZW1zID09IG51bGwpIHJl
dHVybiBhcnJheTsKCiAgamF2YS51dGlsLkxpc3Q8VD4gbGlzdCA9IG5ldyBqYXZhLnV0aWwuQXJy
YXlMaXN0PFQ+KGFycmF5Lmxlbmd0aCArIGl0ZW1zLmxlbmd0aCk7CiAgCiAgamF2YS51dGlsLkNv
bGxlY3Rpb25zLmFkZEFsbChsaXN0LCBhcnJheSk7CiAgamF2YS51dGlsLkNvbGxlY3Rpb25zLmFk
ZEFsbChsaXN0LCBpdGVtcyk7CiAgCiAgcmV0dXJuIGxpc3QudG9BcnJheShqYXZhLnV0aWwuQXJy
YXlzLmNvcHlPZihhcnJheSwgMCkpOwp9CgovLyByZXR1cm5zIG9ubHkgdGhlIGl0ZW1zIGluIHgg
dGhhdCBhcmUgbm90IGFsc28gaW4geQpwdWJsaWMgc3RhdGljIDxUPiBUW10gZGlmZmVyZW5jZShU
W10geCwgVFtdIHkpIHsKICBpZiAoeCA9PSBudWxsIHx8IHkgPT0gbnVsbCkgcmV0dXJuIHg7Cgog
IGphdmEudXRpbC5MaXN0PFQ+IGQgPSBuZXcgamF2YS51dGlsLkFycmF5TGlzdDxUPih4Lmxlbmd0
aCk7CiAgZC5hZGRBbGwoamF2YS51dGlsLkFycmF5cy5hc0xpc3QoeCkpOwogIGQucmVtb3ZlQWxs
KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KHkpKTsKICAKICByZXR1cm4gZC50b0FycmF5KGphdmEu
dXRpbC5BcnJheXMuY29weU9mKHgsIDApKTsKfQoKLy8gcmVtb3ZlcyB0aGUgZWxlbWVudCBhdCB0
aGUgZ2l2ZW4gaW5kZXggZnJvbSB0aGUgZ2l2ZW4gbGlzdApwdWJsaWMgc3RhdGljIDxUPiBUW10g
ZHJvcChUW10gYXJyYXksIFN0cmluZyBpbmRleCkgewogIHJldHVybiBkcm9wKGFycmF5LCBJbnRl
Z2VyLnBhcnNlSW50KGluZGV4KSk7Cn0KCi8vIHJlbW92ZXMgdGhlIGVsZW1lbnQgYXQgdGhlIGdp
dmVuIGluZGV4IGZyb20gdGhlIGdpdmVuIGxpc3QKcHVibGljIHN0YXRpYyA8VD4gVFtdIGRyb3Ao
VFtdIGFycmF5LCBpbnQgaW5kZXgpIHsKICBpZiAoYXJyYXkgIT0gbnVsbCkgewogICAgLy8gc3Vw
cG9ydCByZXZlcnNlL3RhaWwgaW5kZXhpbmcKICAgIGlmIChpbmRleCA8IDApIGluZGV4ICs9IGFy
cmF5Lmxlbmd0aDsKICAgIGlmIChpbmRleCA8IDAgfHwgYXJyYXkubGVuZ3RoIDw9IGluZGV4KSB0
aHJvdyBuZXcgQXJyYXlJbmRleE91dE9mQm91bmRzRXhjZXB0aW9uKGluZGV4KTsKCiAgICBUW10g
aGVhZCA9IHNsaWNlKGFycmF5LCAwLCBpbmRleCk7CiAgICBUW10gdGFpbCA9IHNsaWNlKGFycmF5
LCBpbmRleCArIDEsIGFycmF5Lmxlbmd0aCAtIGluZGV4KTsKCiAgICBhcnJheSA9IGNvbmNhdGVu
YXRlKGhlYWQsIHRhaWwpOyAgICAgIAogIH0KCiAgcmV0dXJuIGFycmF5Owp9CgovLyBpbnZva2Vz
IHRoZSBnaXZlbiBzZXJ2aWNlIGZvciBlYWNoIGVsZW1lbnQgaW4gdGhlIGFycmF5CnB1YmxpYyBz
dGF0aWMgPFQ+IHZvaWQgZWFjaChUW10gYXJyYXksIFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBl
bGluZSwgU3RyaW5nIGlucHV0KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgbWFwKGFycmF5
LCBzZXJ2aWNlLCBwaXBlbGluZSwgaW5wdXQsIG51bGwpOwp9CgovLyByZXR1cm5zIHRydWUgaWYg
dGhlIGdpdmVuIGFycmF5cyBhcmUgZXF1YWwKcHVibGljIHN0YXRpYyA8VD4gYm9vbGVhbiBlcXVh
bChUW10geCwgVFtdIHkpIHsKICBib29sZWFuIHJlc3VsdCA9IHRydWU7CgogIGlmICh4ICE9IG51
bGwgJiYgeSAhPSBudWxsKSB7CiAgICByZXN1bHQgPSAoeC5sZW5ndGggPT0geS5sZW5ndGgpOwoK
ICAgIGlmIChyZXN1bHQpIHsKICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCB4Lmxlbmd0aDsgaSsr
KSB7CiAgICAgICAgcmVzdWx0ID0gcmVzdWx0ICYmIHR1bmRyYS5vYmplY3QuZXF1YWwoeFtpXSwg
eVtpXSk7CiAgICAgICAgaWYgKCFyZXN1bHQpIGJyZWFrOwogICAgICB9CiAgICB9CiAgfSBlbHNl
IHsKICAgIHJlc3VsdCA9ICh4ID09IG51bGwgJiYgeSA9PSBudWxsKTsKICB9CgogIHJldHVybiBy
ZXN1bHQ7Cn0KCi8vIGZpbHRlcnMgdGhlIGdpdmVuIGxpc3QgdG8gb25seSBpbmNsdWRlIGl0ZW1z
IHdoZXJlIHRoZSAKLy8gZ2l2ZW4gY29uZGl0aW9uIGV2YWx1YXRlcyB0byB0cnVlCnB1YmxpYyBz
dGF0aWMgPFQ+IFRbXSBmaWx0ZXIoVFtdIGFycmF5LCBTdHJpbmcgY29uZGl0aW9uLCBJRGF0YSBw
aXBlbGluZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIGlmIChhcnJheSA9PSBudWxsIHx8
IGFycmF5Lmxlbmd0aCA9PSAwIHx8IGNvbmRpdGlvbiA9PSBudWxsIHx8IGNvbmRpdGlvbi5lcXVh
bHMoIiIpKSByZXR1cm4gYXJyYXk7CiAgaWYgKHBpcGVsaW5lID09IG51bGwpIHBpcGVsaW5lID0g
SURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoKICBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+IGxpc3QgPSBu
ZXcgamF2YS51dGlsLkFycmF5TGlzdDxUPihhcnJheS5sZW5ndGgpOwoKICBmb3IgKGludCBpID0g
MDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBl
bGluZS5nZXRDdXJzb3IoKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGl0ZW0iLCBhcnJh
eVtpXSk7CgogICAgaWYgKENvbmRpdGlvbkV2YWx1YXRvci5ldmFsdWF0ZShjb25kaXRpb24sIHBp
cGVsaW5lKSkgbGlzdC5hZGQoYXJyYXlbaV0pOwogICAgCiAgICBJRGF0YVV0aWwucmVtb3ZlKGN1
cnNvciwgIiRpdGVtIik7CiAgICBjdXJzb3IuZGVzdHJveSgpOwogIH0KCiAgcmV0dXJuIGxpc3Qu
dG9BcnJheShqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgMCkpOyAgCn0KCi8vIHJldHVy
bnMgYSBuZXcgYXJyYXkgd2hpY2ggaXMgYSBvbmUtZGltZW5zaW9uYWwgcmVjdXJzaXZlIGZsYXR0
ZW5pbmcgb2YgdGhlIGdpdmVuIGFycmF5CnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSBmbGF0dGVuKFRb
XSBhcnJheSkgewogIGlmIChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0aCA9PSAwKSByZXR1
cm4gYXJyYXk7CgogIGphdmEudXRpbC5BcnJheUxpc3Q8VD4gbGlzdCA9IG5ldyBqYXZhLnV0aWwu
QXJyYXlMaXN0PFQ+KGFycmF5Lmxlbmd0aCk7CgogIGZvciAoaW50IGkgPSAwOyBpIDwgYXJyYXku
bGVuZ3RoOyBpKyspIHsKICAgIGlmIChhcnJheVtpXSAhPSBudWxsICYmIGFycmF5W2ldLmdldENs
YXNzKCkuaXNBcnJheSgpKSB7CiAgICAgIGxpc3QuZW5zdXJlQ2FwYWNpdHkobGlzdC5zaXplKCkg
KyAoKFRbXSlhcnJheVtpXSkubGVuZ3RoKTsKICAgICAgbGlzdC5hZGRBbGwoamF2YS51dGlsLkFy
cmF5cy5hc0xpc3QoZmxhdHRlbigoVFtdKWFycmF5W2ldKSkpOwogICAgfSBlbHNlIHsKICAgICAg
bGlzdC5hZGQoYXJyYXlbaV0pOwogICAgfQogIH0KICAKICByZXR1cm4gbGlzdC50b0FycmF5KGph
dmEudXRpbC5BcnJheXMuY29weU9mKGFycmF5LCAwKSk7ICAKfQoKLy8gcmV0dXJucyB0aGUgZWxl
bWVudCBmcm9tIHRoZSBnaXZlbiBhcnJheSBhdCB0aGUgZ2l2ZW4gaW5kZXggKHN1cHBvcnRzIHJ1
Ynktc3R5bGUgcmV2ZXJzZSBpbmRleGluZykKcHVibGljIHN0YXRpYyA8VD4gVCBnZXQoVFtdIGFy
cmF5LCBTdHJpbmcgaW5kZXgsIFN0cmluZyBpdGVyYXRpb24pIHsKICBpbnQgaSA9IDA7CiAgaWYg
KGluZGV4ICE9IG51bGwpIHsKICAgIGkgPSBJbnRlZ2VyLnBhcnNlSW50KGluZGV4KTsKICB9IGVs
c2UgewogICAgaSA9IEludGVnZXIucGFyc2VJbnQoaXRlcmF0aW9uKSAtIDE7CiAgfQogIHJldHVy
biBnZXQoYXJyYXksIGkpOwp9CgovLyByZXR1cm5zIHRoZSBlbGVtZW50IGZyb20gdGhlIGdpdmVu
IGFycmF5IGF0IHRoZSBnaXZlbiBpbmRleCAoc3VwcG9ydHMgcnVieS1zdHlsZSByZXZlcnNlIGlu
ZGV4aW5nKQpwdWJsaWMgc3RhdGljIDxUPiBUIGdldChUW10gYXJyYXksIFN0cmluZyBpbmRleCkg
ewogIHJldHVybiBnZXQoYXJyYXksIGluZGV4LCBudWxsKTsKfQoKLy8gcmV0dXJucyB0aGUgZWxl
bWVudCBmcm9tIHRoZSBnaXZlbiBhcnJheSBhdCB0aGUgZ2l2ZW4gaW5kZXggKHN1cHBvcnRzIHJ1
Ynktc3R5bGUgcmV2ZXJzZSBpbmRleGluZykKcHVibGljIHN0YXRpYyA8VD4gVCBnZXQoVFtdIGFy
cmF5LCBpbnQgaW5kZXgpIHsKICBUIGl0ZW0gPSBudWxsOwogIAogIGlmIChhcnJheSAhPSBudWxs
KSB7CiAgICAvLyBzdXBwb3J0IHJldmVyc2UvdGFpbCBpbmRleGluZwogICAgaWYgKGluZGV4IDwg
MCkgaW5kZXggKz0gYXJyYXkubGVuZ3RoOwogICAgCiAgICBpdGVtID0gYXJyYXlbaW5kZXhdOwog
IH0KICAKICByZXR1cm4gaXRlbTsKfQoKLy8gcmV0dXJucyB0aGUgZmlyc3QgZWxlbWVudCBmcm9t
IHRoZSBnaXZlbiBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBUIGZpcnN0KFRbXSBhcnJheSkgewog
IHJldHVybiBnZXQoYXJyYXksIDApOwp9CgovLyByZXR1cm5zIHRoZSBsYXN0IGVsZW1lbnQgZnJv
bSB0aGUgZ2l2ZW4gYXJyYXkKcHVibGljIHN0YXRpYyA8VD4gVCBsYXN0KFRbXSBhcnJheSkgewog
IHJldHVybiBnZXQoYXJyYXksIC0xKTsKfQoKLy8gcmVzaXplcyB0aGUgZ2l2ZW4gYXJyYXkgKG9y
IGluc3RhbnRpYXRlcyBhIG5ldyBhcnJheSwgaWYgbnVsbCkgdG8gdGhlIGRlc2lyZWQgbGVuZ3Ro
LCAKLy8gYW5kIHBhZHMgd2l0aCB0aGUgZ2l2ZW4gaXRlbQpwdWJsaWMgc3RhdGljIDxUPiBUW10g
cmVzaXplKFRbXSBhcnJheSwgaW50IG5ld0xlbmd0aCwgVCBpdGVtLCBDbGFzczxUPiBrbGFzcykg
ewogIGlmIChhcnJheSA9PSBudWxsKSBhcnJheSA9IChUW10pamF2YS5sYW5nLnJlZmxlY3QuQXJy
YXkubmV3SW5zdGFuY2Uoa2xhc3MsIDApOwogIHJldHVybiByZXNpemUoYXJyYXksIG5ld0xlbmd0
aCwgaXRlbSk7Cn0KCi8vIHJlc2l6ZXMgdGhlIGdpdmVuIGFycmF5IHRvIHRoZSBkZXNpcmVkIGxl
bmd0aCwgYW5kIHBhZHMgd2l0aCB0aGUgZ2l2ZW4gaXRlbQpwdWJsaWMgc3RhdGljIDxUPiBUW10g
cmVzaXplKFRbXSBhcnJheSwgaW50IG5ld0xlbmd0aCwgVCBpdGVtKSB7CiAgaWYgKG5ld0xlbmd0
aCA8IDApIG5ld0xlbmd0aCA9IGFycmF5Lmxlbmd0aCArIG5ld0xlbmd0aDsKICBpZiAobmV3TGVu
Z3RoIDwgMCkgbmV3TGVuZ3RoID0gMDsKCiAgaW50IG9yaWdpbmFsTGVuZ3RoID0gYXJyYXkubGVu
Z3RoOwogIGlmIChuZXdMZW5ndGggPT0gb3JpZ2luYWxMZW5ndGgpIHJldHVybiBhcnJheTsKCiAg
YXJyYXkgPSBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgbmV3TGVuZ3RoKTsKICBpZiAo
aXRlbSAhPSBudWxsKSB7CiAgICBmb3IgKGludCBpID0gb3JpZ2luYWxMZW5ndGg7IGkgPCBuZXdM
ZW5ndGg7IGkrKykgYXJyYXlbaV0gPSBpdGVtOwogIH0KICByZXR1cm4gYXJyYXk7Cn0KCi8vIHJl
c2l6ZXMgdGhlIGdpdmVuIGFycmF5IHRvIHRoZSBkZXNpcmVkIGxlbmd0aCwgYW5kIHBhZHMgd2l0
aCBudWxscwpwdWJsaWMgc3RhdGljIDxUPiBUW10gcmVzaXplKFRbXSBhcnJheSwgaW50IG5ld0xl
bmd0aCkgewogIHJldHVybiByZXNpemUoYXJyYXksIG5ld0xlbmd0aCwgbnVsbCk7Cn0KCi8vIHJl
c2l6ZXMgdGhlIGdpdmVuIGFycmF5IHRvIHRoZSBkZXNpcmVkIGxlbmd0aCwgYW5kIHBhZHMgd2l0
aCB0aGUgZ2l2ZW4gaXRlbQpwdWJsaWMgc3RhdGljIDxUPiB2b2lkIHJlc2l6ZShJRGF0YSBwaXBl
bGluZSwgQ2xhc3M8VD4ga2xhc3MpIHsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5n
ZXRDdXJzb3IoKTsKCiAgdHJ5IHsKICAgIFRbXSBsaXN0ID0gKFRbXSlJRGF0YVV0aWwuZ2V0T2Jq
ZWN0QXJyYXkoY3Vyc29yLCAiJGxpc3QiKTsKICAgIGludCBsZW5ndGggPSBJbnRlZ2VyLnBhcnNl
SW50KElEYXRhVXRpbC5nZXRTdHJpbmcoY3Vyc29yLCAiJGxlbmd0aCIpKTsKICAgIFQgaXRlbSA9
IChUKUlEYXRhVXRpbC5nZXQoY3Vyc29yLCAiJGl0ZW0iKTsKCiAgICBsaXN0ID0gcmVzaXplKGxp
c3QsIGxlbmd0aCwgaXRlbSwga2xhc3MpOwoKICAgIGlmIChsaXN0ICE9IG51bGwpIElEYXRhVXRp
bC5wdXQoY3Vyc29yLCAiJGxpc3QiLCBsaXN0KTsKICB9IGZpbmFsbHkgewogICAgY3Vyc29yLmRl
c3Ryb3koKTsKICB9Cn0KCi8vIGdyb3dzIHRoZSBzaXplIG9mIHRoZSBnaXZlbiBhcnJheSBieSB0
aGUgZ2l2ZW4gY291bnQsIGFuZCBwYWRzIHdpdGggdGhlIGdpdmVuIGl0ZW0KcHVibGljIHN0YXRp
YyA8VD4gVFtdIGdyb3coVFtdIGFycmF5LCBpbnQgY291bnQsIFQgaXRlbSwgQ2xhc3M8VD4ga2xh
c3MpIHsKICByZXR1cm4gcmVzaXplKGFycmF5LCBhcnJheSA9PSBudWxsID8gY291bnQgOiBhcnJh
eS5sZW5ndGggKyBjb3VudCwgaXRlbSwga2xhc3MpOwp9CgovLyBncm93cyB0aGUgZ2l2ZW4gYXJy
YXkgdG8gdGhlIGRlc2lyZWQgbGVuZ3RoLCBhbmQgcGFkcyB3aXRoIHRoZSBnaXZlbiBpdGVtCnB1
YmxpYyBzdGF0aWMgPFQ+IHZvaWQgZ3JvdyhJRGF0YSBwaXBlbGluZSwgQ2xhc3M8VD4ga2xhc3Mp
IHsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKCiAgdHJ5IHsK
ICAgIFRbXSBsaXN0ID0gKFRbXSlJRGF0YVV0aWwuZ2V0T2JqZWN0QXJyYXkoY3Vyc29yLCAiJGxp
c3QiKTsKICAgIGludCBjb3VudCA9IEludGVnZXIucGFyc2VJbnQoSURhdGFVdGlsLmdldFN0cmlu
ZyhjdXJzb3IsICIkY291bnQiKSk7CiAgICBUIGl0ZW0gPSAoVClJRGF0YVV0aWwuZ2V0KGN1cnNv
ciwgIiRpdGVtIik7CgogICAgbGlzdCA9IGdyb3cobGlzdCwgY291bnQsIGl0ZW0sIGtsYXNzKTsK
CiAgICBpZiAobGlzdCAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRsaXN0IiwgbGlz
dCk7CiAgfSBmaW5hbGx5IHsKICAgIGN1cnNvci5kZXN0cm95KCk7CiAgfQp9CgovLyBzaHJpbmtz
IHRoZSBzaXplIG9mIHRoZSBnaXZlbiBhcnJheSBieSB0aGUgZ2l2ZW4gY291bnQKcHVibGljIHN0
YXRpYyA8VD4gVFtdIHNocmluayhUW10gYXJyYXksIGludCBjb3VudCkgewogIGlmIChhcnJheSAh
PSBudWxsKSB7CiAgICBpbnQgbGVuZ3RoID0gYXJyYXkubGVuZ3RoIC0gY291bnQ7CiAgICBhcnJh
eSA9IHJlc2l6ZShhcnJheSwgbGVuZ3RoIDwgMCA/IDAgOiBsZW5ndGgpOwogIH0KICByZXR1cm4g
YXJyYXk7Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gaXRlbSBpcyBmb3VuZCBpbiB0
aGUgZ2l2ZW4gYXJyYXkKcHVibGljIHN0YXRpYyA8VD4gYm9vbGVhbiBpbmNsdWRlKFRbXSBhcnJh
eSwgVCBpdGVtKSB7CiAgYm9vbGVhbiBmb3VuZCA9IGZhbHNlOwoKICBpZiAoYXJyYXkgIT0gbnVs
bCkgewogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykgewogICAgICBm
b3VuZCA9IHR1bmRyYS5vYmplY3QuZXF1YWwoYXJyYXlbaV0sIGl0ZW0pOwogICAgICBpZiAoZm91
bmQpIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIGZvdW5kOwp9CgovLyByZXR1cm5zIGEgbmV3
IGFycmF5IHdpdGggdGhlIGdpdmVuIGl0ZW0gaW5zZXJ0ZWQgYXQgdGhlIGdpdmVuIGluZGV4CnB1
YmxpYyBzdGF0aWMgPFQ+IFRbXSBpbnNlcnQoVFtdIGFycmF5LCBUIGl0ZW0sIFN0cmluZyBpbmRl
eCwgQ2xhc3M8VD4ga2xhc3MpIHsKICBpZiAoaW5kZXggPT0gbnVsbCkgaW5kZXggPSAiLTEiOwog
IHJldHVybiBpbnNlcnQoYXJyYXksIGl0ZW0sIEludGVnZXIucGFyc2VJbnQoaW5kZXgpLCBrbGFz
cyk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCB0aGUgZ2l2ZW4gaXRlbSBpbnNlcnRl
ZCBhdCB0aGUgZ2l2ZW4gaW5kZXgKcHVibGljIHN0YXRpYyA8VD4gVFtdIGluc2VydChUW10gYXJy
YXksIFQgaXRlbSwgaW50IGluZGV4LCBDbGFzczxUPiBrbGFzcykgewogIGlmIChhcnJheSA9PSBu
dWxsKSBhcnJheSA9IChUW10pamF2YS5sYW5nLnJlZmxlY3QuQXJyYXkubmV3SW5zdGFuY2Uoa2xh
c3MsIDApOwoKICBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+IGxpc3QgPSBuZXcgamF2YS51dGlsLkFy
cmF5TGlzdDxUPihqYXZhLnV0aWwuQXJyYXlzLmFzTGlzdChhcnJheSkpOwoKICBpbnQgY2FwYWNp
dHkgPSAwOwogIGlmIChpbmRleCA8IDApIGluZGV4ICs9IGxpc3Quc2l6ZSgpICsgMTsKICBpZiAo
aW5kZXggPCAwKSB7CiAgICBjYXBhY2l0eSA9IChpbmRleCAqIC0xKSArIGxpc3Quc2l6ZSgpOwog
ICAgaW5kZXggPSAwOwogIH0gZWxzZSB7CiAgICBjYXBhY2l0eSA9IGluZGV4OwogIH0KCiAgbGlz
dC5lbnN1cmVDYXBhY2l0eShjYXBhY2l0eSk7CiAgaWYgKGNhcGFjaXR5ID49IGxpc3Quc2l6ZSgp
KSB7CiAgICAvLyBmaWxsIHRoZSBsaXN0IHdpdGggbnVsbHMgaWYgaXQgbmVlZHMgdG8gYmUgZXh0
ZW5kZWQKICAgIGZvciAoaW50IGkgPSBsaXN0LnNpemUoKTsgaSA8IGNhcGFjaXR5OyBpKyspIHsK
ICAgICAgbGlzdC5hZGQoaSwgbnVsbCk7CiAgICB9CiAgfQogIGxpc3QuYWRkKGluZGV4LCBpdGVt
KTsKICAKICByZXR1cm4gbGlzdC50b0FycmF5KGFycmF5KTsKfQoKLy8gcmV0dXJucyBhIG5ldyBh
cnJheSwgd2l0aCB0aGUgZ2l2ZW4gZWxlbWVudCBpbnNlcnRlZCBhdCB0aGUgZ2l2ZW4gaW5kZXgK
cHVibGljIHN0YXRpYyA8VD4gdm9pZCBpbnNlcnQoSURhdGEgcGlwZWxpbmUsIENsYXNzPFQ+IGts
YXNzKSB7CiAgSURhdGFDdXJzb3IgY3Vyc29yID0gcGlwZWxpbmUuZ2V0Q3Vyc29yKCk7CgogIHRy
eSB7CiAgICBUW10gbGlzdCA9IChUW10pSURhdGFVdGlsLmdldE9iamVjdEFycmF5KGN1cnNvciwg
IiRsaXN0Iik7CiAgICBUIGl0ZW0gPSAoVClJRGF0YVV0aWwuZ2V0KGN1cnNvciwgIiRpdGVtIik7
CiAgICBTdHJpbmcgaW5kZXggPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGN1cnNvciwgIiRpbmRleCIp
OwoKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGxpc3QiLCBpbnNlcnQobGlzdCA9PSBudWxs
ID8gbnVsbCA6IGphdmEudXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xh
c3M8VFtdPilqYXZhLmxhbmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0
Q2xhc3MoKSksIGl0ZW0sIGluZGV4LCBrbGFzcykpOwogIH0gZmluYWxseSB7CiAgICBjdXJzb3Iu
ZGVzdHJveSgpOwogIH0KfQoKLy8gcmV0dXJucyBvbmx5IHRoZSBpdGVtcyBpbiB4IHRoYXQgYXJl
IGFsc28gaW4geQpwdWJsaWMgc3RhdGljIDxUPiBUW10gaW50ZXJzZWN0aW9uKFRbXSB4LCBUW10g
eSkgewogIGlmICh4ID09IG51bGwgfHwgeSA9PSBudWxsKSByZXR1cm4gbnVsbDsKCiAgamF2YS51
dGlsLkxpc3Q8VD4gZCA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+KHgubGVuZ3RoKTsKICBk
LmFkZEFsbChqYXZhLnV0aWwuQXJyYXlzLmFzTGlzdCh4KSk7CiAgZC5yZXRhaW5BbGwoamF2YS51
dGlsLkFycmF5cy5hc0xpc3QoeSkpOwogIAogIHJldHVybiBkLnRvQXJyYXkoamF2YS51dGlsLkFy
cmF5cy5jb3B5T2YoeCwgMCkpOwp9CgovLyByZXR1cm5zIGEgc3RyaW5nIGNyZWF0ZWQgYnkgY29u
Y2F0ZW5hdGluZyBlYWNoIGVsZW1lbnQgb2YgdGhlIGdpdmVuIGFycmF5LCBzZXBhcmF0ZWQgYnkg
dGhlIGdpdmVuIHNlcGFyYXRvciBzdHJpbmcKcHVibGljIHN0YXRpYyA8VD4gU3RyaW5nIGpvaW4o
VFtdIGFycmF5LCBTdHJpbmcgc2VwYXJhdG9yKSB7CiAgU3RyaW5nQnVpbGRlciBidWlsZGVyID0g
bmV3IFN0cmluZ0J1aWxkZXIoKTsKICAKICBpZiAoYXJyYXkgIT0gbnVsbCkgewogICAgZm9yIChp
bnQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykgewogICAgICBUIHZhbHVlID0gYXJyYXlb
aV07CiAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSBidWlsZGVyLmFwcGVuZCh2YWx1ZS50b1N0cmlu
ZygpKTsKICAgICAgaWYgKHNlcGFyYXRvciAhPSBudWxsICYmIGkgPCBhcnJheS5sZW5ndGggLSAx
KSBidWlsZGVyLmFwcGVuZChzZXBhcmF0b3IpOwogICAgfQogIH0KICAKICByZXR1cm4gYnVpbGRl
ci50b1N0cmluZygpOwp9CgovLyByZXR1cm5zIHRoZSBsZW5ndGggb2YgdGhlIGdpdmVuIGFycmF5
CnB1YmxpYyBzdGF0aWMgPFQ+IGludCBsZW5ndGgoVFtdIGFycmF5KSB7CiAgcmV0dXJuIChhcnJh
eSA9PSBudWxsPyAwIDogYXJyYXkubGVuZ3RoKTsKfQoKLy8gbWFwcyB0aGUgZ2l2ZW4gYXJyYXkg
dG8gYSBuZXcgYXJyYXkgYnkgaW52b2tpbmcgYSBzZXJ2aWNlIGZvciBlYWNoIGVsZW1lbnQgYW5k
IGNvbGxlY3RpbmcgdGhlIG91dHB1dApwdWJsaWMgc3RhdGljIDxUPiB2b2lkIG1hcChJRGF0YSBw
aXBlbGluZSwgQ2xhc3M8VD4ga2xhc3MpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBJRGF0
YUN1cnNvciBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKCiAgdHJ5IHsKICAgIE9iamVj
dFtdIGxpc3QgPSBJRGF0YVV0aWwuZ2V0T2JqZWN0QXJyYXkoY3Vyc29yLCAiJGxpc3QiKTsKICAg
IFN0cmluZyBzZXJ2aWNlID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICIkc2VydmljZSIp
OwogICAgSURhdGEgc2NvcGUgPSBJRGF0YVV0aWwuZ2V0SURhdGEoY3Vyc29yLCAiJHBpcGVsaW5l
Iik7CiAgICBTdHJpbmcgaW5wdXQgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGN1cnNvciwgIiRpdGVt
LmlucHV0Iik7CiAgICBTdHJpbmcgb3V0cHV0ID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3Is
ICIkaXRlbS5vdXRwdXQiKTsKCiAgICBib29sZWFuIHNjb3BlZCA9IHNjb3BlICE9IG51bGw7Cgog
ICAgLy8gaW52b2tlIHRoZSBzZXJ2aWNlIGZvciBlYWNoIGl0ZW0gaW4gdGhlIGxpc3QsIHBhc3Np
bmcgJGl0ZW0gYW5kICRpbmRleCB2YXJpYWJsZXMgb24gZWFjaCBpbnZvY2F0aW9uCiAgICAvLyBh
bmQgY29sbGVjdCB0aGUgcmV0dXJuZWQgJGl0ZW0ncyBpbnRvIGEgbmV3IGxpc3QKICAgIElEYXRh
VXRpbC5wdXQoY3Vyc29yLCAiJGxpc3QiLCBtYXAobGlzdCA9PSBudWxsID8gbnVsbCA6IGphdmEu
dXRpbC5BcnJheXMuY29weU9mKGxpc3QsIGxpc3QubGVuZ3RoLCAoQ2xhc3M8VFtdPilqYXZhLmxh
bmcucmVmbGVjdC5BcnJheS5uZXdJbnN0YW5jZShrbGFzcywgMCkuZ2V0Q2xhc3MoKSksIHNlcnZp
Y2UsIHNjb3BlZCA/IHNjb3BlIDogcGlwZWxpbmUsIGlucHV0LCBvdXRwdXQpKTsKICB9IGZpbmFs
bHkgewogICAgY3Vyc29yLmRlc3Ryb3koKTsKICB9Cn0KCi8vIG1hcHMgdGhlIGdpdmVuIGFycmF5
IHRvIGEgbmV3IGFycmF5IGJ5IGludm9raW5nIGEgc2VydmljZSBmb3IgZWFjaCBlbGVtZW50IGFu
ZCBjb2xsZWN0aW5nIHRoZSBvdXRwdXQKcHVibGljIHN0YXRpYyA8VD4gVFtdIG1hcChUW10gYXJy
YXksIFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU3RyaW5nIGlucHV0LCBTdHJpbmcg
b3V0cHV0KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwg
YXJyYXkubGVuZ3RoID09IDAgfHwgc2VydmljZSA9PSBudWxsKSByZXR1cm4gYXJyYXk7CiAgaWYg
KHBpcGVsaW5lID09IG51bGwpIHBpcGVsaW5lID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogIGlm
IChpbnB1dCA9PSBudWxsKSBpbnB1dCA9ICIkaXRlbSI7CiAgaWYgKG91dHB1dCA9PSBudWxsKSBv
dXRwdXQgPSBpbnB1dDsKICAgCiAgamF2YS51dGlsLkxpc3Q8VD4gbGlzdCA9IG5ldyBqYXZhLnV0
aWwuQXJyYXlMaXN0PFQ+KGFycmF5Lmxlbmd0aCk7CiAgSURhdGFDdXJzb3IgY3Vyc29yID0gbnVs
bDsKICAKICBmb3IgKGludCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAvLyBh
ZGQgJGl0ZW0sICRpbmRleCwgJGl0ZXJhdGlvbiBhbmQgJGxlbmd0aCB2YXJpYWJsZXMgdG8gdGhl
IGlucHV0IHBpcGVsaW5lCiAgICBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKICAgIElE
YXRhVXRpbC5wdXQoY3Vyc29yLCBpbnB1dCwgYXJyYXlbaV0pOwogICAgSURhdGFVdGlsLnB1dChj
dXJzb3IsICIkaW5kZXgiLCAiIiArIGkpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkaXRl
cmF0aW9uIiwgIiIgKyAoaSArIDEpKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGxlbmd0
aCIsICIiICsgYXJyYXkubGVuZ3RoKTsKICAgIGN1cnNvci5kZXN0cm95KCk7CgogICAgLy8gaW52
b2tlIHRoZSBpdGVyYXRvciBzZXJ2aWNlCiAgICBwaXBlbGluZSA9IHR1bmRyYS5zZXJ2aWNlLmlu
dm9rZShzZXJ2aWNlLCBwaXBlbGluZSk7CgogICAgLy8gY2xlYW4gdXAgdGhlIGlucHV0IHBpcGVs
aW5lCiAgICBjdXJzb3IgPSBwaXBlbGluZS5nZXRDdXJzb3IoKTsKICAgIFQgaXRlbSA9IChUKUlE
YXRhVXRpbC5nZXQoY3Vyc29yLCBvdXRwdXQpOwogICAgSURhdGFVdGlsLnJlbW92ZShjdXJzb3Is
IGlucHV0KTsKICAgIElEYXRhVXRpbC5yZW1vdmUoY3Vyc29yLCBvdXRwdXQpOwogICAgSURhdGFV
dGlsLnJlbW92ZShjdXJzb3IsICIkaW5kZXgiKTsKICAgIElEYXRhVXRpbC5yZW1vdmUoY3Vyc29y
LCAiJGl0ZXJhdGlvbiIpOwogICAgSURhdGFVdGlsLnJlbW92ZShjdXJzb3IsICIkbGVuZ3RoIik7
CiAgICBjdXJzb3IuZGVzdHJveSgpOwogICAgCiAgICAvLyBjb2xsZWN0IHRoZSBtYXBwZWQgaXRl
bXMKICAgIGxpc3QuYWRkKGl0ZW0pOwogIH0KICAKICByZXR1cm4gbGlzdC50b0FycmF5KGphdmEu
dXRpbC5BcnJheXMuY29weU9mKGFycmF5LCAwKSk7Cn0KCi8vIHJldHVybnMgYSBuZXcgYXJyYXkg
d2l0aCBhIG5ldyBlbGVtZW50IGluc2VydGVkIGF0IHRoZSBiZWdpbm5pbmcKcHVibGljIHN0YXRp
YyA8VD4gVFtdIHByZXBlbmQoVFtdIGFycmF5LCBUIGl0ZW0sIENsYXNzPFQ+IGtsYXNzKSB7CiAg
cmV0dXJuIGluc2VydChhcnJheSwgaXRlbSwgMCwga2xhc3MpOwp9CgovLyByZXR1cm5zIGEgbmV3
IGFycmF5LCB3aXRoIHRoZSBnaXZlbiBlbGVtZW50IGluc2VydGVkIGF0IHRoZSBlbmQKcHVibGlj
IHN0YXRpYyA8VD4gdm9pZCBwcmVwZW5kKElEYXRhIHBpcGVsaW5lLCBDbGFzczxUPiBrbGFzcykg
ewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdldEN1cnNvcigpOwoKICB0cnkgewog
ICAgVFtdIGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmplY3RBcnJheShjdXJzb3IsICIkbGlz
dCIpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChjdXJzb3IsICIkaXRlbSIpOwoKICAg
IGxpc3QgPSBwcmVwZW5kKGxpc3QgPT0gbnVsbCA/IG51bGwgOiBqYXZhLnV0aWwuQXJyYXlzLmNv
cHlPZihsaXN0LCBsaXN0Lmxlbmd0aCwgKENsYXNzPFRbXT4pamF2YS5sYW5nLnJlZmxlY3QuQXJy
YXkubmV3SW5zdGFuY2Uoa2xhc3MsIDApLmdldENsYXNzKCkpLCBpdGVtLCBrbGFzcyk7CgogICAg
aWYgKGxpc3QgIT0gbnVsbCkgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkbGlzdCIsIGxpc3QpOwog
IH0gZmluYWxseSB7CiAgICBjdXJzb3IuZGVzdHJveSgpOwogIH0KfQoKLy8gc2V0cyB0aGUgZWxl
bWVudCBmcm9tIHRoZSBnaXZlbiBhcnJheSBhdCB0aGUgZ2l2ZW4gaW5kZXggKHN1cHBvcnRzIHJ1
Ynktc3R5bGUgcmV2ZXJzZSBpbmRleGluZykKcHVibGljIHN0YXRpYyA8VD4gVFtdIHB1dChUW10g
YXJyYXksIFQgaXRlbSwgU3RyaW5nIGluZGV4LCBDbGFzczxUPiBrbGFzcykgewogIHJldHVybiBw
dXQoYXJyYXksIGl0ZW0sIEludGVnZXIucGFyc2VJbnQoaW5kZXgpLCBrbGFzcyk7Cn0KCi8vIHNl
dHMgdGhlIGVsZW1lbnQgZnJvbSB0aGUgZ2l2ZW4gYXJyYXkgYXQgdGhlIGdpdmVuIGluZGV4IChz
dXBwb3J0cyBydWJ5LXN0eWxlIHJldmVyc2UgaW5kZXhpbmcpCnB1YmxpYyBzdGF0aWMgPFQ+IFRb
XSBwdXQoVFtdIGFycmF5LCBUIGl0ZW0sIGludCBpbmRleCwgQ2xhc3M8VD4ga2xhc3MpIHsKICBp
ZiAoYXJyYXkgPT0gbnVsbCkgYXJyYXkgPSAoVFtdKWphdmEubGFuZy5yZWZsZWN0LkFycmF5Lm5l
d0luc3RhbmNlKGtsYXNzLCAwKTsKCiAgLy8gc3VwcG9ydCByZXZlcnNlL3RhaWwgaW5kZXhpbmcK
ICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBhcnJheS5sZW5ndGg7CiAgaW50IGNhcGFjaXR5ID0g
MDsKICBpZiAoaW5kZXggPCAwKSB7CiAgICBjYXBhY2l0eSA9IChpbmRleCAqIC0xKSArIGFycmF5
Lmxlbmd0aDsKICAgIGluZGV4ID0gMDsKICB9IGVsc2UgewogICAgY2FwYWNpdHkgPSBpbmRleCAr
IDE7CiAgfQogIGlmIChjYXBhY2l0eSA+IGFycmF5Lmxlbmd0aCkgYXJyYXkgPSBqYXZhLnV0aWwu
QXJyYXlzLmNvcHlPZihhcnJheSwgY2FwYWNpdHkpOwoKICBhcnJheVtpbmRleF0gPSBpdGVtOwoK
ICByZXR1cm4gYXJyYXk7Cn0KCi8vIHNldHMgdGhlIGVsZW1lbnQgZnJvbSB0aGUgZ2l2ZW4gYXJy
YXkgYXQgdGhlIGdpdmVuIGluZGV4IChzdXBwb3J0cyBydWJ5LXN0eWxlIHJldmVyc2UgaW5kZXhp
bmcpCnB1YmxpYyBzdGF0aWMgPFQ+IHZvaWQgcHV0KElEYXRhIHBpcGVsaW5lLCBDbGFzczxUPiBr
bGFzcykgewogIElEYXRhQ3Vyc29yIGN1cnNvciA9IHBpcGVsaW5lLmdldEN1cnNvcigpOwoKICB0
cnkgewogICAgVFtdIGxpc3QgPSAoVFtdKUlEYXRhVXRpbC5nZXRPYmplY3RBcnJheShjdXJzb3Is
ICIkbGlzdCIpOwogICAgVCBpdGVtID0gKFQpSURhdGFVdGlsLmdldChjdXJzb3IsICIkaXRlbSIp
OwogICAgU3RyaW5nIGluZGV4ID0gSURhdGFVdGlsLmdldFN0cmluZyhjdXJzb3IsICIkaW5kZXgi
KTsKCiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRsaXN0IiwgcHV0KGxpc3QgPT0gbnVsbCA/
IG51bGwgOiBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihsaXN0LCBsaXN0Lmxlbmd0aCwgKENsYXNz
PFRbXT4pamF2YS5sYW5nLnJlZmxlY3QuQXJyYXkubmV3SW5zdGFuY2Uoa2xhc3MsIDApLmdldENs
YXNzKCkpLCBpdGVtLCBpbmRleCwga2xhc3MpKTsKICB9IGZpbmFsbHkgewogICAgY3Vyc29yLmRl
c3Ryb3koKTsKICB9Cn0KCi8vIGZpbHRlcnMgdGhlIGdpdmVuIGxpc3QgdG8gbm90IGluY2x1ZGUg
aXRlbXMgd2hlcmUgdGhlIAovLyBnaXZlbiBjb25kaXRpb24gZXZhbHVhdGVzIHRvIHRydWUKcHVi
bGljIHN0YXRpYyA8VD4gVFtdIHJlamVjdChUW10gYXJyYXksIFN0cmluZyBjb25kaXRpb24sIElE
YXRhIHBpcGVsaW5lKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgaWYgKGFycmF5ID09IG51
bGwgfHwgYXJyYXkubGVuZ3RoID09IDAgfHwgY29uZGl0aW9uID09IG51bGwgfHwgY29uZGl0aW9u
LmVxdWFscygiIikpIHJldHVybiBhcnJheTsKICBpZiAocGlwZWxpbmUgPT0gbnVsbCkgcGlwZWxp
bmUgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgogIGphdmEudXRpbC5BcnJheUxpc3Q8VD4gbGlz
dCA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+KGFycmF5Lmxlbmd0aCk7CgogIGZvciAoaW50
IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHsKICAgIElEYXRhQ3Vyc29yIGN1cnNvciA9
IHBpcGVsaW5lLmdldEN1cnNvcigpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkaXRlbSIs
IGFycmF5W2ldKTsKCiAgICBpZiAoIUNvbmRpdGlvbkV2YWx1YXRvci5ldmFsdWF0ZShjb25kaXRp
b24sIHBpcGVsaW5lKSkgbGlzdC5hZGQoYXJyYXlbaV0pOwogICAgCiAgICBJRGF0YVV0aWwucmVt
b3ZlKGN1cnNvciwgIiRpdGVtIik7CiAgICBjdXJzb3IuZGVzdHJveSgpOwogIH0KCiAgcmV0dXJu
IGxpc3QudG9BcnJheShqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZihhcnJheSwgMCkpOyAgCn0KCi8v
IHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCBhbGwgZWxlbWVudHMgZnJvbSB0aGUgZ2l2ZW4gYXJy
YXkgYnV0IGluIHJldmVyc2Ugb3JkZXIKcHVibGljIHN0YXRpYyA8VD4gVFtdIHJldmVyc2UoVFtd
IGFycmF5KSB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwgYXJyYXkubGVuZ3RoIDw9IDEpIHJldHVy
biBhcnJheTsKICAKICBqYXZhLnV0aWwuQXJyYXlMaXN0PFQ+IGxpc3QgPSBuZXcgamF2YS51dGls
LkFycmF5TGlzdDxUPihqYXZhLnV0aWwuQXJyYXlzLmFzTGlzdChhcnJheSkpOwogIGphdmEudXRp
bC5Db2xsZWN0aW9ucy5yZXZlcnNlKGxpc3QpOwogIAogIHJldHVybiBsaXN0LnRvQXJyYXkoamF2
YS51dGlsLkFycmF5cy5jb3B5T2YoYXJyYXksIDApKTsgIAp9CgovLyByZXR1cm5zIGEgbmV3IGFy
cmF5IHdoaWNoIGlzIGEgc3Vic2V0IG9mIGVsZW1lbnRzIGZyb20gdGhlIGdpdmVuIGFycmF5CnB1
YmxpYyBzdGF0aWMgPFQ+IFRbXSBzbGljZShUW10gYXJyYXksIFN0cmluZyBpbmRleCwgU3RyaW5n
IGxlbmd0aCkgewogIHJldHVybiBzbGljZShhcnJheSwgaW5kZXggPT0gbnVsbCA/IDAgOiBJbnRl
Z2VyLnBhcnNlSW50KGluZGV4KSwgbGVuZ3RoID09IG51bGwgPyAoYXJyYXkgPT0gbnVsbCA/IDAg
OiBhcnJheS5sZW5ndGgpIDogSW50ZWdlci5wYXJzZUludChsZW5ndGgpKTsKfQoKLy8gcmV0dXJu
cyBhIG5ldyBhcnJheSB3aGljaCBpcyBhIHN1YnNldCBvZiBlbGVtZW50cyBmcm9tIHRoZSBnaXZl
biBhcnJheQpwdWJsaWMgc3RhdGljIDxUPiBUW10gc2xpY2UoVFtdIGFycmF5LCBpbnQgaW5kZXgs
IGludCBsZW5ndGgpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGggPT0gMCkg
cmV0dXJuIGFycmF5OwogIC8vIHN1cHBvcnQgcmV2ZXJzZS90YWlsIGxlbmd0aAogIGlmIChsZW5n
dGggPCAwKSBsZW5ndGggPSBhcnJheS5sZW5ndGggKyBsZW5ndGg7CiAgLy8gc3VwcG9ydCByZXZl
cnNlL3RhaWwgaW5kZXhpbmcKICBpZiAoaW5kZXggPCAwKSBpbmRleCArPSBhcnJheS5sZW5ndGg7
CiAgLy8gZG9uJ3Qgc2xpY2UgcGFzdCB0aGUgZW5kIG9mIHRoZSBhcnJheQogIGlmICgobGVuZ3Ro
ICs9IGluZGV4KSA+IGFycmF5Lmxlbmd0aCkgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOwogIAogIHJl
dHVybiBqYXZhLnV0aWwuQXJyYXlzLmNvcHlPZlJhbmdlKGFycmF5LCBpbmRleCwgbGVuZ3RoKTsK
fQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRoIGFsbCBlbGVtZW50cyBzb3J0ZWQKcHVibGlj
IHN0YXRpYyA8VD4gVFtdIHNvcnQoVFtdIGFycmF5KSB7CiAgaWYgKGFycmF5ID09IG51bGwgfHwg
YXJyYXkubGVuZ3RoIDw9IDEpIHJldHVybiBhcnJheTsKICAKICBUW10gY29weSA9IGphdmEudXRp
bC5BcnJheXMuY29weU9mKGFycmF5LCBhcnJheS5sZW5ndGgpOwogIGphdmEudXRpbC5BcnJheXMu
c29ydChjb3B5KTsKICByZXR1cm4gY29weTsKfQoKLy8gcmV0dXJucyBhIG5ldyBhcnJheSB3aXRo
IGFsbCBzdHJpbmcgaXRlbXMgdHJpbW1lZCwgYWxsCi8vIGVtcHR5IHN0cmluZyBpdGVtcyByZW1v
dmVkLCBhbmQgYWxsIG51bGwgaXRlbXMgcmVtb3ZlZApwdWJsaWMgc3RhdGljIDxUPiBUW10gc3F1
ZWV6ZShUW10gYXJyYXkpIHsKICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGggPT0g
MCkgcmV0dXJuIG51bGw7CgogIGphdmEudXRpbC5MaXN0PFQ+IGxpc3QgPSBuZXcgamF2YS51dGls
LkFycmF5TGlzdDxUPihhcnJheS5sZW5ndGgpOwoKICBmb3IgKGludCBpID0gMDsgaSA8IGFycmF5
Lmxlbmd0aDsgaSsrKSB7CiAgICBpZiAoYXJyYXlbaV0gIT0gbnVsbCAmJiBhcnJheVtpXSBpbnN0
YW5jZW9mIFN0cmluZykgewogICAgICBUIGl0ZW0gPSAoVCkoKFN0cmluZylhcnJheVtpXSkudHJp
bSgpOwogICAgICBpZiAoaXRlbS5lcXVhbHMoIiIpKSB7CiAgICAgICAgYXJyYXlbaV0gPSBudWxs
OwogICAgICB9IGVsc2UgewogICAgICAgIGFycmF5W2ldID0gaXRlbTsKICAgICAgfQogICAgfQog
ICAgaWYgKGFycmF5W2ldICE9IG51bGwpIGxpc3QuYWRkKGFycmF5W2ldKTsKICB9CgogIGFycmF5
ID0gbGlzdC50b0FycmF5KGphdmEudXRpbC5BcnJheXMuY29weU9mKGFycmF5LCAwKSk7CiAgaWYg
KGFycmF5Lmxlbmd0aCA9PSAwKSBhcnJheSA9IG51bGw7CiAgCiAgcmV0dXJuIGFycmF5Owp9Cgov
LyByZXR1cm5zIGEgbmV3IGFycmF5IHdpdGggYWxsIGR1cGxpY2F0ZSBlbGVtZW50cyByZW1vdmVk
CnB1YmxpYyBzdGF0aWMgPFQ+IFRbXSB1bmlxdWUoVFtdIGFycmF5KSB7CiAgaWYgKGFycmF5ID09
IG51bGwgfHwgYXJyYXkubGVuZ3RoIDw9IDEpIHJldHVybiBhcnJheTsKICAKICBqYXZhLnV0aWwu
U2V0PFQ+IHNldCA9IG5ldyBqYXZhLnV0aWwuVHJlZVNldDxUPihqYXZhLnV0aWwuQXJyYXlzLmFz
TGlzdChhcnJheSkpOwogIAogIHJldHVybiBzZXQudG9BcnJheShqYXZhLnV0aWwuQXJyYXlzLmNv
cHlPZihhcnJheSwgMCkpOwp9</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>permafrost.tundra.flow.ConditionEvaluator</value>
  </array>
</Values>
