<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.service</value>
  <value name="encodeutf8">true</value>
  <value name="shared">Ly8gY3JlYXRlcyBhIG5ldyBzZXJ2aWNlIGluIHRoZSBnaXZlbiBwYWNrYWdlIHdpdGggdGhlIGdp
dmVuIG5hbWUgYW5kIHRoZSBnaXZlbiB0eXBlCnB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGUoU3Ry
aW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgc2VydmljZU5hbWUsIFN0cmluZyB0eXBlLCBTdHJpbmcg
c3VidHlwZSkgdGhyb3dzIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlU2V0dXBFeGNlcHRp
b24gewogIGNvbS53bS5hcHAuYjJiLnNlcnZlci5QYWNrYWdlIHBhY2sgPSBjb20ud20uYXBwLmIy
Yi5zZXJ2ZXIuUGFja2FnZU1hbmFnZXIuZ2V0UGFja2FnZShwYWNrYWdlTmFtZSk7CiAgaWYgKHBh
Y2sgPT0gbnVsbCkgdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigicGFja2FnZSBk
b2VzIG5vdCBleGlzdDogIiArIHBhY2thZ2VOYW1lKTsKCiAgY29tLndtLmxhbmcubnMuTlNOYW1l
IHN2Y05hbWUgPSBjb20ud20ubGFuZy5ucy5OU05hbWUuY3JlYXRlKHNlcnZpY2VOYW1lKTsKICBp
ZiAoY29tLndtLmFwcC5iMmIuc2VydmVyLm5zLk5hbWVzcGFjZS5jdXJyZW50KCkubm9kZUV4aXN0
cyhzdmNOYW1lKSkgdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigibm9kZSBhbHJl
YWR5IGV4aXN0czogIiArIHNlcnZpY2VOYW1lKTsKCiAgaWYgKHR5cGUgPT0gbnVsbCkgdHlwZSA9
IGNvbS53bS5sYW5nLm5zLk5TU2VydmljZVR5cGUuU1ZDX0ZMT1c7CiAgaWYgKHN1YnR5cGUgPT0g
bnVsbCkgc3VidHlwZSA9IGNvbS53bS5sYW5nLm5zLk5TU2VydmljZVR5cGUuU1ZDU1VCX1VOS05P
V047CiAgY29tLndtLmxhbmcubnMuTlNTZXJ2aWNlVHlwZSBzZXJ2aWNlVHlwZSA9IGNvbS53bS5s
YW5nLm5zLk5TU2VydmljZVR5cGUuY3JlYXRlKHR5cGUsIHN1YnR5cGUpOwoKICBjb20ud20uYXBw
LmIyYi5zZXJ2ZXIuU2VydmVyQVBJLnJlZ2lzdGVyU2VydmljZShwYWNrYWdlTmFtZSwgc3ZjTmFt
ZSwgdHJ1ZSwgc2VydmljZVR5cGUsIG51bGwsIG51bGwsIG51bGwpOwp9CgovLyBjcmVhdGVzIGEg
bmV3IGZsb3cgc2VydmljZSBpbiB0aGUgZ2l2ZW4gcGFja2FnZSB3aXRoIHRoZSBnaXZlbiBuYW1l
CnB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGUoU3RyaW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgc2Vy
dmljZU5hbWUpIHRocm93cyBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZVNldHVwRXhjZXB0
aW9uIHsKICBjcmVhdGUocGFja2FnZU5hbWUsIHNlcnZpY2VOYW1lLCBudWxsLCBudWxsKTsKfQoK
Ly8gc2V0cyB0aGUgcmVzcG9uc2UgaGVhZGVycyBhbmQgYm9keSBmb3IgdGhlIGN1cnJlbnQgc2Vy
dmljZSBpbnZvY2F0aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCByZXNwb25kKGludCBjb2RlLCBTdHJp
bmcgbWVzc2FnZSwgSURhdGEgaGVhZGVycywgT2JqZWN0IGNvbnRlbnQsIFN0cmluZyBjb250ZW50
VHlwZSwgU3RyaW5nIGVuY29kaW5nKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsK
ICAgIGNvbS53bS5uZXQuSHR0cEhlYWRlciByZXNwb25zZSA9IGNvbS53bS5hcHAuYjJiLnNlcnZl
ci5TZXJ2aWNlLmdldEh0dHBSZXNwb25zZUhlYWRlcigpOwoKICAgIGlmIChyZXNwb25zZSA9PSBu
dWxsKSB7IAogICAgICAvLyBub3QgaW52b2tlZCB2aWEgSFRUUCwgc28gdGhyb3cgYW4gZXhjZXB0
aW9uIGluc3RlYWQgZm9yIEhUVFAgc3RhdHVzZXMgPj0gNDAwCiAgICAgIGlmIChjb2RlID49IDQw
MCkgRXhjZXB0aW9uSGVscGVyLnJhaXNlKFN0cmluZ0hlbHBlci5ub3JtYWxpemUoY29udGVudCwg
ZW5jb2RpbmcpKTsKICAgIH0gZWxzZSB7CiAgICAgIGlmIChtZXNzYWdlID09IG51bGwpIG1lc3Nh
Z2UgPSBIVFRQSGVscGVyLmdldFJlc3BvbnNlU3RhdHVzTWVzc2FnZShjb2RlKTsKICAgICAgcmVz
cG9uc2Uuc2V0UmVzcG9uc2UoY29kZSwgbWVzc2FnZSk7CgogICAgICBpZiAoY29udGVudFR5cGUg
PT0gbnVsbCkgY29udGVudFR5cGUgPSAiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIjsKICAgICAg
aWYgKGVuY29kaW5nID09IG51bGwpIGVuY29kaW5nID0gdHVuZHJhLnN1cHBvcnQuY29uc3RhbnQu
REVGQVVMVF9DSEFSQUNURVJfRU5DT0RJTkc7CgogICAgICBqYXZheC5hY3RpdmF0aW9uLk1pbWVU
eXBlIG1pbWVUeXBlID0gbmV3IGphdmF4LmFjdGl2YXRpb24uTWltZVR5cGUoY29udGVudFR5cGUp
OwogICAgICBtaW1lVHlwZS5zZXRQYXJhbWV0ZXIoImNoYXJzZXQiLCBlbmNvZGluZyk7CgogICAg
ICByZXNwb25zZS5jbGVhckZpZWxkKCJDb250ZW50LVR5cGUiKTsKICAgICAgcmVzcG9uc2UuYWRk
RmllbGQoIkNvbnRlbnQtVHlwZSIsIG1pbWVUeXBlLnRvU3RyaW5nKCkpOwoKICAgICAgaWYgKGhl
YWRlcnMgIT0gbnVsbCkgewogICAgICAgIElEYXRhQ3Vyc29yIGhjID0gaGVhZGVycy5nZXRDdXJz
b3IoKTsKICAgICAgICAKICAgICAgICB3aGlsZShoYy5uZXh0KCkpIHsKICAgICAgICAgIFN0cmlu
ZyBrZXkgPSBoYy5nZXRLZXkoKTsKICAgICAgICAgIE9iamVjdCB2YWx1ZSA9IGhjLmdldFZhbHVl
KCk7CgogICAgICAgICAgaWYgKGtleSAhPSBudWxsICYmIHZhbHVlICE9IG51bGwpIHsKICAgICAg
ICAgICAgcmVzcG9uc2UuY2xlYXJGaWVsZChrZXkpOwogICAgICAgICAgICByZXNwb25zZS5hZGRG
aWVsZChrZXksIHZhbHVlLnRvU3RyaW5nKCkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAg
ICBoYy5kZXN0cm95KCk7CiAgICAgIH0KICAgIH0KCiAgICBpZiAoY29udGVudCA9PSBudWxsKSBj
b250ZW50ID0gIiI7CiAgICBieXRlW10gYm9keSA9IHBlcm1hZnJvc3QudHVuZHJhLmxhbmcuQnl0
ZXNIZWxwZXIubm9ybWFsaXplKGNvbnRlbnQsIGVuY29kaW5nKTsKICAgIGNvbS53bS5hcHAuYjJi
LnNlcnZlci5TZXJ2aWNlLnNldFJlc3BvbnNlKGJvZHkpOwogIH0gY2F0Y2ggKGphdmEuaW8uSU9F
eGNlcHRpb24gZXgpIHsKICAgIEV4Y2VwdGlvbkhlbHBlci5yYWlzZShleCk7CiAgfSBjYXRjaCAo
amF2YXguYWN0aXZhdGlvbi5NaW1lVHlwZVBhcnNlRXhjZXB0aW9uIGV4KSB7CiAgICBFeGNlcHRp
b25IZWxwZXIucmFpc2UoZXgpOwogIH0KfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBjYWxsaW5n
IHNlcnZpY2UgaXMgdGhlIHRvcC1sZXZlbCBpbml0aWF0aW5nIAovLyBzZXJ2aWNlIG9mIHRoZSBj
dXJyZW50IHRocmVhZApwdWJsaWMgc3RhdGljIGJvb2xlYW4gaW5pdGlhdG9yKCkgewogIHJldHVy
biBjYWxsc3RhY2soKS5sZW5ndGggPD0gMTsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZl
biBzdHJpbmcgaXMgYSBzZXJ2aWNlIGFuZCBleGlzdHMKcHVibGljIHN0YXRpYyBib29sZWFuIHZh
bGlkYXRlKFN0cmluZyBzZXJ2aWNlKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJu
IHZhbGlkYXRlKHNlcnZpY2UsIGZhbHNlKTsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZl
biBzdHJpbmcgaXMgYSBzZXJ2aWNlIGFuZCBleGlzdHMKcHVibGljIHN0YXRpYyBib29sZWFuIHZh
bGlkYXRlKFN0cmluZyBzZXJ2aWNlLCBib29sZWFuIHJhaXNlKSB0aHJvd3MgU2VydmljZUV4Y2Vw
dGlvbiB7CiAgYm9vbGVhbiB2YWxpZCA9IE5vZGVIZWxwZXIuZXhpc3RzKHNlcnZpY2UpICYmICJz
ZXJ2aWNlIi5lcXVhbHMoTm9kZUhlbHBlci5nZXROb2RlVHlwZShzZXJ2aWNlKS50b1N0cmluZygp
KTsKCiAgaWYgKHJhaXNlICYmICF2YWxpZCkgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlNl
cnZpY2UgZG9lcyBub3QgZXhpc3Q6ICIgKyBzZXJ2aWNlKTsKICAKICByZXR1cm4gdmFsaWQ7Cn0K
Ci8vIHF1ZXVlcyB0aGUgc2VydmljZSBmb3IgZXhlY3V0aW9uIG9uIGEgZGVmZXIgdGhyZWFkIHBv
b2wKcHVibGljIHN0YXRpYyB2b2lkIGRlZmVyKFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGlu
ZSkgewogIHR1bmRyYS5zdXBwb3J0LnNlcnZpY2UuZGVmZXIuZW5xdWV1ZShzZXJ2aWNlLCBwaXBl
bGluZSk7Cn0KCi8vIHJldHVybnMgdGhlIGludm9jYXRpb24gY2FsbCBzdGFjawpwdWJsaWMgc3Rh
dGljIFN0cmluZ1tdIGNhbGxzdGFjaygpIHsKICBqYXZhLnV0aWwuSXRlcmF0b3Igc3RhY2sgPSBj
b20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCkuZ2V0Q2Fs
bFN0YWNrKCkuaXRlcmF0b3IoKTsKICBqYXZhLnV0aWwuTGlzdDxTdHJpbmc+IHNlcnZpY2VzID0g
bmV3IGphdmEudXRpbC5BcnJheUxpc3Q8U3RyaW5nPigpOwogIHdoaWxlIChzdGFjay5oYXNOZXh0
KCkpIHsKICAgIHNlcnZpY2VzLmFkZChzdGFjay5uZXh0KCkudG9TdHJpbmcoKSk7CiAgfQogIC8v
IHJlbW92ZSBjYWxsIHRvIHR1bmRyYS5pbnZva2U6Y2FsbHN0YWNrIGZyb20gdGhlIHN0YWNrCiAg
aWYgKHNlcnZpY2VzLnNpemUoKSA+IDApIHNlcnZpY2VzLnJlbW92ZShzZXJ2aWNlcy5zaXplKCkg
LSAxKTsKICByZXR1cm4gKFN0cmluZ1tdKXNlcnZpY2VzLnRvQXJyYXkobmV3IFN0cmluZ1tzZXJ2
aWNlcy5zaXplKCldKTsKfQoKLy8gcmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgY3VycmVudCBzZXJ2
aWNlLCBvciBudWxsIGlmIGludm9rZWQgZGlyZWN0bHkKcHVibGljIHN0YXRpYyBTdHJpbmcgc2Vs
ZigpIHsKICBTdHJpbmcgc2VsZiA9IG51bGw7CiAgamF2YS51dGlsLlN0YWNrIHN0YWNrID0gY29t
LndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlLmdldEN1cnJlbnRTdGF0ZSgpLmdldENhbGxT
dGFjaygpOwogIGlmIChzdGFjay5zaXplKCkgPiAxKSB7CiAgICBzZWxmID0gc3RhY2suZ2V0KHN0
YWNrLnNpemUoKSAtIDIpLnRvU3RyaW5nKCk7IC8vIHRoaXMgd2lsbCByZXR1cm4gdGhpcyBzZXJ2
aWNlJ3MgY2FsbGVyCiAgfQogIHJldHVybiBzZWxmOwp9CgovLyBpbnZva2VzIHRoZSBnaXZlbiBz
ZXJ2aWNlIHN5bmNocm9ub3VzbHkKcHVibGljIHN0YXRpYyBJRGF0YSBpbnZva2UoU3RyaW5nIHNl
cnZpY2UsIElEYXRhIHBpcGVsaW5lKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7ICAKICByZXR1
cm4gKElEYXRhKWludm9rZShzZXJ2aWNlLCBwaXBlbGluZSwgInN5bmNocm9ub3VzIik7Cn0KCi8v
IGludm9rZXMgdGhlIGdpdmVuIHNlcnZpY2UgZWl0aGVyIHN5bmNocm9ub3VzbHkgb3IgYXN5bmNo
cm9ub3VzbHkKcHVibGljIHN0YXRpYyBPYmplY3QgaW52b2tlKFN0cmluZyBzZXJ2aWNlLCBJRGF0
YSBwaXBlbGluZSwgU3RyaW5nIG1vZGUpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsgIAogIE9i
amVjdCByZXN1bHQgPSBudWxsOwogIGlmIChtb2RlLmVxdWFscygic3luY2hyb25vdXMiKSkgewog
ICAgcmVzdWx0ID0gaW52b2tlLnN5bmNocm9ub3VzKHNlcnZpY2UsIHBpcGVsaW5lKTsKICB9IGVs
c2UgaWYgKG1vZGUuZXF1YWxzKCJhc3luY2hyb25vdXMiKSkgewogICAgcmVzdWx0ID0gaW52b2tl
LmFzeW5jaHJvbm91cyhzZXJ2aWNlLCBwaXBlbGluZSk7CiAgfSBlbHNlIHsKICAgIHRocm93IG5l
dyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24oIm1vZGUgbXVzdCBiZSBlaXRoZXIgJ3N5bmNocm9u
b3VzJyBvciAnYXN5bmNocm9ub3VzJzogIiArIG1vZGUpOwogIH0KICByZXR1cm4gcmVzdWx0Owp9
CgpwdWJsaWMgc3RhdGljIGNsYXNzIGludm9rZSB7CiAgLy8gaW52b2tlcyBhIHNlcnZpY2UgYXN5
bmNocm9ub3VzbHkKICBwdWJsaWMgc3RhdGljIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNl
VGhyZWFkIGFzeW5jaHJvbm91cyhTdHJpbmcgc2VydmljZSwgSURhdGEgcGlwZWxpbmUpIHsKICAg
IGlmIChwaXBlbGluZSA9PSBudWxsKSBwaXBlbGluZSA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsK
ICAgIGlmIChzZXJ2aWNlID09IG51bGwpIHJldHVybiBudWxsOwogICAgCiAgICBJRGF0YSBzY29w
ZSA9IElEYXRhVXRpbC5jbG9uZShwaXBlbGluZSk7CiAgICBjb20ud20ubGFuZy5ucy5OU05hbWUg
bmFtZSA9IGNvbS53bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoc2VydmljZSk7ICAKICAgIGNvbS53
bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlVGhyZWFkIHRocmVhZCA9IGNvbS53bS5hcHAuYjJiLnNl
cnZlci5TZXJ2aWNlLmRvVGhyZWFkSW52b2tlKG5hbWUsIHNjb3BlKTsKCiAgICByZXR1cm4gdGhy
ZWFkOwogIH0KCiAgLy8gaW52b2tlcyBhIHNlcnZpY2Ugc3luY2hyb25vdXNseQogIHB1YmxpYyBz
dGF0aWMgSURhdGEgc3luY2hyb25vdXMoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgICBpZiAocGlwZWxpbmUgPT0gbnVsbCkgcGlwZWxp
bmUgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CiAgICBpZiAoc2VydmljZSA9PSBudWxsKSByZXR1
cm4gcGlwZWxpbmU7CiAgICAKICAgIElEYXRhIHNjb3BlID0gSURhdGFVdGlsLmNsb25lKHBpcGVs
aW5lKTsKICAgIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBuYW1lID0gY29tLndtLmxhbmcubnMuTlNO
YW1lLmNyZWF0ZShzZXJ2aWNlKTsKCiAgICB0cnkgewogICAgICBzY29wZSA9IGNvbS53bS5hcHAu
YjJiLnNlcnZlci5TZXJ2aWNlLmRvSW52b2tlKG5hbWUsIHNjb3BlKTsKICAgIH0gY2F0Y2ggKEV4
Y2VwdGlvbiBleCkgewogICAgICBFeGNlcHRpb25IZWxwZXIucmFpc2UoZXgpOwogICAgfQoKICAg
IElEYXRhVXRpbC5tZXJnZShzY29wZSwgcGlwZWxpbmUpOwogICAgCiAgICByZXR1cm4gcGlwZWxp
bmU7CiAgfQp9CgovLyB3YWl0cyBmb3IgYW4gYXN5bmNocm9ub3VzbHkgaW52b2tlZCBzZXJ2aWNl
IHRvIGNvbXBsZXRlCnB1YmxpYyBzdGF0aWMgSURhdGEgam9pbihjb20ud20uYXBwLmIyYi5zZXJ2
ZXIuU2VydmljZVRocmVhZCB0aHJlYWQpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBJRGF0
YSBwaXBlbGluZSA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCiAgaWYgKHRocmVhZCAhPSBudWxs
KSB7CiAgICB0cnkgewogICAgICBwaXBlbGluZSA9IHRocmVhZC5nZXRJRGF0YSgpOwogICAgfSBj
YXRjaCAoRXhjZXB0aW9uIGV4KSB7CiAgICAgIEV4Y2VwdGlvbkhlbHBlci5yYWlzZShleCk7CiAg
ICB9CiAgfQogIAogIHJldHVybiBwaXBlbGluZTsKfQoKLy8gc2xlZXBzIHRoZSBjdXJyZW50IHRo
cmVhZCBmb3IgdGhlIGdpdmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCBzbGVlcChTdHJp
bmcgZHVyYXRpb24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBzbGVlcCh0dW5kcmEuZHVy
YXRpb24ucGFyc2UoZHVyYXRpb24pLmdldFRpbWVJbk1pbGxpcyhuZXcgamF2YS51dGlsLkRhdGUo
KSkpOwp9CgovLyBzbGVlcHMgdGhlIGN1cnJlbnQgdGhyZWFkIGZvciB0aGUgZ2l2ZW4gZHVyYXRp
b24KcHVibGljIHN0YXRpYyB2b2lkIHNsZWVwKGxvbmcgbWlsbGlzZWNvbmRzKSB0aHJvd3MgU2Vy
dmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsKICAgIFRocmVhZC5zbGVlcChtaWxsaXNlY29uZHMpOwog
IH0gY2F0Y2goSW50ZXJydXB0ZWRFeGNlcHRpb24gZXgpIHsKICAgIEV4Y2VwdGlvbkhlbHBlci5y
YWlzZShleCk7CiAgfQp9CgovLyBwcm92aWRlcyBhIHRyeS9jYXRjaC9maW5hbGx5IHBhdHRlcm4g
Zm9yIGZsb3cgc2VydmljZXMKcHVibGljIHN0YXRpYyBJRGF0YSBlbnN1cmUoU3RyaW5nIHNlcnZp
Y2UsIElEYXRhIHBpcGVsaW5lLCBTdHJpbmcgY2F0Y2hTZXJ2aWNlLCBTdHJpbmcgZmluYWxseVNl
cnZpY2UpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCiAgdHJ5IHsKICAgIHBpcGVsaW5lID0g
aW52b2tlLnN5bmNocm9ub3VzKHNlcnZpY2UsIHBpcGVsaW5lKTsKICB9IGNhdGNoIChUaHJvd2Fi
bGUgdCkgewogICAgSURhdGFDdXJzb3IgY3Vyc29yID0gcGlwZWxpbmUuZ2V0Q3Vyc29yKCk7CiAg
ICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRleGNlcHRpb24iLCB0KTsKICAgIElEYXRhVXRpbC5w
dXQoY3Vyc29yLCAiJGV4Y2VwdGlvbj8iLCAidHJ1ZSIpOwogICAgSURhdGFVdGlsLnB1dChjdXJz
b3IsICIkZXhjZXB0aW9uLmNsYXNzIiwgdC5nZXRDbGFzcygpLmdldE5hbWUoKSk7CiAgICBJRGF0
YVV0aWwucHV0KGN1cnNvciwgIiRleGNlcHRpb24ubWVzc2FnZSIsIHQuZ2V0TWVzc2FnZSgpKTsK
CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgaW52b2tlU3RhdGUgPSBjb20u
d20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7CiAgICBJRGF0
YSBleGNlcHRpb25JbmZvID0gSURhdGFIZWxwZXIuZHVwbGljYXRlKGludm9rZVN0YXRlLmdldEVy
cm9ySW5mb0Zvcm1hdHRlZCgpLCB0cnVlKTsKICAgIElEYXRhQ3Vyc29yIGVjID0gZXhjZXB0aW9u
SW5mby5nZXRDdXJzb3IoKTsKICAgIFN0cmluZyBleGNlcHRpb25TZXJ2aWNlID0gSURhdGFVdGls
LmdldFN0cmluZyhlYywgInNlcnZpY2UiKTsKICAgIGlmIChleGNlcHRpb25TZXJ2aWNlICE9IG51
bGwpIHsKICAgICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLnNlcnZpY2UiLCBl
eGNlcHRpb25TZXJ2aWNlKTsKICAgICAgY29tLndtLmFwcC5iMmIuc2VydmVyLkJhc2VTZXJ2aWNl
IGJhc2VTZXJ2aWNlID0gY29tLndtLmFwcC5iMmIuc2VydmVyLm5zLk5hbWVzcGFjZS5nZXRTZXJ2
aWNlKGNvbS53bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoZXhjZXB0aW9uU2VydmljZSkpOwogICAg
ICBpZiAoYmFzZVNlcnZpY2UgIT0gbnVsbCkgewogICAgICAgIFN0cmluZyBwYWNrYWdlTmFtZSA9
IGJhc2VTZXJ2aWNlLmdldFBhY2thZ2VOYW1lKCk7CiAgICAgICAgSURhdGFVdGlsLnB1dChlYywg
InBhY2thZ2UiLCBwYWNrYWdlTmFtZSk7CiAgICAgICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIk
ZXhjZXB0aW9uLnBhY2thZ2UiLCBwYWNrYWdlTmFtZSk7CiAgICAgIH0KICAgIH0KICAgIGVjLmRl
c3Ryb3koKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGV4Y2VwdGlvbi5pbmZvIiwgZXhj
ZXB0aW9uSW5mbyk7CgogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLnN0YWNr
IiwgdHVuZHJhLmV4Y2VwdGlvbi5zdGFjayh0KSk7CgogICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAg
ICBpZiAoY2F0Y2hTZXJ2aWNlID09IG51bGwpIHsKICAgICAgRXhjZXB0aW9uSGVscGVyLnJhaXNl
KHQpOwogICAgfSBlbHNlIHsKICAgICAgcGlwZWxpbmUgPSBpbnZva2UoY2F0Y2hTZXJ2aWNlLCBw
aXBlbGluZSk7CiAgICB9CiAgfSBmaW5hbGx5IHsKICAgIGlmIChmaW5hbGx5U2VydmljZSAhPSBu
dWxsKSBwaXBlbGluZSA9IGludm9rZShmaW5hbGx5U2VydmljZSwgcGlwZWxpbmUpOwogIH0KCiAg
cmV0dXJuIHBpcGVsaW5lOwp9CgovLyByZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBnaXZl
biBzZXJ2aWNlCnB1YmxpYyBzdGF0aWMgSURhdGEgcmVmbGVjdChTdHJpbmcgc2VydmljZU5hbWUp
IHsKICBpZiAoc2VydmljZU5hbWUgPT0gbnVsbCkgcmV0dXJuIG51bGw7CgogIGNvbS53bS5hcHAu
YjJiLnNlcnZlci5CYXNlU2VydmljZSBzZXJ2aWNlID0gY29tLndtLmFwcC5iMmIuc2VydmVyLm5z
Lk5hbWVzcGFjZS5nZXRTZXJ2aWNlKGNvbS53bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoc2Vydmlj
ZU5hbWUpKTsKICBpZiAoc2VydmljZSA9PSBudWxsKSByZXR1cm4gbnVsbDsKCiAgSURhdGEgb3V0
cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogIElEYXRhQ3Vyc29yIGN1cnNvciA9IG91dHB1
dC5nZXRDdXJzb3IoKTsKCiAgSURhdGFVdGlsLnB1dChjdXJzb3IsICJuYW1lIiwgc2VydmljZU5h
bWUpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAidHlwZSIsIHNlcnZpY2UuZ2V0U2VydmljZVR5
cGUoKS5nZXRUeXBlKCkpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAicGFja2FnZSIsIHNlcnZp
Y2UuZ2V0UGFja2FnZU5hbWUoKSk7CgogIFN0cmluZyBkZXNjcmlwdGlvbiA9IHNlcnZpY2UuZ2V0
Q29tbWVudCgpOwogIGlmIChkZXNjcmlwdGlvbiAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNv
ciwgImRlc2NyaXB0aW9uIiwgZGVzY3JpcHRpb24pOwoKICBjdXJzb3IuZGVzdHJveSgpOwoKICBy
ZXR1cm4gb3V0cHV0Owp9CgovLyBpbnZva2VzIHRoZSBnaXZlbiBzZXJ2aWNlIGEgZ2l2ZW4gbnVt
YmVyIG9mIHRpbWVzLCBhbmQgcmV0dXJucyBleGVjdXRpb24gZHVyYXRpb24gc3RhdGlzdGljcwpw
dWJsaWMgc3RhdGljIE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvciBiZW5jaG1hcmsoU3RyaW5n
IHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lLCBpbnQgY291bnQpIHRocm93cyBTZXJ2aWNlRXhjZXB0
aW9uIHsKICBOb3JtYWxEaXN0cmlidXRpb25Fc3RpbWF0b3IgZXN0aW1hdG9yID0gbmV3IE5vcm1h
bERpc3RyaWJ1dGlvbkVzdGltYXRvcigibXMiKTsKCiAgdmFsaWRhdGUoc2VydmljZSwgdHJ1ZSk7
CgogIHRyeSB7IAogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CiAgICAgIGxv
bmcgc3RhcnQgPSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKICAgICAgdHVuZHJhLnNlcnZp
Y2UuaW52b2tlLnN5bmNocm9ub3VzKHNlcnZpY2UsIHBpcGVsaW5lKTsKICAgICAgbG9uZyBlbmQg
PSBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKTsKCiAgICAgIGVzdGltYXRvci5hZGQoZW5kIC0g
c3RhcnQpOwogICAgfQogIH0gY2F0Y2ggKFNlcnZpY2VFeGNlcHRpb24gZXgpIHsKICAgIC8vIGln
bm9yZSBleGNlcHRpb25zCiAgfQoKICByZXR1cm4gZXN0aW1hdG9yOwp9</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>permafrost.tundra.data.IDataHelper</value>
    <value>permafrost.tundra.lang.BooleanHelper</value>
    <value>permafrost.tundra.lang.ExceptionHelper</value>
    <value>permafrost.tundra.lang.StringHelper</value>
    <value>permafrost.tundra.math.NormalDistributionEstimator</value>
    <value>permafrost.tundra.net.http.HTTPHelper</value>
    <value>permafrost.tundra.server.NodeHelper</value>
    <value>permafrost.tundra.time.DurationHelper</value>
    <value>permafrost.tundra.time.DurationPattern</value>
  </array>
</Values>
