<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.service</value>
  <value name="encodeutf8">true</value>
  <value name="shared">Ly8gc2V0cyB0aGUgcmVzcG9uc2UgaGVhZGVycyBhbmQgYm9keSBmb3IgdGhlIGN1cnJlbnQgc2Vy
dmljZSBpbnZvY2F0aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCByZXNwb25kKGludCBjb2RlLCBTdHJp
bmcgbWVzc2FnZSwgSURhdGEgaGVhZGVycywgT2JqZWN0IGNvbnRlbnQsIFN0cmluZyBjb250ZW50
VHlwZSwgU3RyaW5nIGVuY29kaW5nKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsK
ICAgIGNvbS53bS5uZXQuSHR0cEhlYWRlciByZXNwb25zZSA9IGNvbS53bS5hcHAuYjJiLnNlcnZl
ci5TZXJ2aWNlLmdldEh0dHBSZXNwb25zZUhlYWRlcigpOwoKICAgIGlmIChyZXNwb25zZSA9PSBu
dWxsKSB7IAogICAgICAvLyBub3QgaW52b2tlZCB2aWEgSFRUUCwgc28gdGhyb3cgYW4gZXhjZXB0
aW9uIGluc3RlYWQgZm9yIEhUVFAgc3RhdHVzZXMgPj0gNDAwCiAgICAgIGlmIChjb2RlID49IDQw
MCkgdHVuZHJhLmV4Y2VwdGlvbi5yYWlzZSh0dW5kcmEuc3RyaW5nLm5vcm1hbGl6ZShjb250ZW50
LCBlbmNvZGluZykpOwogICAgfSBlbHNlIHsKICAgICAgaWYgKG1lc3NhZ2UgPT0gbnVsbCkgbWVz
c2FnZSA9IHR1bmRyYS5zdXBwb3J0Lmh0dHAuc3RhdHVzKGNvZGUpOwogICAgICByZXNwb25zZS5z
ZXRSZXNwb25zZShjb2RlLCBtZXNzYWdlKTsKCiAgICAgIGlmIChjb250ZW50VHlwZSA9PSBudWxs
KSBjb250ZW50VHlwZSA9ICJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iOwogICAgICBpZiAoZW5j
b2RpbmcgPT0gbnVsbCkgZW5jb2RpbmcgPSB0dW5kcmEuc3VwcG9ydC5jb25zdGFudC5ERUZBVUxU
X0NIQVJBQ1RFUl9FTkNPRElORzsKCiAgICAgIGphdmF4LmFjdGl2YXRpb24uTWltZVR5cGUgbWlt
ZVR5cGUgPSBuZXcgamF2YXguYWN0aXZhdGlvbi5NaW1lVHlwZShjb250ZW50VHlwZSk7CiAgICAg
IG1pbWVUeXBlLnNldFBhcmFtZXRlcigiY2hhcnNldCIsIGVuY29kaW5nKTsKCiAgICAgIHJlc3Bv
bnNlLmNsZWFyRmllbGQoIkNvbnRlbnQtVHlwZSIpOwogICAgICByZXNwb25zZS5hZGRGaWVsZCgi
Q29udGVudC1UeXBlIiwgbWltZVR5cGUudG9TdHJpbmcoKSk7CgogICAgICBpZiAoaGVhZGVycyAh
PSBudWxsKSB7CiAgICAgICAgSURhdGFDdXJzb3IgaGMgPSBoZWFkZXJzLmdldEN1cnNvcigpOwog
ICAgICAgIAogICAgICAgIHdoaWxlKGhjLm5leHQoKSkgewogICAgICAgICAgU3RyaW5nIGtleSA9
IGhjLmdldEtleSgpOwogICAgICAgICAgT2JqZWN0IHZhbHVlID0gaGMuZ2V0VmFsdWUoKTsKCiAg
ICAgICAgICBpZiAoa2V5ICE9IG51bGwgJiYgdmFsdWUgIT0gbnVsbCkgewogICAgICAgICAgICBy
ZXNwb25zZS5jbGVhckZpZWxkKGtleSk7CiAgICAgICAgICAgIHJlc3BvbnNlLmFkZEZpZWxkKGtl
eSwgdmFsdWUudG9TdHJpbmcoKSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGhjLmRl
c3Ryb3koKTsKICAgICAgfQogICAgfQoKICAgIGlmIChjb250ZW50ID09IG51bGwpIGNvbnRlbnQg
PSAiIjsKICAgIGJ5dGVbXSBib2R5ID0gdHVuZHJhLmJ5dGVzLm5vcm1hbGl6ZShjb250ZW50LCBl
bmNvZGluZyk7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZS5zZXRSZXNwb25zZShi
b2R5KTsKICB9IGNhdGNoIChqYXZhLmlvLklPRXhjZXB0aW9uIGV4KSB7CiAgICB0dW5kcmEuZXhj
ZXB0aW9uLnJhaXNlKGV4KTsKICB9IGNhdGNoIChqYXZheC5hY3RpdmF0aW9uLk1pbWVUeXBlUGFy
c2VFeGNlcHRpb24gZXgpIHsKICAgIHR1bmRyYS5leGNlcHRpb24ucmFpc2UoZXgpOwogIH0KfQoK
Ly8gcmV0dXJucyB0cnVlIGlmIHRoZSBjYWxsaW5nIHNlcnZpY2UgaXMgdGhlIHRvcC1sZXZlbCBp
bml0aWF0aW5nIAovLyBzZXJ2aWNlIG9mIHRoZSBjdXJyZW50IHRocmVhZApwdWJsaWMgc3RhdGlj
IGJvb2xlYW4gaW5pdGlhdG9yKCkgewogIHJldHVybiBjYWxsc3RhY2soKS5sZW5ndGggPD0gMTsK
fQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBzdHJpbmcgaXMgYSBzZXJ2aWNlIGFuZCBl
eGlzdHMKcHVibGljIHN0YXRpYyBib29sZWFuIHZhbGlkYXRlKFN0cmluZyBzZXJ2aWNlKSB0aHJv
d3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIHZhbGlkYXRlKHNlcnZpY2UsIGZhbHNlKTsK
fQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBzdHJpbmcgaXMgYSBzZXJ2aWNlIGFuZCBl
eGlzdHMKcHVibGljIHN0YXRpYyBib29sZWFuIHZhbGlkYXRlKFN0cmluZyBzZXJ2aWNlLCBib29s
ZWFuIHJhaXNlKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgYm9vbGVhbiB2YWxpZCA9IHR1
bmRyYS5ub2RlLmV4aXN0cyhzZXJ2aWNlKSAmJiAic2VydmljZSIuZXF1YWxzKHR1bmRyYS5ub2Rl
LnR5cGUoc2VydmljZSkpOwoKICBpZiAocmFpc2UgJiYgIXZhbGlkKSB0aHJvdyBuZXcgU2Vydmlj
ZUV4Y2VwdGlvbigiU2VydmljZSBkb2VzIG5vdCBleGlzdDogIiArIHNlcnZpY2UpOwogIAogIHJl
dHVybiB2YWxpZDsKfQoKLy8gcmV0dXJucyB0aGUgaW52b2NhdGlvbiBjYWxsIHN0YWNrCnB1Ymxp
YyBzdGF0aWMgU3RyaW5nW10gY2FsbHN0YWNrKCkgewogIGphdmEudXRpbC5JdGVyYXRvciBzdGFj
ayA9IGNvbS53bS5hcHAuYjJiLnNlcnZlci5JbnZva2VTdGF0ZS5nZXRDdXJyZW50U3RhdGUoKS5n
ZXRDYWxsU3RhY2soKS5pdGVyYXRvcigpOwogIGphdmEudXRpbC5MaXN0PFN0cmluZz4gc2Vydmlj
ZXMgPSBuZXcgamF2YS51dGlsLkFycmF5TGlzdDxTdHJpbmc+KCk7CiAgd2hpbGUgKHN0YWNrLmhh
c05leHQoKSkgewogICAgc2VydmljZXMuYWRkKHN0YWNrLm5leHQoKS50b1N0cmluZygpKTsKICB9
CiAgLy8gcmVtb3ZlIGNhbGwgdG8gdHVuZHJhLmludm9rZTpjYWxsc3RhY2sgZnJvbSB0aGUgc3Rh
Y2sKICBpZiAoc2VydmljZXMuc2l6ZSgpID4gMCkgc2VydmljZXMucmVtb3ZlKHNlcnZpY2VzLnNp
emUoKSAtIDEpOwogIHJldHVybiAoU3RyaW5nW10pc2VydmljZXMudG9BcnJheShuZXcgU3RyaW5n
W3NlcnZpY2VzLnNpemUoKV0pOwp9CgovLyByZXR1cm5zIHRoZSBuYW1lIG9mIHRoZSBjdXJyZW50
IHNlcnZpY2UKcHVibGljIHN0YXRpYyBTdHJpbmcgc2VsZigpIHsKICBTdHJpbmcgc2VsZiA9IG51
bGw7CiAgU3RyaW5nW10gY2FsbHN0YWNrID0gY2FsbHN0YWNrKCk7CiAgaWYgKGNhbGxzdGFjay5s
ZW5ndGggPiAwKSBzZWxmID0gdHVuZHJhLmxpc3Qub2JqZWN0LmdldChjYWxsc3RhY2ssIC0xKTsg
Ly8gbGFzdCBlbGVtZW50IGluIGxpc3QKICByZXR1cm4gc2VsZjsKfQoKLy8gaW52b2tlcyB0aGUg
Z2l2ZW4gc2VydmljZSBzeW5jaHJvbm91c2x5CnB1YmxpYyBzdGF0aWMgSURhdGEgaW52b2tlKFN0
cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24geyAg
CiAgcmV0dXJuIChJRGF0YSlpbnZva2Uoc2VydmljZSwgcGlwZWxpbmUsICJzeW5jaHJvbm91cyIp
Owp9CgovLyBpbnZva2VzIHRoZSBnaXZlbiBzZXJ2aWNlIGVpdGhlciBzeW5jaHJvbm91c2x5IG9y
IGFzeW5jaHJvbm91c2x5CnB1YmxpYyBzdGF0aWMgT2JqZWN0IGludm9rZShTdHJpbmcgc2Vydmlj
ZSwgSURhdGEgcGlwZWxpbmUsIFN0cmluZyBtb2RlKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7
ICAKICBPYmplY3QgcmVzdWx0ID0gbnVsbDsKICBpZiAobW9kZS5lcXVhbHMoInN5bmNocm9ub3Vz
IikpIHsKICAgIHJlc3VsdCA9IGludm9rZS5zeW5jaHJvbm91cyhzZXJ2aWNlLCBwaXBlbGluZSk7
CiAgfSBlbHNlIGlmIChtb2RlLmVxdWFscygiYXN5bmNocm9ub3VzIikpIHsKICAgIHJlc3VsdCA9
IGludm9rZS5hc3luY2hyb25vdXMoc2VydmljZSwgcGlwZWxpbmUpOwogIH0gZWxzZSB7CiAgICB0
aHJvdyBuZXcgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCJtb2RlIG11c3QgYmUgZWl0aGVyICdz
eW5jaHJvbm91cycgb3IgJ2FzeW5jaHJvbm91cyc6ICIgKyBtb2RlKTsKICB9CiAgcmV0dXJuIHJl
c3VsdDsKfQoKcHVibGljIHN0YXRpYyBjbGFzcyBpbnZva2UgewogIC8vIGludm9rZXMgYSBzZXJ2
aWNlIGFzeW5jaHJvbm91c2x5CiAgcHVibGljIHN0YXRpYyBjb20ud20uYXBwLmIyYi5zZXJ2ZXIu
U2VydmljZVRocmVhZCBhc3luY2hyb25vdXMoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5l
KSB7CiAgICBpZiAocGlwZWxpbmUgPT0gbnVsbCkgcGlwZWxpbmUgPSBJRGF0YUZhY3RvcnkuY3Jl
YXRlKCk7CiAgICBpZiAoc2VydmljZSA9PSBudWxsKSByZXR1cm4gbnVsbDsKICAgIAogICAgSURh
dGEgc2NvcGUgPSBJRGF0YVV0aWwuY2xvbmUocGlwZWxpbmUpOwogICAgY29tLndtLmxhbmcubnMu
TlNOYW1lIG5hbWUgPSBjb20ud20ubGFuZy5ucy5OU05hbWUuY3JlYXRlKHNlcnZpY2UpOyAgCiAg
ICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZVRocmVhZCB0aHJlYWQgPSBjb20ud20uYXBw
LmIyYi5zZXJ2ZXIuU2VydmljZS5kb1RocmVhZEludm9rZShuYW1lLCBzY29wZSk7CgogICAgcmV0
dXJuIHRocmVhZDsKICB9CgogIC8vIGludm9rZXMgYSBzZXJ2aWNlIHN5bmNocm9ub3VzbHkKICBw
dWJsaWMgc3RhdGljIElEYXRhIHN5bmNocm9ub3VzKFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBl
bGluZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogICAgaWYgKHBpcGVsaW5lID09IG51bGwp
IHBpcGVsaW5lID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogICAgaWYgKHNlcnZpY2UgPT0gbnVs
bCkgcmV0dXJuIHBpcGVsaW5lOwogICAgCiAgICBJRGF0YSBzY29wZSA9IElEYXRhVXRpbC5jbG9u
ZShwaXBlbGluZSk7CiAgICBjb20ud20ubGFuZy5ucy5OU05hbWUgbmFtZSA9IGNvbS53bS5sYW5n
Lm5zLk5TTmFtZS5jcmVhdGUoc2VydmljZSk7CgogICAgdHJ5IHsKICAgICAgc2NvcGUgPSBjb20u
d20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZS5kb0ludm9rZShuYW1lLCBzY29wZSk7CiAgICB9IGNh
dGNoIChFeGNlcHRpb24gZXgpIHsKICAgICAgdHVuZHJhLmV4Y2VwdGlvbi5yYWlzZShleCk7CiAg
ICB9CgogICAgSURhdGFVdGlsLm1lcmdlKHNjb3BlLCBwaXBlbGluZSk7CiAgICAKICAgIHJldHVy
biBwaXBlbGluZTsKICB9Cn0KCi8vIHdhaXRzIGZvciBhbiBhc3luY2hyb25vdXNseSBpbnZva2Vk
IHNlcnZpY2UgdG8gY29tcGxldGUKcHVibGljIHN0YXRpYyBJRGF0YSBqb2luKGNvbS53bS5hcHAu
YjJiLnNlcnZlci5TZXJ2aWNlVGhyZWFkIHRocmVhZCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24g
ewogIElEYXRhIHBpcGVsaW5lID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoKICBpZiAodGhyZWFk
ICE9IG51bGwpIHsKICAgIHRyeSB7CiAgICAgIHBpcGVsaW5lID0gdGhyZWFkLmdldElEYXRhKCk7
CiAgICB9IGNhdGNoIChFeGNlcHRpb24gZXgpIHsKICAgICAgdHVuZHJhLmV4Y2VwdGlvbi5yYWlz
ZShleCk7CiAgICB9CiAgfQogIAogIHJldHVybiBwaXBlbGluZTsKfQoKLy8gc2xlZXBzIHRoZSBj
dXJyZW50IHRocmVhZCBmb3IgdGhlIGdpdmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCBz
bGVlcChTdHJpbmcgZHVyYXRpb24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBzbGVlcCh0
dW5kcmEuZHVyYXRpb24ucGFyc2UoZHVyYXRpb24pLmdldFRpbWVJbk1pbGxpcyhuZXcgamF2YS51
dGlsLkRhdGUoKSkpOwp9CgovLyBzbGVlcHMgdGhlIGN1cnJlbnQgdGhyZWFkIGZvciB0aGUgZ2l2
ZW4gZHVyYXRpb24KcHVibGljIHN0YXRpYyB2b2lkIHNsZWVwKGxvbmcgbWlsbGlzZWNvbmRzKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsKICAgIFRocmVhZC5zbGVlcChtaWxsaXNl
Y29uZHMpOwogIH0gY2F0Y2goSW50ZXJydXB0ZWRFeGNlcHRpb24gZXgpIHsKICAgIHR1bmRyYS5l
eGNlcHRpb24ucmFpc2UoZXgpOwogIH0KfQoKLy8gcHJvdmlkZXMgYSB0cnkvY2F0Y2gvZmluYWxs
eSBwYXR0ZXJuIGZvciBmbG93IHNlcnZpY2VzCnB1YmxpYyBzdGF0aWMgSURhdGEgZW5zdXJlKFN0
cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU3RyaW5nIGNhdGNoU2VydmljZSwgU3RyaW5n
IGZpbmFsbHlTZXJ2aWNlKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsKICAgIHBp
cGVsaW5lID0gaW52b2tlLnN5bmNocm9ub3VzKHNlcnZpY2UsIHBpcGVsaW5lKTsKICB9IGNhdGNo
IChUaHJvd2FibGUgdCkgewogICAgSURhdGFDdXJzb3IgY3Vyc29yID0gcGlwZWxpbmUuZ2V0Q3Vy
c29yKCk7CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRleGNlcHRpb24iLCB0KTsKICAgIElE
YXRhVXRpbC5wdXQoY3Vyc29yLCAiJGV4Y2VwdGlvbj8iLCAidHJ1ZSIpOwogICAgSURhdGFVdGls
LnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLmNsYXNzIiwgdC5nZXRDbGFzcygpLmdldE5hbWUoKSk7
CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRleGNlcHRpb24ubWVzc2FnZSIsIHQuZ2V0TWVz
c2FnZSgpKTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGV4Y2VwdGlvbi5zdGFjayIsIHR1
bmRyYS5leGNlcHRpb24uc3RhY2sodCkpOwogICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgICBpZiAo
Y2F0Y2hTZXJ2aWNlID09IG51bGwpIHsKICAgICAgdHVuZHJhLmV4Y2VwdGlvbi5yYWlzZSh0KTsK
ICAgIH0gZWxzZSB7CiAgICAgIHBpcGVsaW5lID0gaW52b2tlKGNhdGNoU2VydmljZSwgcGlwZWxp
bmUpOwogICAgfQogIH0gZmluYWxseSB7CiAgICBpZiAoZmluYWxseVNlcnZpY2UgIT0gbnVsbCkg
cGlwZWxpbmUgPSBpbnZva2UoZmluYWxseVNlcnZpY2UsIHBpcGVsaW5lKTsKICB9CgogIHJldHVy
biBwaXBlbGluZTsKfQoKLy8gaW52b2tlcyB0aGUgZ2l2ZW4gc2VydmljZSBhIGdpdmVuIG51bWJl
ciBvZiB0aW1lcywgYW5kIHJldHVybnMgZXhlY3V0aW9uIGR1cmF0aW9uIHN0YXRpc3RpY3MKcHVi
bGljIHN0YXRpYyBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvciBiZW5jaG1h
cmsoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lLCBpbnQgY291bnQpIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsKICBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvciBl
c3RpbWF0b3IgPSBuZXcgSW5jcmVtZW50YWxOb3JtYWxEaXN0cmlidXRpb25Fc3RpbWF0b3IoIm1z
Iik7CgogIHZhbGlkYXRlKHNlcnZpY2UsIHRydWUpOwoKICB0cnkgeyAKICAgIGZvciAoaW50IGkg
PSAwOyBpIDwgY291bnQ7IGkrKykgewogICAgICBsb25nIHN0YXJ0ID0gU3lzdGVtLmN1cnJlbnRU
aW1lTWlsbGlzKCk7CiAgICAgIHR1bmRyYS5zZXJ2aWNlLmludm9rZS5zeW5jaHJvbm91cyhzZXJ2
aWNlLCBwaXBlbGluZSk7CiAgICAgIGxvbmcgZW5kID0gU3lzdGVtLmN1cnJlbnRUaW1lTWlsbGlz
KCk7CgogICAgICBlc3RpbWF0b3IuYXBwZW5kKGVuZCAtIHN0YXJ0KTsKICAgIH0KICB9IGNhdGNo
IChTZXJ2aWNlRXhjZXB0aW9uIGV4KSB7CiAgICAvLyBpZ25vcmUgZXhjZXB0aW9ucwogIH0KCiAg
cmV0dXJuIGVzdGltYXRvcjsKfQoKLy8gQ2xhc3MgZm9yIGluY3JlbWVudGFsbHkgY2FsY3VsYXRp
bmcgdGhlIG1lYW4gYW5kIHN0YW5kYXJkIGRldmlhdGlvbgpwdWJsaWMgc3RhdGljIGNsYXNzIElu
Y3JlbWVudGFsTm9ybWFsRGlzdHJpYnV0aW9uRXN0aW1hdG9yIHsKCiAgcHJvdGVjdGVkIGxvbmcg
Y291bnQ7CiAgcHJvdGVjdGVkIGRvdWJsZSBtZWFuLCBzcTsKICBwcm90ZWN0ZWQgU3RyaW5nIHVu
aXQgPSAiIjsKCiAgLyoqCiAgICogQ29uc3RydWN0cyBhIG5ldyBlc3RpbWF0b3Igb2JqZWN0Lgog
ICAqLwogIHB1YmxpYyBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvcigpIHsK
ICAgIHJlc2V0KCk7CiAgfQoKICAvKioKICAgKiBDb25zdHJ1Y3RzIGEgbmV3IGVzdGltYXRvciBv
YmplY3QuCiAgICogQHBhcmFtIHVuaXQgVGhlIHVuaXQgb2YgbWVhc3VyZW1lbnQgcmVsYXRlZCB0
byB0aGUgbWVhc3VyZWQgc2FtcGxlcy4KICAgKi8KICBwdWJsaWMgSW5jcmVtZW50YWxOb3JtYWxE
aXN0cmlidXRpb25Fc3RpbWF0b3IoU3RyaW5nIHVuaXQpIHsKICAgIHRoaXMoKTsKICAgIHRoaXMu
dW5pdCA9IHVuaXQ7CiAgfSAgCgogIC8qKgogICAqIENvbnN0cnVjdHMgYSBuZXcgZXN0aW1hdG9y
IG9iamVjdCBzZWVkZWQgd2l0aCB0aGUgZ2l2ZW4gc2FtcGxlcy4KICAgKgogICAqIEBwYXJhbSBz
YW1wbGVzIE9uZSBvciBtb3JlIGluaXRpYWwgc2FtcGxlcyB0byBzZWVkIHRoZSBlc3RpbWF0b3Ig
d2l0aC4KICAgKi8KICBwdWJsaWMgSW5jcmVtZW50YWxOb3JtYWxEaXN0cmlidXRpb25Fc3RpbWF0
b3IoZG91YmxlLi4uIHNhbXBsZXMpIHsKICAgIHRoaXMoKTsKICAgIGFwcGVuZChzYW1wbGVzKTsK
ICB9CgogIC8qKgogICAqIENvbnN0cnVjdHMgYSBuZXcgZXN0aW1hdG9yIG9iamVjdCBzZWVkZWQg
d2l0aCB0aGUgZ2l2ZW4gc2FtcGxlcy4KICAgKgogICAqIEBwYXJhbSB1bml0IFRoZSB1bml0IG9m
IG1lYXN1cmVtZW50IHJlbGF0ZWQgdG8gdGhlIG1lYXN1cmVkIHNhbXBsZXMuCiAgICogQHBhcmFt
IHNhbXBsZXMgT25lIG9yIG1vcmUgaW5pdGlhbCBzYW1wbGVzIHRvIHNlZWQgdGhlIGVzdGltYXRv
ciB3aXRoLgogICAqLwogIHB1YmxpYyBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVzdGlt
YXRvcihTdHJpbmcgdW5pdCwgZG91YmxlLi4uIHNhbXBsZXMpIHsKICAgIHRoaXModW5pdCk7CiAg
ICBhcHBlbmQoc2FtcGxlcyk7CiAgfQoKICAvKioKICAgKiBDb25zdHJ1Y3RzIGEgbmV3IGVzdGlt
YXRvciBvYmplY3Qgc2VlZGVkIHdpdGggdGhlIGdpdmVuIGNvbGxlY3Rpb24gb2YKICAgKiBzYW1w
bGVzLgogICAqCiAgICogQHBhcmFtIHNhbXBsZXMgQW4gaW5pdGlhbCBjb2xsZWN0aW9uIG9mIHNh
bXBsZXMgdG8gc2VlZCB0aGUgZXN0aW1hdG9yIHdpdGguCiAgICovCiAgcHVibGljIEluY3JlbWVu
dGFsTm9ybWFsRGlzdHJpYnV0aW9uRXN0aW1hdG9yKGphdmEudXRpbC5Db2xsZWN0aW9uPERvdWJs
ZT4gc2FtcGxlcykgewogICAgdGhpcygpOwogICAgYXBwZW5kKHNhbXBsZXMpOwogIH0KCiAgLyoq
CiAgICogQ29uc3RydWN0cyBhIG5ldyBlc3RpbWF0b3Igb2JqZWN0IHNlZWRlZCB3aXRoIHRoZSBn
aXZlbiBjb2xsZWN0aW9uIG9mCiAgICogc2FtcGxlcy4KICAgKgogICAqIEBwYXJhbSB1bml0IFRo
ZSB1bml0IG9mIG1lYXN1cmVtZW50IHJlbGF0ZWQgdG8gdGhlIG1lYXN1cmVkIHNhbXBsZXMuCiAg
ICogQHBhcmFtIHNhbXBsZXMgQW4gaW5pdGlhbCBjb2xsZWN0aW9uIG9mIHNhbXBsZXMgdG8gc2Vl
ZCB0aGUgZXN0aW1hdG9yIHdpdGguCiAgICovCiAgcHVibGljIEluY3JlbWVudGFsTm9ybWFsRGlz
dHJpYnV0aW9uRXN0aW1hdG9yKFN0cmluZyB1bml0LCBqYXZhLnV0aWwuQ29sbGVjdGlvbjxEb3Vi
bGU+IHNhbXBsZXMpIHsKICAgIHRoaXModW5pdCk7CiAgICBhcHBlbmQoc2FtcGxlcyk7CiAgfQoK
ICAvKioKICAgKiBBcHBlbmRzIHRoZSBnaXZlbiBzYW1wbGUgdG8gdGhlIGxpc3Qgb2Ygc2FtcGxl
cyBpbiB0aGUgZXN0aW1hdG9yLgogICAqCiAgICogQHBhcmFtIHNhbXBsZSBUaGUgc2FtcGxlIHRv
IGJlIGFkZGVkIHRvIHRoZSBlc3RpbWF0b3IuCiAgICogQHJldHVybiBUaGUgRXN0aW1hdG9yIG9i
amVjdCBpdHNlbGYsIHRvIHN1cHBvcnQgbWV0aG9kIGNoYWluaW5nLgogICAqLwogIHB1YmxpYyBm
aW5hbCBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvciBhcHBlbmQoZG91Ymxl
IHNhbXBsZSkgewogICAgZG91YmxlIG5leHQgPSBtZWFuICsgKHNhbXBsZSAtIG1lYW4pIC8gKytj
b3VudDsKICAgIHNxICs9IChzYW1wbGUgLSBtZWFuKSAqIChzYW1wbGUgLSBuZXh0KTsKICAgIG1l
YW4gPSBuZXh0OwoKICAgIHJldHVybiB0aGlzOwogIH0KCiAgLyoqCiAgICogQWRkcyBvbmUgb3Ig
bW9yZSBzYW1wbGVzIHRvIHRoZSBlc3RpbWF0b3IuCiAgICoKICAgKiBAcGFyYW0gc2FtcGxlcyBP
bmUgb3IgbW9yZSBzYW1wbGVzIHRvIGJlIGFkZGVkIHRvIHRoZSBlc3RpbWF0b3IuCiAgICogQHJl
dHVybiBUaGUgRXN0aW1hdG9yIG9iamVjdCBpdHNlbGYsIHRvIHN1cHBvcnQgbWV0aG9kIGNoYWlu
aW5nLgogICAqLwogIHB1YmxpYyBmaW5hbCBJbmNyZW1lbnRhbE5vcm1hbERpc3RyaWJ1dGlvbkVz
dGltYXRvciBhcHBlbmQoZG91YmxlLi4uIHNhbXBsZXMpIHsKICAgIGZvciAoZG91YmxlIHNhbXBs
ZSA6IHNhbXBsZXMpIHsKICAgICAgYXBwZW5kKHNhbXBsZSk7CiAgICB9CgogICAgcmV0dXJuIHRo
aXM7CiAgfQoKICAvKioKICAgKiBBZGRzIGEgY29sbGVjdGlvbiBvZiBzYW1wbGVzIHRvIHRoZSBl
c3RpbWF0b3IuCiAgICoKICAgKiBAcGFyYW0gc2FtcGxlcyBBIGNvbGxlY3Rpb24gb2Ygc2FtcGxl
cyB0byBiZSBhZGRlZCB0byB0aGUgZXN0aW1hdG9yLgogICAqIEByZXR1cm4gVGhlIEVzdGltYXRv
ciBvYmplY3QgaXRzZWxmLCB0byBzdXBwb3J0IG1ldGhvZCBjaGFpbmluZy4KICAgKi8KICBwdWJs
aWMgZmluYWwgSW5jcmVtZW50YWxOb3JtYWxEaXN0cmlidXRpb25Fc3RpbWF0b3IgYXBwZW5kKGph
dmEudXRpbC5Db2xsZWN0aW9uPERvdWJsZT4gc2FtcGxlcykgewogICAgZm9yIChkb3VibGUgc2Ft
cGxlIDogc2FtcGxlcykgewogICAgICBhcHBlbmQoc2FtcGxlKTsKICAgIH0KCiAgICByZXR1cm4g
dGhpczsKICB9CgogIC8qKgogICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBzYW1wbGVzIHNlZW4g
YnkgdGhpcyBlc3RpbWF0b3IuCiAgICoKICAgKiBAcmV0dXJuIFRoZSBudW1iZXIgb2Ygc2FtcGxl
cyBzZWVuIGJ5IHRoaXMgZXN0aW1hdG9yLgogICAqLwogIHB1YmxpYyBsb25nIGNvdW50KCkgewog
ICAgcmV0dXJuIGNvdW50OwogIH0KCiAgLyoqCiAgICogUmV0dXJucyB0aGUgbWVhbiBvZiB0aGUg
c2FtcGxlcy4KICAgKgogICAqIEByZXR1cm4gVGhlIG1lYW4gb2YgdGhlIHNhbXBsZXMuCiAgICov
CiAgcHVibGljIGRvdWJsZSBtZWFuKCkgewogICAgcmV0dXJuIG1lYW47CiAgfQoKICAvKioKICAg
KiBSZXR1cm5zIHRoZSBtYXhpbXVtIGxpa2VsaWhvb2QgZXN0aW1hdGUgb2YgdGhlIHZhcmlhbmNl
IG9mIHRoZSBzYW1wbGVzLgogICAqCiAgICogQHJldHVybiBNYXhpbXVtIGxpa2VsaWhvb2QgdmFy
aWFuY2UgZXN0aW1hdGUuCiAgICovCiAgcHVibGljIGRvdWJsZSB2YXJpYW5jZSgpIHsKICAgIHJl
dHVybiBjb3VudCA+IDEgPyBzcSAvIG1lYW4gOiAwLjA7CiAgfQoKICAvKioKICAgKiBSZXR1cm5z
IHRoZSBtYXhpbXVtIGxpa2VsaWhvb2QgZXN0aW1hdGUgb2YgdGhlIHN0YW5kYXJkIGRldmlhdGlv
biBvZiB0aGUKICAgKiBzYW1wbGVzLgogICAqCiAgICogQHJldHVybiBNYXhpbXVtIGxpa2VsaWhv
b2Qgc3RhbmRhcmQgZGV2aWF0aW9uIGVzdGltYXRlLgogICAqLwogIHB1YmxpYyBkb3VibGUgc3Rh
bmRhcmREZXZpYXRpb24oKSB7CiAgICByZXR1cm4gTWF0aC5zcXJ0KHZhcmlhbmNlKCkpOwogIH0K
CiAgLyoqCiAgICogUmV0dXJucyB0aGUgdW5pdCBvZiBtZWFzdXJlIHJlbGF0ZWQgdG8gdGhlIG1l
YXN1cmVkIHNhbXBsZXMuCiAgICoKICAgKiBAcmV0dXJuIE1heGltdW0gbGlrZWxpaG9vZCBzdGFu
ZGFyZCBkZXZpYXRpb24gZXN0aW1hdGUuCiAgICovCiAgcHVibGljIFN0cmluZyB1bml0KCkgewog
ICAgcmV0dXJuIHVuaXQ7CiAgfQoKICAvKioKICAgKiBSZXNldHMgdGhlIGVzdGltYXRvciBiYWNr
IHRvIHplcm8gc2FtcGxlcy4KICAgKgogICAqIEByZXR1cm4gVGhlIEVzdGltYXRvciBvYmplY3Qg
aXRzZWxmLCB0byBzdXBwb3J0IG1ldGhvZCBjaGFpbmluZy4KICAgKi8KICBwdWJsaWMgZmluYWwg
SW5jcmVtZW50YWxOb3JtYWxEaXN0cmlidXRpb25Fc3RpbWF0b3IgcmVzZXQoKSB7CiAgICBjb3Vu
dCA9IDA7CiAgICBtZWFuID0gMC4wOwogICAgc3EgPSAwLjA7CgogICAgcmV0dXJuIHRoaXM7CiAg
fQoKICAvKioKICAgKiBSZXR1cm5zIGEgc3RyaW5nLWJhc2VkIHJlcHJlc2VudGF0aW9uIG9mIHRo
ZSBtZWFuLCBzdGFuZGFyZCBkZXZpYXRpb24gYW5kCiAgICogbnVtYmVyIG9mIHNhbXBsZXMgZm9y
IHRoaXMgZXN0aW1hdG9yLgogICAqCiAgICogQHJldHVybiBTdHJpbmctYmFzZWQgcmVwcmVzZW50
YXRpb24gb2YgdGhpcyBlc3RpbWF0b3IuCiAgICovCiAgQE92ZXJyaWRlCiAgcHVibGljIFN0cmlu
ZyB0b1N0cmluZygpIHsKICAgIHJldHVybiBTdHJpbmcuZm9ybWF0KCLOvCA9ICUuM2YgJXMsIM+D
ID0gJS4zZiAlcywgbiA9ICVkIiwgbWVhbigpLCB1bml0KCksIHN0YW5kYXJkRGV2aWF0aW9uKCks
IHVuaXQoKSwgY291bnQoKSk7CiAgfQp9</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
