<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.service</value>
  <value name="encodeutf8">true</value>
  <value name="shared">Ly8gY3JlYXRlcyBhIG5ldyBzZXJ2aWNlIGluIHRoZSBnaXZlbiBwYWNrYWdlIHdpdGggdGhlIGdp
dmVuIG5hbWUgYW5kIHRoZSBnaXZlbiB0eXBlCnB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGUoU3Ry
aW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgc2VydmljZU5hbWUsIFN0cmluZyB0eXBlLCBTdHJpbmcg
c3VidHlwZSkgdGhyb3dzIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlU2V0dXBFeGNlcHRp
b24gewogIGNvbS53bS5hcHAuYjJiLnNlcnZlci5QYWNrYWdlIHBhY2sgPSBjb20ud20uYXBwLmIy
Yi5zZXJ2ZXIuUGFja2FnZU1hbmFnZXIuZ2V0UGFja2FnZShwYWNrYWdlTmFtZSk7CiAgaWYgKHBh
Y2sgPT0gbnVsbCkgdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigicGFja2FnZSBk
b2VzIG5vdCBleGlzdDogIiArIHBhY2thZ2VOYW1lKTsKCiAgY29tLndtLmxhbmcubnMuTlNOYW1l
IHN2Y05hbWUgPSBjb20ud20ubGFuZy5ucy5OU05hbWUuY3JlYXRlKHNlcnZpY2VOYW1lKTsKICBp
ZiAoY29tLndtLmFwcC5iMmIuc2VydmVyLm5zLk5hbWVzcGFjZS5jdXJyZW50KCkubm9kZUV4aXN0
cyhzdmNOYW1lKSkgdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigibm9kZSBhbHJl
YWR5IGV4aXN0czogIiArIHNlcnZpY2VOYW1lKTsKCiAgaWYgKHR5cGUgPT0gbnVsbCkgdHlwZSA9
IGNvbS53bS5sYW5nLm5zLk5TU2VydmljZVR5cGUuU1ZDX0ZMT1c7CiAgaWYgKHN1YnR5cGUgPT0g
bnVsbCkgc3VidHlwZSA9IGNvbS53bS5sYW5nLm5zLk5TU2VydmljZVR5cGUuU1ZDU1VCX1VOS05P
V047CiAgY29tLndtLmxhbmcubnMuTlNTZXJ2aWNlVHlwZSBzZXJ2aWNlVHlwZSA9IGNvbS53bS5s
YW5nLm5zLk5TU2VydmljZVR5cGUuY3JlYXRlKHR5cGUsIHN1YnR5cGUpOwoKICBjb20ud20uYXBw
LmIyYi5zZXJ2ZXIuU2VydmVyQVBJLnJlZ2lzdGVyU2VydmljZShwYWNrYWdlTmFtZSwgc3ZjTmFt
ZSwgdHJ1ZSwgc2VydmljZVR5cGUsIG51bGwsIG51bGwsIG51bGwpOwp9CgovLyBjcmVhdGVzIGEg
bmV3IGZsb3cgc2VydmljZSBpbiB0aGUgZ2l2ZW4gcGFja2FnZSB3aXRoIHRoZSBnaXZlbiBuYW1l
CnB1YmxpYyBzdGF0aWMgdm9pZCBjcmVhdGUoU3RyaW5nIHBhY2thZ2VOYW1lLCBTdHJpbmcgc2Vy
dmljZU5hbWUpIHRocm93cyBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZVNldHVwRXhjZXB0
aW9uIHsKICBjcmVhdGUocGFja2FnZU5hbWUsIHNlcnZpY2VOYW1lLCBudWxsLCBudWxsKTsKfQoK
Ly8gc2V0cyB0aGUgcmVzcG9uc2UgaGVhZGVycyBhbmQgYm9keSBmb3IgdGhlIGN1cnJlbnQgc2Vy
dmljZSBpbnZvY2F0aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCByZXNwb25kKGludCBjb2RlLCBTdHJp
bmcgbWVzc2FnZSwgSURhdGEgaGVhZGVycywgT2JqZWN0IGNvbnRlbnQsIFN0cmluZyBjb250ZW50
VHlwZSwgU3RyaW5nIGVuY29kaW5nKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsK
ICAgIGNvbS53bS5uZXQuSHR0cEhlYWRlciByZXNwb25zZSA9IGNvbS53bS5hcHAuYjJiLnNlcnZl
ci5TZXJ2aWNlLmdldEh0dHBSZXNwb25zZUhlYWRlcigpOwoKICAgIGlmIChyZXNwb25zZSA9PSBu
dWxsKSB7IAogICAgICAvLyBub3QgaW52b2tlZCB2aWEgSFRUUCwgc28gdGhyb3cgYW4gZXhjZXB0
aW9uIGluc3RlYWQgZm9yIEhUVFAgc3RhdHVzZXMgPj0gNDAwCiAgICAgIGlmIChjb2RlID49IDQw
MCkgRXhjZXB0aW9uSGVscGVyLnJhaXNlKFN0cmluZ0hlbHBlci5ub3JtYWxpemUoY29udGVudCwg
ZW5jb2RpbmcpKTsKICAgIH0gZWxzZSB7CiAgICAgIGlmIChtZXNzYWdlID09IG51bGwpIG1lc3Nh
Z2UgPSB0dW5kcmEuaHR0cC5yZXNwb25zZS5zdGF0dXMoY29kZSk7CiAgICAgIHJlc3BvbnNlLnNl
dFJlc3BvbnNlKGNvZGUsIG1lc3NhZ2UpOwoKICAgICAgaWYgKGNvbnRlbnRUeXBlID09IG51bGwp
IGNvbnRlbnRUeXBlID0gImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSI7CiAgICAgIGlmIChlbmNv
ZGluZyA9PSBudWxsKSBlbmNvZGluZyA9IHR1bmRyYS5zdXBwb3J0LmNvbnN0YW50LkRFRkFVTFRf
Q0hBUkFDVEVSX0VOQ09ESU5HOwoKICAgICAgamF2YXguYWN0aXZhdGlvbi5NaW1lVHlwZSBtaW1l
VHlwZSA9IG5ldyBqYXZheC5hY3RpdmF0aW9uLk1pbWVUeXBlKGNvbnRlbnRUeXBlKTsKICAgICAg
bWltZVR5cGUuc2V0UGFyYW1ldGVyKCJjaGFyc2V0IiwgZW5jb2RpbmcpOwoKICAgICAgcmVzcG9u
c2UuY2xlYXJGaWVsZCgiQ29udGVudC1UeXBlIik7CiAgICAgIHJlc3BvbnNlLmFkZEZpZWxkKCJD
b250ZW50LVR5cGUiLCBtaW1lVHlwZS50b1N0cmluZygpKTsKCiAgICAgIGlmIChoZWFkZXJzICE9
IG51bGwpIHsKICAgICAgICBJRGF0YUN1cnNvciBoYyA9IGhlYWRlcnMuZ2V0Q3Vyc29yKCk7CiAg
ICAgICAgCiAgICAgICAgd2hpbGUoaGMubmV4dCgpKSB7CiAgICAgICAgICBTdHJpbmcga2V5ID0g
aGMuZ2V0S2V5KCk7CiAgICAgICAgICBPYmplY3QgdmFsdWUgPSBoYy5nZXRWYWx1ZSgpOwoKICAg
ICAgICAgIGlmIChrZXkgIT0gbnVsbCAmJiB2YWx1ZSAhPSBudWxsKSB7CiAgICAgICAgICAgIHJl
c3BvbnNlLmNsZWFyRmllbGQoa2V5KTsKICAgICAgICAgICAgcmVzcG9uc2UuYWRkRmllbGQoa2V5
LCB2YWx1ZS50b1N0cmluZygpKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaGMuZGVz
dHJveSgpOwogICAgICB9CiAgICB9CgogICAgaWYgKGNvbnRlbnQgPT0gbnVsbCkgY29udGVudCA9
ICIiOwogICAgYnl0ZVtdIGJvZHkgPSBwZXJtYWZyb3N0LnR1bmRyYS5sYW5nLkJ5dGVzSGVscGVy
Lm5vcm1hbGl6ZShjb250ZW50LCBlbmNvZGluZyk7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIu
U2VydmljZS5zZXRSZXNwb25zZShib2R5KTsKICB9IGNhdGNoIChqYXZhLmlvLklPRXhjZXB0aW9u
IGV4KSB7CiAgICBFeGNlcHRpb25IZWxwZXIucmFpc2UoZXgpOwogIH0gY2F0Y2ggKGphdmF4LmFj
dGl2YXRpb24uTWltZVR5cGVQYXJzZUV4Y2VwdGlvbiBleCkgewogICAgRXhjZXB0aW9uSGVscGVy
LnJhaXNlKGV4KTsKICB9Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgY2FsbGluZyBzZXJ2aWNl
IGlzIHRoZSB0b3AtbGV2ZWwgaW5pdGlhdGluZyAKLy8gc2VydmljZSBvZiB0aGUgY3VycmVudCB0
aHJlYWQKcHVibGljIHN0YXRpYyBib29sZWFuIGluaXRpYXRvcigpIHsKICByZXR1cm4gY2FsbHN0
YWNrKCkubGVuZ3RoIDw9IDE7Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gc3RyaW5n
IGlzIGEgc2VydmljZSBhbmQgZXhpc3RzCnB1YmxpYyBzdGF0aWMgYm9vbGVhbiB2YWxpZGF0ZShT
dHJpbmcgc2VydmljZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiB2YWxpZGF0
ZShzZXJ2aWNlLCBmYWxzZSk7Cn0KCi8vIHJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gc3RyaW5n
IGlzIGEgc2VydmljZSBhbmQgZXhpc3RzCnB1YmxpYyBzdGF0aWMgYm9vbGVhbiB2YWxpZGF0ZShT
dHJpbmcgc2VydmljZSwgYm9vbGVhbiByYWlzZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewog
IGJvb2xlYW4gdmFsaWQgPSB0dW5kcmEubm9kZS5leGlzdHMoc2VydmljZSkgJiYgInNlcnZpY2Ui
LmVxdWFscyh0dW5kcmEubm9kZS50eXBlKHNlcnZpY2UpKTsKCiAgaWYgKHJhaXNlICYmICF2YWxp
ZCkgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlNlcnZpY2UgZG9lcyBub3QgZXhpc3Q6ICIg
KyBzZXJ2aWNlKTsKICAKICByZXR1cm4gdmFsaWQ7Cn0KCi8vIHF1ZXVlcyB0aGUgc2VydmljZSBm
b3IgZXhlY3V0aW9uIG9uIGEgZGVmZXIgdGhyZWFkIHBvb2wKcHVibGljIHN0YXRpYyB2b2lkIGRl
ZmVyKFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSkgewogIHR1bmRyYS5zdXBwb3J0LnNl
cnZpY2UuZGVmZXIuZW5xdWV1ZShzZXJ2aWNlLCBwaXBlbGluZSk7Cn0KCi8vIHJldHVybnMgdGhl
IGludm9jYXRpb24gY2FsbCBzdGFjawpwdWJsaWMgc3RhdGljIFN0cmluZ1tdIGNhbGxzdGFjaygp
IHsKICBqYXZhLnV0aWwuSXRlcmF0b3Igc3RhY2sgPSBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52
b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCkuZ2V0Q2FsbFN0YWNrKCkuaXRlcmF0b3IoKTsKICBq
YXZhLnV0aWwuTGlzdDxTdHJpbmc+IHNlcnZpY2VzID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8
U3RyaW5nPigpOwogIHdoaWxlIChzdGFjay5oYXNOZXh0KCkpIHsKICAgIHNlcnZpY2VzLmFkZChz
dGFjay5uZXh0KCkudG9TdHJpbmcoKSk7CiAgfQogIC8vIHJlbW92ZSBjYWxsIHRvIHR1bmRyYS5p
bnZva2U6Y2FsbHN0YWNrIGZyb20gdGhlIHN0YWNrCiAgaWYgKHNlcnZpY2VzLnNpemUoKSA+IDAp
IHNlcnZpY2VzLnJlbW92ZShzZXJ2aWNlcy5zaXplKCkgLSAxKTsKICByZXR1cm4gKFN0cmluZ1td
KXNlcnZpY2VzLnRvQXJyYXkobmV3IFN0cmluZ1tzZXJ2aWNlcy5zaXplKCldKTsKfQoKLy8gcmV0
dXJucyB0aGUgbmFtZSBvZiB0aGUgY3VycmVudCBzZXJ2aWNlLCBvciBudWxsIGlmIGludm9rZWQg
ZGlyZWN0bHkKcHVibGljIHN0YXRpYyBTdHJpbmcgc2VsZigpIHsKICBTdHJpbmcgc2VsZiA9IG51
bGw7CiAgamF2YS51dGlsLlN0YWNrIHN0YWNrID0gY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9r
ZVN0YXRlLmdldEN1cnJlbnRTdGF0ZSgpLmdldENhbGxTdGFjaygpOwogIGlmIChzdGFjay5zaXpl
KCkgPiAxKSB7CiAgICBzZWxmID0gc3RhY2suZ2V0KHN0YWNrLnNpemUoKSAtIDIpLnRvU3RyaW5n
KCk7IC8vIHRoaXMgd2lsbCByZXR1cm4gdGhpcyBzZXJ2aWNlJ3MgY2FsbGVyCiAgfQogIHJldHVy
biBzZWxmOwp9CgovLyBpbnZva2VzIHRoZSBnaXZlbiBzZXJ2aWNlIHN5bmNocm9ub3VzbHkKcHVi
bGljIHN0YXRpYyBJRGF0YSBpbnZva2UoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7ICAKICByZXR1cm4gKElEYXRhKWludm9rZShzZXJ2aWNl
LCBwaXBlbGluZSwgInN5bmNocm9ub3VzIik7Cn0KCi8vIGludm9rZXMgdGhlIGdpdmVuIHNlcnZp
Y2UgZWl0aGVyIHN5bmNocm9ub3VzbHkgb3IgYXN5bmNocm9ub3VzbHkKcHVibGljIHN0YXRpYyBP
YmplY3QgaW52b2tlKFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU3RyaW5nIG1vZGUp
IHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsgIAogIE9iamVjdCByZXN1bHQgPSBudWxsOwogIGlm
IChtb2RlLmVxdWFscygic3luY2hyb25vdXMiKSkgewogICAgcmVzdWx0ID0gaW52b2tlLnN5bmNo
cm9ub3VzKHNlcnZpY2UsIHBpcGVsaW5lKTsKICB9IGVsc2UgaWYgKG1vZGUuZXF1YWxzKCJhc3lu
Y2hyb25vdXMiKSkgewogICAgcmVzdWx0ID0gaW52b2tlLmFzeW5jaHJvbm91cyhzZXJ2aWNlLCBw
aXBlbGluZSk7CiAgfSBlbHNlIHsKICAgIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRp
b24oIm1vZGUgbXVzdCBiZSBlaXRoZXIgJ3N5bmNocm9ub3VzJyBvciAnYXN5bmNocm9ub3VzJzog
IiArIG1vZGUpOwogIH0KICByZXR1cm4gcmVzdWx0Owp9CgpwdWJsaWMgc3RhdGljIGNsYXNzIGlu
dm9rZSB7CiAgLy8gaW52b2tlcyBhIHNlcnZpY2UgYXN5bmNocm9ub3VzbHkKICBwdWJsaWMgc3Rh
dGljIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlVGhyZWFkIGFzeW5jaHJvbm91cyhTdHJp
bmcgc2VydmljZSwgSURhdGEgcGlwZWxpbmUpIHsKICAgIGlmIChwaXBlbGluZSA9PSBudWxsKSBw
aXBlbGluZSA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKICAgIGlmIChzZXJ2aWNlID09IG51bGwp
IHJldHVybiBudWxsOwogICAgCiAgICBJRGF0YSBzY29wZSA9IElEYXRhVXRpbC5jbG9uZShwaXBl
bGluZSk7CiAgICBjb20ud20ubGFuZy5ucy5OU05hbWUgbmFtZSA9IGNvbS53bS5sYW5nLm5zLk5T
TmFtZS5jcmVhdGUoc2VydmljZSk7ICAKICAgIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNl
VGhyZWFkIHRocmVhZCA9IGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlLmRvVGhyZWFkSW52
b2tlKG5hbWUsIHNjb3BlKTsKCiAgICByZXR1cm4gdGhyZWFkOwogIH0KCiAgLy8gaW52b2tlcyBh
IHNlcnZpY2Ugc3luY2hyb25vdXNseQogIHB1YmxpYyBzdGF0aWMgSURhdGEgc3luY2hyb25vdXMo
U3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7
CiAgICBpZiAocGlwZWxpbmUgPT0gbnVsbCkgcGlwZWxpbmUgPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7CiAgICBpZiAoc2VydmljZSA9PSBudWxsKSByZXR1cm4gcGlwZWxpbmU7CiAgICAKICAgIElE
YXRhIHNjb3BlID0gSURhdGFVdGlsLmNsb25lKHBpcGVsaW5lKTsKICAgIGNvbS53bS5sYW5nLm5z
Lk5TTmFtZSBuYW1lID0gY29tLndtLmxhbmcubnMuTlNOYW1lLmNyZWF0ZShzZXJ2aWNlKTsKCiAg
ICB0cnkgewogICAgICBzY29wZSA9IGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlLmRvSW52
b2tlKG5hbWUsIHNjb3BlKTsKICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBleCkgewogICAgICBFeGNl
cHRpb25IZWxwZXIucmFpc2UoZXgpOwogICAgfQoKICAgIElEYXRhVXRpbC5tZXJnZShzY29wZSwg
cGlwZWxpbmUpOwogICAgCiAgICByZXR1cm4gcGlwZWxpbmU7CiAgfQp9CgovLyB3YWl0cyBmb3Ig
YW4gYXN5bmNocm9ub3VzbHkgaW52b2tlZCBzZXJ2aWNlIHRvIGNvbXBsZXRlCnB1YmxpYyBzdGF0
aWMgSURhdGEgam9pbihjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZVRocmVhZCB0aHJlYWQp
IHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBJRGF0YSBwaXBlbGluZSA9IElEYXRhRmFjdG9y
eS5jcmVhdGUoKTsKCiAgaWYgKHRocmVhZCAhPSBudWxsKSB7CiAgICB0cnkgewogICAgICBwaXBl
bGluZSA9IHRocmVhZC5nZXRJRGF0YSgpOwogICAgfSBjYXRjaCAoRXhjZXB0aW9uIGV4KSB7CiAg
ICAgIEV4Y2VwdGlvbkhlbHBlci5yYWlzZShleCk7CiAgICB9CiAgfQogIAogIHJldHVybiBwaXBl
bGluZTsKfQoKLy8gc2xlZXBzIHRoZSBjdXJyZW50IHRocmVhZCBmb3IgdGhlIGdpdmVuIGR1cmF0
aW9uCnB1YmxpYyBzdGF0aWMgdm9pZCBzbGVlcChTdHJpbmcgZHVyYXRpb24pIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsKICBzbGVlcCh0dW5kcmEuZHVyYXRpb24ucGFyc2UoZHVyYXRpb24pLmdl
dFRpbWVJbk1pbGxpcyhuZXcgamF2YS51dGlsLkRhdGUoKSkpOwp9CgovLyBzbGVlcHMgdGhlIGN1
cnJlbnQgdGhyZWFkIGZvciB0aGUgZ2l2ZW4gZHVyYXRpb24KcHVibGljIHN0YXRpYyB2b2lkIHNs
ZWVwKGxvbmcgbWlsbGlzZWNvbmRzKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsK
ICAgIFRocmVhZC5zbGVlcChtaWxsaXNlY29uZHMpOwogIH0gY2F0Y2goSW50ZXJydXB0ZWRFeGNl
cHRpb24gZXgpIHsKICAgIEV4Y2VwdGlvbkhlbHBlci5yYWlzZShleCk7CiAgfQp9CgovLyBwcm92
aWRlcyBhIHRyeS9jYXRjaC9maW5hbGx5IHBhdHRlcm4gZm9yIGZsb3cgc2VydmljZXMKcHVibGlj
IHN0YXRpYyBJRGF0YSBlbnN1cmUoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lLCBTdHJp
bmcgY2F0Y2hTZXJ2aWNlLCBTdHJpbmcgZmluYWxseVNlcnZpY2UpIHRocm93cyBTZXJ2aWNlRXhj
ZXB0aW9uIHsKCiAgdHJ5IHsKICAgIHBpcGVsaW5lID0gaW52b2tlLnN5bmNocm9ub3VzKHNlcnZp
Y2UsIHBpcGVsaW5lKTsKICB9IGNhdGNoIChUaHJvd2FibGUgdCkgewogICAgSURhdGFDdXJzb3Ig
Y3Vyc29yID0gcGlwZWxpbmUuZ2V0Q3Vyc29yKCk7CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwg
IiRleGNlcHRpb24iLCB0KTsKICAgIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGV4Y2VwdGlvbj8i
LCAidHJ1ZSIpOwogICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLmNsYXNzIiwg
dC5nZXRDbGFzcygpLmdldE5hbWUoKSk7CiAgICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRleGNl
cHRpb24ubWVzc2FnZSIsIHQuZ2V0TWVzc2FnZSgpKTsKCiAgICBjb20ud20uYXBwLmIyYi5zZXJ2
ZXIuSW52b2tlU3RhdGUgaW52b2tlU3RhdGUgPSBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tl
U3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7CiAgICBJRGF0YSBleGNlcHRpb25JbmZvID0gSURhdGFI
ZWxwZXIuZHVwbGljYXRlKGludm9rZVN0YXRlLmdldEVycm9ySW5mb0Zvcm1hdHRlZCgpLCB0cnVl
KTsKICAgIElEYXRhQ3Vyc29yIGVjID0gZXhjZXB0aW9uSW5mby5nZXRDdXJzb3IoKTsKICAgIFN0
cmluZyBleGNlcHRpb25TZXJ2aWNlID0gSURhdGFVdGlsLmdldFN0cmluZyhlYywgInNlcnZpY2Ui
KTsKICAgIGlmIChleGNlcHRpb25TZXJ2aWNlICE9IG51bGwpIHsKICAgICAgSURhdGFVdGlsLnB1
dChjdXJzb3IsICIkZXhjZXB0aW9uLnNlcnZpY2UiLCBleGNlcHRpb25TZXJ2aWNlKTsKICAgICAg
Y29tLndtLmFwcC5iMmIuc2VydmVyLkJhc2VTZXJ2aWNlIGJhc2VTZXJ2aWNlID0gY29tLndtLmFw
cC5iMmIuc2VydmVyLm5zLk5hbWVzcGFjZS5nZXRTZXJ2aWNlKGNvbS53bS5sYW5nLm5zLk5TTmFt
ZS5jcmVhdGUoZXhjZXB0aW9uU2VydmljZSkpOwogICAgICBpZiAoYmFzZVNlcnZpY2UgIT0gbnVs
bCkgewogICAgICAgIFN0cmluZyBwYWNrYWdlTmFtZSA9IGJhc2VTZXJ2aWNlLmdldFBhY2thZ2VO
YW1lKCk7CiAgICAgICAgSURhdGFVdGlsLnB1dChlYywgInBhY2thZ2UiLCBwYWNrYWdlTmFtZSk7
CiAgICAgICAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLnBhY2thZ2UiLCBwYWNr
YWdlTmFtZSk7CiAgICAgIH0KICAgIH0KICAgIGVjLmRlc3Ryb3koKTsKICAgIElEYXRhVXRpbC5w
dXQoY3Vyc29yLCAiJGV4Y2VwdGlvbi5pbmZvIiwgZXhjZXB0aW9uSW5mbyk7CgogICAgSURhdGFV
dGlsLnB1dChjdXJzb3IsICIkZXhjZXB0aW9uLnN0YWNrIiwgdHVuZHJhLmV4Y2VwdGlvbi5zdGFj
ayh0KSk7CgogICAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgICBpZiAoY2F0Y2hTZXJ2aWNlID09IG51
bGwpIHsKICAgICAgRXhjZXB0aW9uSGVscGVyLnJhaXNlKHQpOwogICAgfSBlbHNlIHsKICAgICAg
cGlwZWxpbmUgPSBpbnZva2UoY2F0Y2hTZXJ2aWNlLCBwaXBlbGluZSk7CiAgICB9CiAgfSBmaW5h
bGx5IHsKICAgIGlmIChmaW5hbGx5U2VydmljZSAhPSBudWxsKSBwaXBlbGluZSA9IGludm9rZShm
aW5hbGx5U2VydmljZSwgcGlwZWxpbmUpOwogIH0KCiAgcmV0dXJuIHBpcGVsaW5lOwp9CgovLyBy
ZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0IHRoZSBnaXZlbiBzZXJ2aWNlCnB1YmxpYyBzdGF0aWMg
SURhdGEgcmVmbGVjdChTdHJpbmcgc2VydmljZU5hbWUpIHsKICBpZiAoc2VydmljZU5hbWUgPT0g
bnVsbCkgcmV0dXJuIG51bGw7CgogIGNvbS53bS5hcHAuYjJiLnNlcnZlci5CYXNlU2VydmljZSBz
ZXJ2aWNlID0gY29tLndtLmFwcC5iMmIuc2VydmVyLm5zLk5hbWVzcGFjZS5nZXRTZXJ2aWNlKGNv
bS53bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoc2VydmljZU5hbWUpKTsKICBpZiAoc2VydmljZSA9
PSBudWxsKSByZXR1cm4gbnVsbDsKCiAgSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0
ZSgpOwogIElEYXRhQ3Vyc29yIGN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsKCiAgSURhdGFV
dGlsLnB1dChjdXJzb3IsICJuYW1lIiwgc2VydmljZU5hbWUpOwogIElEYXRhVXRpbC5wdXQoY3Vy
c29yLCAidHlwZSIsIHNlcnZpY2UuZ2V0U2VydmljZVR5cGUoKS5nZXRUeXBlKCkpOwogIElEYXRh
VXRpbC5wdXQoY3Vyc29yLCAicGFja2FnZSIsIHNlcnZpY2UuZ2V0UGFja2FnZU5hbWUoKSk7Cgog
IFN0cmluZyBkZXNjcmlwdGlvbiA9IHNlcnZpY2UuZ2V0Q29tbWVudCgpOwogIGlmIChkZXNjcmlw
dGlvbiAhPSBudWxsKSBJRGF0YVV0aWwucHV0KGN1cnNvciwgImRlc2NyaXB0aW9uIiwgZGVzY3Jp
cHRpb24pOwoKICBjdXJzb3IuZGVzdHJveSgpOwoKICByZXR1cm4gb3V0cHV0Owp9CgovLyBpbnZv
a2VzIHRoZSBnaXZlbiBzZXJ2aWNlIGEgZ2l2ZW4gbnVtYmVyIG9mIHRpbWVzLCBhbmQgcmV0dXJu
cyBleGVjdXRpb24gZHVyYXRpb24gc3RhdGlzdGljcwpwdWJsaWMgc3RhdGljIE5vcm1hbERpc3Ry
aWJ1dGlvbkVzdGltYXRvciBiZW5jaG1hcmsoU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5l
LCBpbnQgY291bnQpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBOb3JtYWxEaXN0cmlidXRp
b25Fc3RpbWF0b3IgZXN0aW1hdG9yID0gbmV3IE5vcm1hbERpc3RyaWJ1dGlvbkVzdGltYXRvcigi
bXMiKTsKCiAgdmFsaWRhdGUoc2VydmljZSwgdHJ1ZSk7CgogIHRyeSB7IAogICAgZm9yIChpbnQg
aSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CiAgICAgIGxvbmcgc3RhcnQgPSBTeXN0ZW0uY3VycmVu
dFRpbWVNaWxsaXMoKTsKICAgICAgdHVuZHJhLnNlcnZpY2UuaW52b2tlLnN5bmNocm9ub3VzKHNl
cnZpY2UsIHBpcGVsaW5lKTsKICAgICAgbG9uZyBlbmQgPSBTeXN0ZW0uY3VycmVudFRpbWVNaWxs
aXMoKTsKCiAgICAgIGVzdGltYXRvci5hZGQoZW5kIC0gc3RhcnQpOwogICAgfQogIH0gY2F0Y2gg
KFNlcnZpY2VFeGNlcHRpb24gZXgpIHsKICAgIC8vIGlnbm9yZSBleGNlcHRpb25zCiAgfQoKICBy
ZXR1cm4gZXN0aW1hdG9yOwp9</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>permafrost.tundra.data.IDataHelper</value>
    <value>permafrost.tundra.lang.BooleanHelper</value>
    <value>permafrost.tundra.lang.ExceptionHelper</value>
    <value>permafrost.tundra.lang.StringHelper</value>
    <value>permafrost.tundra.math.NormalDistributionEstimator</value>
  </array>
</Values>
