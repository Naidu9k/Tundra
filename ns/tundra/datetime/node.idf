<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.datetime</value>
  <value name="shared">cHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBTdHJpbmcgREVGQVVMVF9EQVRFVElNRV9QQVRURVJOID0g
ImRhdGV0aW1lIjsKCnByb3RlY3RlZCBzdGF0aWMgZmluYWwgamF2YS51dGlsLk1hcDxTdHJpbmcs
IFN0cmluZz4gbmFtZWRQYXR0ZXJucyA9IGNvbnN0cnVjdE5hbWVkUGF0dGVybnMoKTsKCnByb3Rl
Y3RlZCBzdGF0aWMgZmluYWwgamF2YS51dGlsLk1hcDxTdHJpbmcsIFN0cmluZz4gY29uc3RydWN0
TmFtZWRQYXR0ZXJucygpIHsKICBqYXZhLnV0aWwuTWFwPFN0cmluZywgU3RyaW5nPiBtYXAgPSBu
ZXcgamF2YS51dGlsLlRyZWVNYXA8U3RyaW5nLCBTdHJpbmc+KCk7CgogIG1hcC5wdXQoImRhdGV0
aW1lLmpkYmMiLCAieXl5eS1NTS1kZCBISDptbTpzcy5TU1MiKTsKICBtYXAucHV0KCJkYXRlIiwg
Inl5eXktTU0tZGQiKTsKICBtYXAucHV0KCJkYXRlLmpkYmMiLCAieXl5eS1NTS1kZCIpOwogIG1h
cC5wdXQoImRhdGUueG1sIiwgInl5eXktTU0tZGQiKTsgIAogIG1hcC5wdXQoInRpbWUiLCAiSEg6
bW06c3MuU1NTIik7CiAgbWFwLnB1dCgidGltZS5qZGJjIiwgIkhIOm1tOnNzIik7CiAgbWFwLnB1
dCgidGltZS54bWwiLCAiSEg6bW06c3MuU1NTIik7CgogIHJldHVybiBtYXA7Cn0KCi8vIGFkZHMg
dGhlIGdpdmVuIHhtbCBkdXJhdGlvbiB0byB0aGUgZ2l2ZW4geG1sIGRhdGV0aW1lIHJldHVybmlu
ZyB0aGUgcmVzdWx0CnB1YmxpYyBzdGF0aWMgU3RyaW5nIGFkZChTdHJpbmcgZGF0ZXRpbWUsIFN0
cmluZyBkdXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBhZGQoZGF0
ZXRpbWUsIG51bGwsIGR1cmF0aW9uKTsKfQoKLy8gYWRkcyB0aGUgZ2l2ZW4geG1sIGR1cmF0aW9u
IHRvIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0dXJuaW5nIHRoZSByZXN1bHQKcHVibGljIHN0
YXRpYyBTdHJpbmcgYWRkKFN0cmluZyBkYXRldGltZSwgU3RyaW5nIHBhdHRlcm4sIFN0cmluZyBk
dXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBhZGQoZGF0ZXRpbWUs
IHBhdHRlcm4sIGR1cmF0aW9uLCBudWxsKTsKfQoKLy8gYWRkcyB0aGUgZ2l2ZW4geG1sIGR1cmF0
aW9uIHRvIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0dXJuaW5nIHRoZSByZXN1bHQKcHVibGlj
IHN0YXRpYyBTdHJpbmcgYWRkKFN0cmluZyBkYXRldGltZSwgU3RyaW5nIGRhdGV0aW1lUGF0dGVy
biwgU3RyaW5nIGR1cmF0aW9uLCBTdHJpbmcgZHVyYXRpb25QYXR0ZXJuKSB0aHJvd3MgU2Vydmlj
ZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGVtaXQoYWRkKHBhcnNlKGRhdGV0aW1lLCBkYXRldGltZVBh
dHRlcm4pLCB0dW5kcmEuZHVyYXRpb24ucGFyc2UoZHVyYXRpb24sIGR1cmF0aW9uUGF0dGVybikp
LCBkYXRldGltZVBhdHRlcm4pOwp9CgovLyBhZGRzIHRoZSBnaXZlbiB4bWwgZHVyYXRpb24gdG8g
dGhlIGdpdmVuIHhtbCBkYXRldGltZSByZXR1cm5pbmcgdGhlIHJlc3VsdApwdWJsaWMgc3RhdGlj
IGphdmEudXRpbC5DYWxlbmRhciBhZGQoamF2YS51dGlsLkNhbGVuZGFyIGNhbGVuZGFyLCBqYXZh
eC54bWwuZGF0YXR5cGUuRHVyYXRpb24gZHVyYXRpb24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9u
IHsKICBpZiAoY2FsZW5kYXIgPT0gbnVsbCB8fCBkdXJhdGlvbiA9PSBudWxsKSByZXR1cm4gY2Fs
ZW5kYXI7CgogIHRyeSB7CiAgICBqYXZhLnV0aWwuR3JlZ29yaWFuQ2FsZW5kYXIgZ2NhbCA9IG5l
dyBqYXZhLnV0aWwuR3JlZ29yaWFuQ2FsZW5kYXIoKTsKICAgIGdjYWwuc2V0VGltZShjYWxlbmRh
ci5nZXRUaW1lKCkpOwogICAgZ2NhbC5zZXRUaW1lWm9uZShjYWxlbmRhci5nZXRUaW1lWm9uZSgp
KTsKICAgIGphdmF4LnhtbC5kYXRhdHlwZS5YTUxHcmVnb3JpYW5DYWxlbmRhciB4Y2FsID0gamF2
YXgueG1sLmRhdGF0eXBlLkRhdGF0eXBlRmFjdG9yeS5uZXdJbnN0YW5jZSgpLm5ld1hNTEdyZWdv
cmlhbkNhbGVuZGFyKGdjYWwpOwogICAgeGNhbC5hZGQoZHVyYXRpb24pOwoKICAgIGNhbGVuZGFy
ID0geGNhbC50b0dyZWdvcmlhbkNhbGVuZGFyKCk7CiAgfSBjYXRjaCAoamF2YXgueG1sLmRhdGF0
eXBlLkRhdGF0eXBlQ29uZmlndXJhdGlvbkV4Y2VwdGlvbiBleCkgewogICAgdHVuZHJhLmV4Y2Vw
dGlvbi5yYWlzZShleCk7CiAgfQoKICByZXR1cm4gY2FsZW5kYXI7Cn0KCi8vIGNvbXBhcmVzIHR3
byB4bWwgZGF0ZXRpbWUgc3RyaW5ncwpwdWJsaWMgc3RhdGljIGludCBjb21wYXJlKFN0cmluZyBk
eCwgU3RyaW5nIGR5KSB7CiAgcmV0dXJuIGNvbXBhcmUoZHgsIGR5LCBudWxsKTsKfQoKLy8gY29t
cGFyZXMgdHdvIHhtbCBkYXRldGltZSBzdHJpbmdzCnB1YmxpYyBzdGF0aWMgaW50IGNvbXBhcmUo
U3RyaW5nIGR4LCBTdHJpbmcgZHksIFN0cmluZyBwYXR0ZXJuKSB7CiAgcmV0dXJuIGNvbXBhcmUo
cGFyc2UoZHgsIHBhdHRlcm4pLCBwYXJzZShkeSwgcGF0dGVybikpOwp9CgoKLy8gY29tcGFyZXMg
dHdvIGRhdGV0aW1lcwpwdWJsaWMgc3RhdGljIGludCBjb21wYXJlKGphdmEudXRpbC5DYWxlbmRh
ciBjeCwgamF2YS51dGlsLkNhbGVuZGFyIGN5KSB7CiAgaWYgKGN4ID09IG51bGwgJiYgY3kgPT0g
bnVsbCkgcmV0dXJuIDA7CiAgaWYgKGN4ID09IG51bGwgJiYgY3kgIT0gbnVsbCkgcmV0dXJuIC0x
OwogIGlmIChjeCAhPSBudWxsICYmIGN5ID09IG51bGwpIHJldHVybiAxOwogIAogIHJldHVybiBj
eC5jb21wYXJlVG8oY3kpOwp9CgovLyBjb25jYXRlbmF0ZXMgYSB4bWwgZGF0ZSBhbmQgeG1sIHRp
bWUgdG9nZXRoZXIgdG8gZm9ybSBhbiB4bWwgZGF0ZXRpbWUKcHVibGljIHN0YXRpYyBTdHJpbmcg
Y29uY2F0ZW5hdGUoU3RyaW5nIGRhdGUsIFN0cmluZyB0aW1lKSB7CiAgcmV0dXJuIGVtaXQoY29u
Y2F0ZW5hdGUocGFyc2UoZGF0ZSwgImRhdGUiKSwgcGFyc2UodGltZSwgInRpbWUiKSkpOwp9Cgov
LyBhZGRzIHR3byBkYXRlcyB0b2dldGhlcgpwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRh
ciBjb25jYXRlbmF0ZShqYXZhLnV0aWwuQ2FsZW5kYXIgZGF0ZSwgamF2YS51dGlsLkNhbGVuZGFy
IHRpbWUpIHsKICBqYXZhLnV0aWwuQ2FsZW5kYXIgbG9jYWxEYXRlVGltZSA9IG5ldyBqYXZhLnV0
aWwuR3JlZ29yaWFuQ2FsZW5kYXIoKTsKICBsb2NhbERhdGVUaW1lLnNldFRpbWVJbk1pbGxpcyhk
YXRlLmdldFRpbWVJbk1pbGxpcygpICsgdGltZS5nZXRUaW1lSW5NaWxsaXMoKSk7CgogIHJldHVy
biBsb2NhbERhdGVUaW1lOwp9CgovLyByZXR1cm5zIHRoZSB4bWwgZHVyYXRpb24gYmV0d2VlbiB0
d28gZ2l2ZW4geG1sIGRhdGV0aW1lcwpwdWJsaWMgc3RhdGljIFN0cmluZyBkdXJhdGlvbihTdHJp
bmcgc3RhcnQsIFN0cmluZyBlbmQpIHsKICByZXR1cm4gZHVyYXRpb24oc3RhcnQsIGVuZCwgbnVs
bCk7Cn0KCi8vIHJldHVybnMgdGhlIHhtbCBkdXJhdGlvbiBiZXR3ZWVuIHR3byBnaXZlbiB4bWwg
ZGF0ZXRpbWVzCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGR1cmF0aW9uKFN0cmluZyBzdGFydCwgU3Ry
aW5nIGVuZCwgU3RyaW5nIGRhdGV0aW1lUGF0dGVybikgewogIHJldHVybiBkdXJhdGlvbihzdGFy
dCwgZW5kLCBkYXRldGltZVBhdHRlcm4sIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSB4bWwgZHVy
YXRpb24gYmV0d2VlbiB0d28gZ2l2ZW4geG1sIGRhdGV0aW1lcwpwdWJsaWMgc3RhdGljIFN0cmlu
ZyBkdXJhdGlvbihTdHJpbmcgc3RhcnQsIFN0cmluZyBlbmQsIFN0cmluZyBkYXRldGltZVBhdHRl
cm4sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4pIHsKICByZXR1cm4gdHVuZHJhLmR1cmF0aW9uLmVt
aXQoZHVyYXRpb24ocGFyc2Uoc3RhcnQsIGRhdGV0aW1lUGF0dGVybiksIHBhcnNlKGVuZCwgZGF0
ZXRpbWVQYXR0ZXJuKSksIGR1cmF0aW9uUGF0dGVybik7Cn0KCi8vIHJldHVybnMgdGhlIHhtbCBk
dXJhdGlvbiBiZXR3ZWVuIHR3byBnaXZlbiB4bWwgZGF0ZXRpbWVzCnB1YmxpYyBzdGF0aWMgamF2
YXgueG1sLmRhdGF0eXBlLkR1cmF0aW9uIGR1cmF0aW9uKGphdmEudXRpbC5DYWxlbmRhciBzdGFy
dCwgamF2YS51dGlsLkNhbGVuZGFyIGVuZCkgewogIGlmIChzdGFydCA9PSBudWxsIHx8IGVuZCA9
PSBudWxsKSByZXR1cm4gbnVsbDsKICByZXR1cm4gdHVuZHJhLmR1cmF0aW9uLnBhcnNlKCIiICsg
KGVuZC5nZXRUaW1lSW5NaWxsaXMoKSAtIHN0YXJ0LmdldFRpbWVJbk1pbGxpcygpKSwgIm1pbGxp
c2Vjb25kcyIpOwp9CgovLyByZXR1cm5zIHRoZSBnaXZlbiBkYXRldGltZSBhcyBhbiB4bWwgZGF0
ZXRpbWUgc3RyaW5nCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVtaXQoamF2YS51dGlsLkRhdGUgaW5w
dXQpIHsKICByZXR1cm4gZW1pdChpbnB1dCwgbnVsbCk7Cn0KCi8vIHJldHVybnMgdGhlIGdpdmVu
IGRhdGV0aW1lIGFzIGEgc3RyaW5nIGFkaGVyaW5nIHRvIHRoZSBnaXZlbiBwYXR0ZXJuCnB1Ymxp
YyBzdGF0aWMgU3RyaW5nIGVtaXQoamF2YS51dGlsLkRhdGUgaW5wdXQsIFN0cmluZyBwYXR0ZXJu
KSB7CiAgcmV0dXJuIGVtaXQoaW5wdXQsIHBhdHRlcm4sIG51bGwpOwp9CgovLyByZXR1cm5zIHRo
ZSBnaXZlbiBkYXRldGltZSBhcyBhIHN0cmluZyBhZGhlcmluZyB0byB0aGUgZ2l2ZW4gcGF0dGVy
bgpwdWJsaWMgc3RhdGljIFN0cmluZyBlbWl0KGphdmEudXRpbC5EYXRlIGlucHV0LCBTdHJpbmcg
cGF0dGVybiwgU3RyaW5nIHRpbWV6b25lKSB7CiAgaWYgKGlucHV0ID09IG51bGwpIHJldHVybiBu
dWxsOwoKICBqYXZhLnV0aWwuQ2FsZW5kYXIgY2FsZW5kYXIgPSBqYXZhLnV0aWwuQ2FsZW5kYXIu
Z2V0SW5zdGFuY2UoKTsKICBjYWxlbmRhci5zZXRUaW1lKGlucHV0KTsKCiAgcmV0dXJuIGVtaXQo
Y2FsZW5kYXIsIHBhdHRlcm4sIHRpbWV6b25lKTsKfQoKLy8gcmV0dXJucyB0aGUgZ2l2ZW4gZGF0
ZXRpbWUgYXMgYW4geG1sIGRhdGV0aW1lIHN0cmluZwpwdWJsaWMgc3RhdGljIFN0cmluZyBlbWl0
KGphdmEudXRpbC5DYWxlbmRhciBpbnB1dCkgewogIHJldHVybiBlbWl0KGlucHV0LCBudWxsKTsK
fQoKLy8gcmV0dXJucyB0aGUgZ2l2ZW4gZGF0ZXRpbWUgZm9ybWF0dGVkIGFzIGEgc3RyaW5nIGFk
aGVyaW5nIHRvIHRoZSBnaXZlbiBwYXR0ZXJuCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVtaXQoamF2
YS51dGlsLkNhbGVuZGFyIGlucHV0LCBTdHJpbmcgcGF0dGVybikgewogIHJldHVybiBlbWl0KGlu
cHV0LCBwYXR0ZXJuLCBudWxsKTsKfQoKLy8gcmV0dXJucyB0aGUgZ2l2ZW4gZGF0ZXRpbWUgZm9y
bWF0dGVkIGFzIGEgc3RyaW5nIGFkaGVyaW5nIHRvIHRoZSBnaXZlbiBwYXR0ZXJuCnB1YmxpYyBz
dGF0aWMgU3RyaW5nIGVtaXQoamF2YS51dGlsLkNhbGVuZGFyIGlucHV0LCBTdHJpbmcgcGF0dGVy
biwgU3RyaW5nIHRpbWV6b25lKSB7CiAgaWYgKHBhdHRlcm4gPT0gbnVsbCkgcGF0dGVybiA9IERF
RkFVTFRfREFURVRJTUVfUEFUVEVSTjsKICBTdHJpbmcgb3V0cHV0ID0gbnVsbDsKICAKICBpZiAo
aW5wdXQgIT0gbnVsbCkgewogICAgaWYgKHRpbWV6b25lICE9IG51bGwpIGlucHV0ID0gdHVuZHJh
LnN1cHBvcnQudGltZXpvbmUuY29udmVydChpbnB1dCwgdGltZXpvbmUpOwoKICAgIGlmIChwYXR0
ZXJuLmVxdWFscygiZGF0ZXRpbWUiKSB8fCBwYXR0ZXJuLmVxdWFscygiZGF0ZXRpbWUueG1sIikp
IHsKICAgICAgb3V0cHV0ID0gamF2YXgueG1sLmJpbmQuRGF0YXR5cGVDb252ZXJ0ZXIucHJpbnRE
YXRlVGltZShpbnB1dCk7CiAgICB9IGVsc2UgaWYgKHBhdHRlcm4uZXF1YWxzKCJtaWxsaXNlY29u
ZHMiKSkgewogICAgICBvdXRwdXQgPSAiIiArIGlucHV0LmdldFRpbWVJbk1pbGxpcygpOyAgCiAg
ICB9IGVsc2UgewogICAgICBpZiAobmFtZWRQYXR0ZXJucy5jb250YWluc0tleShwYXR0ZXJuKSkg
cGF0dGVybiA9IG5hbWVkUGF0dGVybnMuZ2V0KHBhdHRlcm4pOwogICAgICBqYXZhLnRleHQuRGF0
ZUZvcm1hdCBmb3JtYXR0ZXIgPSBuZXcgamF2YS50ZXh0LlNpbXBsZURhdGVGb3JtYXQocGF0dGVy
bik7CiAgICAgIGZvcm1hdHRlci5zZXRUaW1lWm9uZShpbnB1dC5nZXRUaW1lWm9uZSgpKTsKICAg
ICAgZm9ybWF0dGVyLnNldExlbmllbnQoZmFsc2UpOwogICAgICBvdXRwdXQgPSBmb3JtYXR0ZXIu
Zm9ybWF0KGlucHV0LmdldFRpbWUoKSk7CiAgICB9CiAgfQogIAogIHJldHVybiBvdXRwdXQ7Cn0K
Ci8vIHJldHVybnMgdGhlIGdpdmVuIGRhdGV0aW1lIGZvcm1hdHRlZCBhcyBhIHN0cmluZyBhZGhl
cmluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybgpwdWJsaWMgc3RhdGljIFN0cmluZ1tdIGVtaXQoamF2
YS51dGlsLkNhbGVuZGFyW10gaW5wdXRzLCBTdHJpbmcgcGF0dGVybikgewogIHJldHVybiBlbWl0
KGlucHV0cywgcGF0dGVybiwgbnVsbCk7Cn0KCi8vIHJldHVybnMgdGhlIGdpdmVuIGRhdGV0aW1l
IGZvcm1hdHRlZCBhcyBhIHN0cmluZyBhZGhlcmluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybgpwdWJs
aWMgc3RhdGljIFN0cmluZ1tdIGVtaXQoamF2YS51dGlsLkNhbGVuZGFyW10gaW5wdXRzLCBTdHJp
bmcgcGF0dGVybiwgU3RyaW5nIHRpbWV6b25lKSB7CiAgU3RyaW5nW10gb3V0cHV0cyA9IG51bGw7
CiAgaWYgKGlucHV0cyAhPSBudWxsKSB7CiAgICBvdXRwdXRzID0gbmV3IFN0cmluZ1tpbnB1dHMu
bGVuZ3RoXTsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7CiAg
ICAgIG91dHB1dHNbaV0gPSBlbWl0KGlucHV0c1tpXSwgcGF0dGVybiwgdGltZXpvbmUpOwogICAg
fQogIH0KICByZXR1cm4gb3V0cHV0czsKfQoKLy8gcmVmb3JtYXRzIGEgZGF0ZXRpbWUgc3RyaW5n
IGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmcgZm9y
bWF0KFN0cmluZyBpbnB1dCwgU3RyaW5nIGluUGF0dGVybiwgU3RyaW5nIG91dFBhdHRlcm4pIHsK
ICByZXR1cm4gZm9ybWF0KGlucHV0LCBpblBhdHRlcm4sIG51bGwsIG91dFBhdHRlcm4sIG51bGwp
Owp9CgovLyByZWZvcm1hdHMgYSBkYXRldGltZSBzdHJpbmcgYWNjb3JkaW5nIHRvIHRoZSBnaXZl
biBwYXR0ZXJucwpwdWJsaWMgc3RhdGljIFN0cmluZyBmb3JtYXQoU3RyaW5nIGlucHV0LCBTdHJp
bmcgaW5QYXR0ZXJuLCBTdHJpbmcgaW5UaW1lWm9uZSwgU3RyaW5nIG91dFBhdHRlcm4sIFN0cmlu
ZyBvdXRUaW1lWm9uZSkgewogIHJldHVybiBlbWl0KHBhcnNlKGlucHV0LCBpblBhdHRlcm4sIGlu
VGltZVpvbmUpLCBvdXRQYXR0ZXJuLCBvdXRUaW1lWm9uZSk7Cn0KCi8vIHJlZm9ybWF0cyBhIGRh
dGV0aW1lIHN0cmluZyBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0
aWMgU3RyaW5nIGZvcm1hdChTdHJpbmcgaW5wdXQsIFN0cmluZ1tdIGluUGF0dGVybnMsIFN0cmlu
ZyBvdXRQYXR0ZXJuKSB7CiAgcmV0dXJuIGZvcm1hdChpbnB1dCwgaW5QYXR0ZXJucywgbnVsbCwg
b3V0UGF0dGVybiwgbnVsbCk7Cn0KCi8vIHJlZm9ybWF0cyBhIGRhdGV0aW1lIHN0cmluZyBhY2Nv
cmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGZvcm1hdChT
dHJpbmcgaW5wdXQsIFN0cmluZ1tdIGluUGF0dGVybnMsIFN0cmluZyBpblRpbWVab25lLCBTdHJp
bmcgb3V0UGF0dGVybiwgU3RyaW5nIG91dFRpbWVab25lKSB7CiAgcmV0dXJuIGVtaXQocGFyc2Uo
aW5wdXQsIGluUGF0dGVybnMsIGluVGltZVpvbmUpLCBvdXRQYXR0ZXJuLCBvdXRUaW1lWm9uZSk7
Cn0KCi8vIHJlZm9ybWF0cyBhIGxpc3QgZGF0ZXRpbWUgc3RyaW5ncyBhY2NvcmRpbmcgdG8gdGhl
IGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0aWMgU3RyaW5nW10gZm9ybWF0KFN0cmluZ1tdIGlu
cHV0cywgU3RyaW5nIGluUGF0dGVybiwgU3RyaW5nIG91dFBhdHRlcm4pIHsKICByZXR1cm4gZm9y
bWF0KGlucHV0cywgaW5QYXR0ZXJuLCBudWxsLCBvdXRQYXR0ZXJuLCBudWxsKTsKfQoKLy8gcmVm
b3JtYXRzIGEgbGlzdCBkYXRldGltZSBzdHJpbmdzIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gcGF0
dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmdbXSBmb3JtYXQoU3RyaW5nW10gaW5wdXRzLCBTdHJp
bmcgaW5QYXR0ZXJuLCBTdHJpbmcgaW5UaW1lWm9uZSwgU3RyaW5nIG91dFBhdHRlcm4sIFN0cmlu
ZyBvdXRUaW1lWm9uZSkgewogIFN0cmluZ1tdIG91dHB1dHMgPSBudWxsOwogIGlmIChpbnB1dHMg
IT0gbnVsbCkgewogICAgb3V0cHV0cyA9IG5ldyBTdHJpbmdbaW5wdXRzLmxlbmd0aF07CiAgICBm
b3IgKGludCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykgewogICAgICBvdXRwdXRzW2ld
ID0gdHVuZHJhLmRhdGV0aW1lLmZvcm1hdChpbnB1dHNbaV0sIGluUGF0dGVybiwgaW5UaW1lWm9u
ZSwgb3V0UGF0dGVybiwgb3V0VGltZVpvbmUpOwogICAgfQogIH0KICByZXR1cm4gb3V0cHV0czsK
fQoKLy8gcmVmb3JtYXRzIGEgbGlzdCBkYXRldGltZSBzdHJpbmdzIGFjY29yZGluZyB0byB0aGUg
Z2l2ZW4gcGF0dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmdbXSBmb3JtYXQoU3RyaW5nW10gaW5w
dXRzLCBTdHJpbmdbXSBpblBhdHRlcm5zLCBTdHJpbmcgb3V0UGF0dGVybikgewogIHJldHVybiBm
b3JtYXQoaW5wdXRzLCBpblBhdHRlcm5zLCBudWxsLCBvdXRQYXR0ZXJuLCBudWxsKTsKfQoKLy8g
cmVmb3JtYXRzIGEgbGlzdCBkYXRldGltZSBzdHJpbmdzIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4g
cGF0dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmdbXSBmb3JtYXQoU3RyaW5nW10gaW5wdXRzLCBT
dHJpbmdbXSBpblBhdHRlcm5zLCBTdHJpbmcgaW5UaW1lWm9uZSwgU3RyaW5nIG91dFBhdHRlcm4s
IFN0cmluZyBvdXRUaW1lWm9uZSkgewogIFN0cmluZ1tdIG91dHB1dHMgPSBudWxsOwogIGlmIChp
bnB1dHMgIT0gbnVsbCkgewogICAgb3V0cHV0cyA9IG5ldyBTdHJpbmdbaW5wdXRzLmxlbmd0aF07
CiAgICBmb3IgKGludCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykgewogICAgICBvdXRw
dXRzW2ldID0gdHVuZHJhLmRhdGV0aW1lLmZvcm1hdChpbnB1dHNbaV0sIGluUGF0dGVybnMsIGlu
VGltZVpvbmUsIG91dFBhdHRlcm4sIG91dFRpbWVab25lKTsKICAgIH0KICB9CiAgcmV0dXJuIG91
dHB1dHM7Cn0KCi8vIHJldHVybnMgdGhlIGN1cnJlbnQgZGF0ZXRpbWUgYXMgYW4geG1sIGRhdGV0
aW1lIHN0cmluZwpwdWJsaWMgc3RhdGljIFN0cmluZyBub3coKSB7CiAgcmV0dXJuIG5vdygiZGF0
ZXRpbWUiKTsKfQoKLy8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBhcyBhbiBkYXRldGlt
ZSBzdHJpbmcgZm9ybWF0dGVkIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybgpwdWJsaWMg
c3RhdGljIFN0cmluZyBub3coU3RyaW5nIHBhdHRlcm4pIHsKICByZXR1cm4gbm93KHBhdHRlcm4s
IG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIGFzIGFuIGRhdGV0aW1l
IHN0cmluZyBmb3JtYXR0ZWQgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBwYXR0ZXJuCnB1YmxpYyBz
dGF0aWMgU3RyaW5nIG5vdyhTdHJpbmcgcGF0dGVybiwgU3RyaW5nIHRpbWV6b25lKSB7CiAgcmV0
dXJuIGVtaXQoamF2YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNlKCksIHBhdHRlcm4sIHRpbWV6
b25lKTsKfQoKLy8gcGFyc2VzIGFuIHhtbCBkYXRldGltZSBzdHJpbmcgYW5kIHJldHVybnMgYSBq
YXZhLnV0aWwuRGF0ZSBvYmplY3QKcHVibGljIHN0YXRpYyBqYXZhLnV0aWwuQ2FsZW5kYXIgcGFy
c2UoU3RyaW5nIGlucHV0KSB7CiAgcmV0dXJuIHBhcnNlKGlucHV0LCAoU3RyaW5nKW51bGwpOwp9
CgovLyBwYXJzZXMgYSBkYXRldGltZSBzdHJpbmcgdGhhdCBhZGhlcmVzIHRvIHRoZSBnaXZlbiBw
YXR0ZXJuIGFuZCByZXR1cm5zIGEgamF2YS51dGlsLkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMg
amF2YS51dGlsLkNhbGVuZGFyIHBhcnNlKFN0cmluZyBpbnB1dCwgU3RyaW5nIHBhdHRlcm4pIHRo
cm93cyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gewogIHJldHVybiBwYXJzZShpbnB1dCwgcGF0
dGVybiwgKFN0cmluZyludWxsKTsKfQoKLy8gcGFyc2VzIGEgZGF0ZXRpbWUgc3RyaW5nIHRoYXQg
YWRoZXJlcyB0byB0aGUgZ2l2ZW4gcGF0dGVybiBhbmQgcmV0dXJucyBhIGphdmEudXRpbC5EYXRl
IG9iamVjdApwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhciBwYXJzZShTdHJpbmcgaW5w
dXQsIFN0cmluZyBwYXR0ZXJuLCBTdHJpbmcgdGltZXpvbmUpIHRocm93cyBJbGxlZ2FsQXJndW1l
bnRFeGNlcHRpb24gewogIGlmIChwYXR0ZXJuID09IG51bGwpIHBhdHRlcm4gPSBERUZBVUxUX0RB
VEVUSU1FX1BBVFRFUk47CiAgCiAgamF2YS51dGlsLkNhbGVuZGFyIG91dHB1dCA9IG51bGw7CiAg
CiAgaWYgKGlucHV0ICE9IG51bGwpIHsKICAgIHRyeSB7CiAgICAgIGlmIChwYXR0ZXJuLmVxdWFs
cygiZGF0ZXRpbWUiKSB8fCBwYXR0ZXJuLmVxdWFscygiZGF0ZXRpbWUueG1sIikpIHsKICAgICAg
ICBvdXRwdXQgPSBqYXZheC54bWwuYmluZC5EYXRhdHlwZUNvbnZlcnRlci5wYXJzZURhdGVUaW1l
KGlucHV0KTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygiZGF0ZXRpbWUuamRiYyIp
KSB7CiAgICAgICAgb3V0cHV0ID0gamF2YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNlKCk7CiAg
ICAgICAgb3V0cHV0LnNldFRpbWUoamF2YS5zcWwuVGltZXN0YW1wLnZhbHVlT2YoaW5wdXQpKTsK
ICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygiZGF0ZSIpIHx8IHBhdHRlcm4uZXF1YWxz
KCJkYXRlLnhtbCIpKSB7CiAgICAgICAgb3V0cHV0ID0gamF2YXgueG1sLmJpbmQuRGF0YXR5cGVD
b252ZXJ0ZXIucGFyc2VEYXRlKGlucHV0KTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFs
cygidGltZSIpIHx8IHBhdHRlcm4uZXF1YWxzKCJ0aW1lLnhtbCIpKSB7CiAgICAgICAgb3V0cHV0
ID0gamF2YXgueG1sLmJpbmQuRGF0YXR5cGVDb252ZXJ0ZXIucGFyc2VUaW1lKGlucHV0KTsKICAg
ICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygibWlsbGlzZWNvbmRzIikpIHsKICAgICAgICBv
dXRwdXQgPSBqYXZhLnV0aWwuQ2FsZW5kYXIuZ2V0SW5zdGFuY2UoKTsKICAgICAgICBvdXRwdXQu
c2V0VGltZUluTWlsbGlzKExvbmcucGFyc2VMb25nKGlucHV0KSk7CiAgICAgIH0gZWxzZSB7CiAg
ICAgICAgaWYgKG5hbWVkUGF0dGVybnMuY29udGFpbnNLZXkocGF0dGVybikpIHBhdHRlcm4gPSBu
YW1lZFBhdHRlcm5zLmdldChwYXR0ZXJuKTsKICAgICAgICAKICAgICAgICBqYXZhLnRleHQuRGF0
ZUZvcm1hdCBmb3JtYXR0ZXIgPSBuZXcgamF2YS50ZXh0LlNpbXBsZURhdGVGb3JtYXQocGF0dGVy
bik7CiAgICAgICAgZm9ybWF0dGVyLnNldExlbmllbnQoZmFsc2UpOwogICAgICAgIG91dHB1dCA9
IGphdmEudXRpbC5DYWxlbmRhci5nZXRJbnN0YW5jZSgpOwogICAgICAgIG91dHB1dC5zZXRUaW1l
KGZvcm1hdHRlci5wYXJzZShpbnB1dCkpOwogICAgICB9CgogICAgICBpZiAodGltZXpvbmUgIT0g
bnVsbCkgb3V0cHV0ID0gdHVuZHJhLnN1cHBvcnQudGltZXpvbmUucmVwbGFjZShvdXRwdXQsIHRp
bWV6b25lKTsKICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBleCkgewogICAgICB0aHJvdyBuZXcgSWxs
ZWdhbEFyZ3VtZW50RXhjZXB0aW9uKCJVbnBhcnNlYWJsZSBkYXRldGltZTogJyIgKyBpbnB1dCAr
ICInIGRvZXMgbm90IGNvbmZvcm0gdG8gcGF0dGVybiAnIiArIHBhdHRlcm4gKyAiJyIpOwogICAg
fQogIH0KICAKICByZXR1cm4gb3V0cHV0Owp9CgovLyBwYXJzZXMgYSBkYXRldGltZSBzdHJpbmcg
dGhhdCBhZGhlcmVzIHRvIHRoZSBnaXZlbiBwYXR0ZXJuIGFuZCByZXR1cm5zIGEgamF2YS51dGls
LkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFyIHBhcnNlKFN0cmlu
ZyBpbnB1dCwgU3RyaW5nW10gcGF0dGVybnMpIHRocm93cyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRp
b24geyAgCiAgcmV0dXJuIHBhcnNlKGlucHV0LCBwYXR0ZXJucywgKFN0cmluZyludWxsKTsKfQoK
Ly8gcGFyc2VzIGEgZGF0ZXRpbWUgc3RyaW5nIHRoYXQgYWRoZXJlcyB0byB0aGUgZ2l2ZW4gcGF0
dGVybiBhbmQgcmV0dXJucyBhIGphdmEudXRpbC5EYXRlIG9iamVjdApwdWJsaWMgc3RhdGljIGph
dmEudXRpbC5DYWxlbmRhciBwYXJzZShTdHJpbmcgaW5wdXQsIFN0cmluZ1tdIHBhdHRlcm5zLCBT
dHJpbmcgdGltZXpvbmUpIHRocm93cyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24geyAgCiAgamF2
YS51dGlsLkNhbGVuZGFyIG91dHB1dCA9IG51bGw7CgogIGlmIChwYXR0ZXJucyA9PSBudWxsKSBw
YXR0ZXJucyA9IG5ldyBTdHJpbmdbMV07CgogIGphdmEudXRpbC5MaXN0PFRocm93YWJsZT4gZXhj
ZXB0aW9ucyA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PFRocm93YWJsZT4oKTsKICAKICBpZiAo
aW5wdXQgIT0gbnVsbCkgewogICAgYm9vbGVhbiBwYXJzZWQgPSBmYWxzZTsKICAgIGZvciAoU3Ry
aW5nIHBhdHRlcm4gOiBwYXR0ZXJucykgewogICAgICB0cnkgewogICAgICAgIG91dHB1dCA9IHBh
cnNlKGlucHV0LCBwYXR0ZXJuLCB0aW1lem9uZSk7CiAgICAgICAgcGFyc2VkID0gdHJ1ZTsKICAg
ICAgICBicmVhazsKICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGV4KSB7CiAgICAgICAgZXhjZXB0
aW9ucy5hZGQoZXgpOwogICAgICB9CiAgICB9CiAgICBpZiAoIXBhcnNlZCkgdGhyb3cgbmV3IEls
bGVnYWxBcmd1bWVudEV4Y2VwdGlvbih0dW5kcmEuZXhjZXB0aW9uLm1lc3NhZ2UoZXhjZXB0aW9u
cykpOwogIH0KICAKICByZXR1cm4gb3V0cHV0Owp9CgovLyBwYXJzZXMgYSBsaXN0IG9mIGRhdGV0
aW1lIHN0cmluZ3MgdGhhdCBhZGhlcmVzIHRvIHRoZSBnaXZlbiBwYXR0ZXJuIGFuZCByZXR1cm5z
IGEgamF2YS51dGlsLkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFy
W10gcGFyc2UoU3RyaW5nW10gaW5wdXRzLCBTdHJpbmcgcGF0dGVybikgdGhyb3dzIElsbGVnYWxB
cmd1bWVudEV4Y2VwdGlvbiB7CiAgcmV0dXJuIHBhcnNlKGlucHV0cywgcGF0dGVybiwgKFN0cmlu
ZyludWxsKTsKfQoKLy8gcGFyc2VzIGEgbGlzdCBvZiBkYXRldGltZSBzdHJpbmdzIHRoYXQgYWRo
ZXJlcyB0byB0aGUgZ2l2ZW4gcGF0dGVybiBhbmQgcmV0dXJucyBhIGphdmEudXRpbC5EYXRlIG9i
amVjdApwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhcltdIHBhcnNlKFN0cmluZ1tdIGlu
cHV0cywgU3RyaW5nIHBhdHRlcm4sIFN0cmluZyB0aW1lem9uZSkgdGhyb3dzIElsbGVnYWxBcmd1
bWVudEV4Y2VwdGlvbiB7CiAgamF2YS51dGlsLkNhbGVuZGFyW10gb3V0cHV0cyA9IG51bGw7CiAg
aWYgKGlucHV0cyAhPSBudWxsKSB7CiAgICBvdXRwdXRzID0gbmV3IGphdmEudXRpbC5DYWxlbmRh
cltpbnB1dHMubGVuZ3RoXTsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsg
aSsrKSB7CiAgICAgIG91dHB1dHNbaV0gPSBwYXJzZShpbnB1dHNbaV0sIHBhdHRlcm4sIHRpbWV6
b25lKTsKICAgIH0KICB9CiAgcmV0dXJuIG91dHB1dHM7Cn0KCi8vIHBhcnNlcyBhIGxpc3Qgb2Yg
ZGF0ZXRpbWUgc3RyaW5ncyB0aGF0IGFkaGVyZXMgdG8gdGhlIGdpdmVuIHBhdHRlcm5zIGFuZCBy
ZXR1cm5zIGEgamF2YS51dGlsLkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNh
bGVuZGFyW10gcGFyc2UoU3RyaW5nW10gaW5wdXRzLCBTdHJpbmdbXSBwYXR0ZXJucykgdGhyb3dz
IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiB7CiAgcmV0dXJuIHBhcnNlKGlucHV0cywgcGF0dGVy
bnMsIChTdHJpbmcpbnVsbCk7Cn0KCi8vIHBhcnNlcyBhIGxpc3Qgb2YgZGF0ZXRpbWUgc3RyaW5n
cyB0aGF0IGFkaGVyZXMgdG8gdGhlIGdpdmVuIHBhdHRlcm5zIGFuZCByZXR1cm5zIGEgamF2YS51
dGlsLkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFyW10gcGFyc2Uo
U3RyaW5nW10gaW5wdXRzLCBTdHJpbmdbXSBwYXR0ZXJucywgU3RyaW5nIHRpbWV6b25lKSB0aHJv
d3MgSWxsZWdhbEFyZ3VtZW50RXhjZXB0aW9uIHsKICBqYXZhLnV0aWwuQ2FsZW5kYXJbXSBvdXRw
dXRzID0gbnVsbDsKICBpZiAoaW5wdXRzICE9IG51bGwpIHsKICAgIG91dHB1dHMgPSBuZXcgamF2
YS51dGlsLkNhbGVuZGFyW2lucHV0cy5sZW5ndGhdOwogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBp
bnB1dHMubGVuZ3RoOyBpKyspIHsKICAgICAgb3V0cHV0c1tpXSA9IHBhcnNlKGlucHV0c1tpXSwg
cGF0dGVybnMsIHRpbWV6b25lKTsKICAgIH0KICB9CiAgcmV0dXJuIG91dHB1dHM7Cn0KCi8vIHN1
YnRyYWN0cyB0aGUgZ2l2ZW4geG1sIGR1cmF0aW9uIGZyb20gdGhlIGdpdmVuIHhtbCBkYXRldGlt
ZSByZXR1cm5pbmcgdGhlIHJlc3VsdApwdWJsaWMgc3RhdGljIFN0cmluZyBzdWJ0cmFjdChTdHJp
bmcgZGF0ZXRpbWUsIFN0cmluZyBkdXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewog
IHJldHVybiBzdWJ0cmFjdChkYXRldGltZSwgbnVsbCwgZHVyYXRpb24pOwp9CgovLyBzdWJ0cmFj
dHMgdGhlIGdpdmVuIHhtbCBkdXJhdGlvbiBmcm9tIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0
dXJuaW5nIHRoZSByZXN1bHQKcHVibGljIHN0YXRpYyBTdHJpbmcgc3VidHJhY3QoU3RyaW5nIGRh
dGV0aW1lLCBTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJpbmcgZHVyYXRpb24pIHRocm93cyBT
ZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gc3VidHJhY3QoZGF0ZXRpbWUsIGRhdGV0aW1lUGF0
dGVybiwgZHVyYXRpb24sIG51bGwpOwp9CgovLyBzdWJ0cmFjdHMgdGhlIGdpdmVuIHhtbCBkdXJh
dGlvbiBmcm9tIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0dXJuaW5nIHRoZSByZXN1bHQKcHVi
bGljIHN0YXRpYyBTdHJpbmcgc3VidHJhY3QoU3RyaW5nIGRhdGV0aW1lLCBTdHJpbmcgZGF0ZXRp
bWVQYXR0ZXJuLCBTdHJpbmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4pIHRocm93
cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gZW1pdChzdWJ0cmFjdChwYXJzZShkYXRldGlt
ZSwgZGF0ZXRpbWVQYXR0ZXJuKSwgdHVuZHJhLmR1cmF0aW9uLnBhcnNlKGR1cmF0aW9uLCBkdXJh
dGlvblBhdHRlcm4pKSwgZGF0ZXRpbWVQYXR0ZXJuKTsKfQoKLy8gc3VidHJhY3RzIHRoZSBnaXZl
biBkdXJhdGlvbiBmcm9tIHRoZSBnaXZlbiBkYXRldGltZSByZXR1cm5pbmcgdGhlIHJlc3VsdApw
dWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhciBzdWJ0cmFjdChqYXZhLnV0aWwuQ2FsZW5k
YXIgY2FsZW5kYXIsIGphdmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gewogIGlmIChkdXJhdGlvbiAhPSBudWxsKSBkdXJhdGlvbiA9IGR1
cmF0aW9uLm5lZ2F0ZSgpOwogIHJldHVybiBhZGQoY2FsZW5kYXIsIGR1cmF0aW9uKTsKfQoKLy8g
cmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBtaW51cyB0aGUgZ2l2ZW4gWE1MIGR1cmF0aW9u
CnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVhcmxpZXIoU3RyaW5nIGR1cmF0aW9uKSB0aHJvd3MgU2Vy
dmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGVhcmxpZXIobnVsbCwgZHVyYXRpb24sIG51bGwpOwp9
CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIG1pbnVzIHRoZSBnaXZlbiBkdXJhdGlv
bgpwdWJsaWMgc3RhdGljIFN0cmluZyBlYXJsaWVyKFN0cmluZyBkdXJhdGlvbiwgU3RyaW5nIGR1
cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBlYXJsaWVy
KG51bGwsIGR1cmF0aW9uLCBkdXJhdGlvblBhdHRlcm4pOwp9CgovLyByZXR1cm5zIHRoZSBjdXJy
ZW50IGRhdGV0aW1lIG1pbnVzIHRoZSBnaXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIFN0cmlu
ZyBlYXJsaWVyKFN0cmluZyBkYXRldGltZVBhdHRlcm4sIFN0cmluZyBkdXJhdGlvbiwgU3RyaW5n
IGR1cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBlYXJs
aWVyKGRhdGV0aW1lUGF0dGVybiwgZHVyYXRpb24sIGR1cmF0aW9uUGF0dGVybiwgbnVsbCk7Cn0K
Ci8vIHJldHVybnMgdGhlIGN1cnJlbnQgZGF0ZXRpbWUgbWludXMgdGhlIGdpdmVuIGR1cmF0aW9u
CnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVhcmxpZXIoU3RyaW5nIGRhdGV0aW1lUGF0dGVybiwgU3Ry
aW5nIGR1cmF0aW9uLCBTdHJpbmcgZHVyYXRpb25QYXR0ZXJuLCBTdHJpbmcgdGltZXpvbmUpIHRo
cm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gZW1pdChlYXJsaWVyKHR1bmRyYS5kdXJh
dGlvbi5wYXJzZShkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKSksIGRhdGV0aW1lUGF0dGVybiwg
dGltZXpvbmUpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIG1pbnVzIHRoZSBn
aXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhciBlYXJsaWVyKGph
dmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRp
b24gewogIHJldHVybiBzdWJ0cmFjdChqYXZhLnV0aWwuQ2FsZW5kYXIuZ2V0SW5zdGFuY2UoKSwg
ZHVyYXRpb24pOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIHBsdXMgdGhlIGdp
dmVuIFhNTCBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIFN0cmluZyBsYXRlcihTdHJpbmcgZHVyYXRp
b24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gbGF0ZXIobnVsbCwgZHVyYXRp
b24sIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIHBsdXMgdGhlIGdp
dmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGxhdGVyKFN0cmluZyBkdXJhdGlvbiwg
U3RyaW5nIGR1cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVy
biBsYXRlcihudWxsLCBkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKTsKfQoKLy8gcmV0dXJucyB0
aGUgY3VycmVudCBkYXRldGltZSBwbHVzIHRoZSBnaXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGlj
IFN0cmluZyBsYXRlcihTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJpbmcgZHVyYXRpb24sIFN0
cmluZyBkdXJhdGlvblBhdHRlcm4pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4g
bGF0ZXIoZGF0ZXRpbWVQYXR0ZXJuLCBkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuLCBudWxsKTsK
fQoKLy8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBwbHVzIHRoZSBnaXZlbiBkdXJhdGlv
bgpwdWJsaWMgc3RhdGljIFN0cmluZyBsYXRlcihTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJp
bmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4sIFN0cmluZyB0aW1lem9uZSkgdGhy
b3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBlbWl0KGxhdGVyKHR1bmRyYS5kdXJhdGlv
bi5wYXJzZShkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKSksIGRhdGV0aW1lUGF0dGVybiwgdGlt
ZXpvbmUpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIHBsdXMgdGhlIGdpdmVu
IGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFyIGxhdGVyKGphdmF4Lnht
bC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewog
IHJldHVybiBhZGQoamF2YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNlKCksIGR1cmF0aW9uKTsK
fQoKLy8gcmV0dXJucyB0aGUgbGFyZ2VzdCBkYXRldGltZSBmcm9tIHRoZSBnaXZlbiBsaXN0IG9m
IGRhdGV0aW1lIHN0cmluZ3MKcHVibGljIHN0YXRpYyBTdHJpbmcgbWF4aW11bShTdHJpbmdbXSBk
YXRldGltZXMsIFN0cmluZyBwYXR0ZXJuKSB7CiAgaWYgKGRhdGV0aW1lcyA9PSBudWxsIHx8IGRh
dGV0aW1lcy5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7CgogIGphdmEudXRpbC5DYWxlbmRhcltd
IGNhbGVuZGFycyA9IHBhcnNlKGRhdGV0aW1lcywgcGF0dGVybik7CiAgamF2YS51dGlsLlNvcnRl
ZFNldDxqYXZhLnV0aWwuQ2FsZW5kYXI+IHNldCA9IG5ldyBqYXZhLnV0aWwuVHJlZVNldDxqYXZh
LnV0aWwuQ2FsZW5kYXI+KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KGNhbGVuZGFycykpOwogIHJl
dHVybiBlbWl0KHNldC5sYXN0KCksIHBhdHRlcm4pOwp9CgovLyByZXR1cm5zIHRoZSBzbWFsbGVz
dCBkYXRldGltZSBmcm9tIHRoZSBnaXZlbiBsaXN0IG9mIGRhdGV0aW1lIHN0cmluZ3MKcHVibGlj
IHN0YXRpYyBTdHJpbmcgbWluaW11bShTdHJpbmdbXSBkYXRldGltZXMsIFN0cmluZyBwYXR0ZXJu
KSB7CiAgaWYgKGRhdGV0aW1lcyA9PSBudWxsIHx8IGRhdGV0aW1lcy5sZW5ndGggPT0gMCkgcmV0
dXJuIG51bGw7CgogIGphdmEudXRpbC5DYWxlbmRhcltdIGNhbGVuZGFycyA9IHBhcnNlKGRhdGV0
aW1lcywgcGF0dGVybik7CiAgamF2YS51dGlsLlNvcnRlZFNldDxqYXZhLnV0aWwuQ2FsZW5kYXI+
IHNldCA9IG5ldyBqYXZhLnV0aWwuVHJlZVNldDxqYXZhLnV0aWwuQ2FsZW5kYXI+KGphdmEudXRp
bC5BcnJheXMuYXNMaXN0KGNhbGVuZGFycykpOwogIHJldHVybiBlbWl0KHNldC5maXJzdCgpLCBw
YXR0ZXJuKTsKfQ==</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
