<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_nsName">tundra.datetime</value>
  <value name="shared">cHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBTdHJpbmcgREVGQVVMVF9EQVRFVElNRV9QQVRURVJOID0g
ImRhdGV0aW1lIjsKCnByb3RlY3RlZCBzdGF0aWMgZmluYWwgamF2YS51dGlsLk1hcDxTdHJpbmcs
IFN0cmluZz4gbmFtZWRQYXR0ZXJucyA9IGNvbnN0cnVjdE5hbWVkUGF0dGVybnMoKTsKCnByb3Rl
Y3RlZCBzdGF0aWMgZmluYWwgamF2YS51dGlsLk1hcDxTdHJpbmcsIFN0cmluZz4gY29uc3RydWN0
TmFtZWRQYXR0ZXJucygpIHsKICBqYXZhLnV0aWwuTWFwPFN0cmluZywgU3RyaW5nPiBtYXAgPSBu
ZXcgamF2YS51dGlsLlRyZWVNYXA8U3RyaW5nLCBTdHJpbmc+KCk7CgogIG1hcC5wdXQoImRhdGUi
LCAieXl5eS1NTS1kZCIpOwogIG1hcC5wdXQoImRhdGUuamRiYyIsICJ5eXl5LU1NLWRkIik7CiAg
bWFwLnB1dCgiZGF0ZS54bWwiLCAieXl5eS1NTS1kZCIpOyAgCiAgbWFwLnB1dCgidGltZSIsICJI
SDptbTpzcy5TU1MiKTsKICBtYXAucHV0KCJ0aW1lLmpkYmMiLCAiSEg6bW06c3MiKTsKICBtYXAu
cHV0KCJ0aW1lLnhtbCIsICJISDptbTpzcy5TU1MiKTsKCiAgcmV0dXJuIG1hcDsKfQoKLy8gYWRk
cyB0aGUgZ2l2ZW4geG1sIGR1cmF0aW9uIHRvIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0dXJu
aW5nIHRoZSByZXN1bHQKcHVibGljIHN0YXRpYyBTdHJpbmcgYWRkKFN0cmluZyBkYXRldGltZSwg
U3RyaW5nIGR1cmF0aW9uKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGFkZChk
YXRldGltZSwgbnVsbCwgZHVyYXRpb24pOwp9CgovLyBhZGRzIHRoZSBnaXZlbiB4bWwgZHVyYXRp
b24gdG8gdGhlIGdpdmVuIHhtbCBkYXRldGltZSByZXR1cm5pbmcgdGhlIHJlc3VsdApwdWJsaWMg
c3RhdGljIFN0cmluZyBhZGQoU3RyaW5nIGRhdGV0aW1lLCBTdHJpbmcgcGF0dGVybiwgU3RyaW5n
IGR1cmF0aW9uKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGFkZChkYXRldGlt
ZSwgcGF0dGVybiwgZHVyYXRpb24sIG51bGwpOwp9CgovLyBhZGRzIHRoZSBnaXZlbiB4bWwgZHVy
YXRpb24gdG8gdGhlIGdpdmVuIHhtbCBkYXRldGltZSByZXR1cm5pbmcgdGhlIHJlc3VsdApwdWJs
aWMgc3RhdGljIFN0cmluZyBhZGQoU3RyaW5nIGRhdGV0aW1lLCBTdHJpbmcgZGF0ZXRpbWVQYXR0
ZXJuLCBTdHJpbmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4pIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gZW1pdChhZGQocGFyc2UoZGF0ZXRpbWUsIGRhdGV0aW1l
UGF0dGVybiksIHR1bmRyYS5kdXJhdGlvbi5wYXJzZShkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJu
KSksIGRhdGV0aW1lUGF0dGVybik7Cn0KCi8vIGFkZHMgdGhlIGdpdmVuIHhtbCBkdXJhdGlvbiB0
byB0aGUgZ2l2ZW4geG1sIGRhdGV0aW1lIHJldHVybmluZyB0aGUgcmVzdWx0CnB1YmxpYyBzdGF0
aWMgamF2YS51dGlsLkNhbGVuZGFyIGFkZChqYXZhLnV0aWwuQ2FsZW5kYXIgY2FsZW5kYXIsIGph
dmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRp
b24gewogIGlmIChjYWxlbmRhciA9PSBudWxsIHx8IGR1cmF0aW9uID09IG51bGwpIHJldHVybiBj
YWxlbmRhcjsKCiAgdHJ5IHsKICAgIGphdmEudXRpbC5HcmVnb3JpYW5DYWxlbmRhciBnY2FsID0g
bmV3IGphdmEudXRpbC5HcmVnb3JpYW5DYWxlbmRhcigpOwogICAgZ2NhbC5zZXRUaW1lKGNhbGVu
ZGFyLmdldFRpbWUoKSk7CiAgICBnY2FsLnNldFRpbWVab25lKGNhbGVuZGFyLmdldFRpbWVab25l
KCkpOwogICAgamF2YXgueG1sLmRhdGF0eXBlLlhNTEdyZWdvcmlhbkNhbGVuZGFyIHhjYWwgPSBq
YXZheC54bWwuZGF0YXR5cGUuRGF0YXR5cGVGYWN0b3J5Lm5ld0luc3RhbmNlKCkubmV3WE1MR3Jl
Z29yaWFuQ2FsZW5kYXIoZ2NhbCk7CiAgICB4Y2FsLmFkZChkdXJhdGlvbik7CgogICAgY2FsZW5k
YXIgPSB4Y2FsLnRvR3JlZ29yaWFuQ2FsZW5kYXIoKTsKICB9IGNhdGNoIChqYXZheC54bWwuZGF0
YXR5cGUuRGF0YXR5cGVDb25maWd1cmF0aW9uRXhjZXB0aW9uIGV4KSB7CiAgICB0dW5kcmEuZXhj
ZXB0aW9uLnJhaXNlKGV4KTsKICB9CgogIHJldHVybiBjYWxlbmRhcjsKfQoKLy8gY29tcGFyZXMg
dHdvIHhtbCBkYXRldGltZSBzdHJpbmdzCnB1YmxpYyBzdGF0aWMgaW50IGNvbXBhcmUoU3RyaW5n
IGR4LCBTdHJpbmcgZHkpIHsKICByZXR1cm4gY29tcGFyZShkeCwgZHksIG51bGwpOwp9CgovLyBj
b21wYXJlcyB0d28geG1sIGRhdGV0aW1lIHN0cmluZ3MKcHVibGljIHN0YXRpYyBpbnQgY29tcGFy
ZShTdHJpbmcgZHgsIFN0cmluZyBkeSwgU3RyaW5nIHBhdHRlcm4pIHsKICByZXR1cm4gY29tcGFy
ZShwYXJzZShkeCwgcGF0dGVybiksIHBhcnNlKGR5LCBwYXR0ZXJuKSk7Cn0KCgovLyBjb21wYXJl
cyB0d28gZGF0ZXRpbWVzCnB1YmxpYyBzdGF0aWMgaW50IGNvbXBhcmUoamF2YS51dGlsLkNhbGVu
ZGFyIGN4LCBqYXZhLnV0aWwuQ2FsZW5kYXIgY3kpIHsKICBpZiAoY3ggPT0gbnVsbCAmJiBjeSA9
PSBudWxsKSByZXR1cm4gMDsKICBpZiAoY3ggPT0gbnVsbCAmJiBjeSAhPSBudWxsKSByZXR1cm4g
LTE7CiAgaWYgKGN4ICE9IG51bGwgJiYgY3kgPT0gbnVsbCkgcmV0dXJuIDE7CiAgCiAgcmV0dXJu
IGN4LmNvbXBhcmVUbyhjeSk7Cn0KCi8vIGNvbmNhdGVuYXRlcyBhIHhtbCBkYXRlIGFuZCB4bWwg
dGltZSB0b2dldGhlciB0byBmb3JtIGFuIHhtbCBkYXRldGltZQpwdWJsaWMgc3RhdGljIFN0cmlu
ZyBjb25jYXRlbmF0ZShTdHJpbmcgZGF0ZSwgU3RyaW5nIHRpbWUpIHsKICByZXR1cm4gZW1pdChj
b25jYXRlbmF0ZShwYXJzZShkYXRlLCAiZGF0ZSIpLCBwYXJzZSh0aW1lLCAidGltZSIpKSk7Cn0K
Ci8vIGFkZHMgdHdvIGRhdGVzIHRvZ2V0aGVyCnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVu
ZGFyIGNvbmNhdGVuYXRlKGphdmEudXRpbC5DYWxlbmRhciBkYXRlLCBqYXZhLnV0aWwuQ2FsZW5k
YXIgdGltZSkgewogIGphdmEudXRpbC5DYWxlbmRhciBsb2NhbERhdGVUaW1lID0gbmV3IGphdmEu
dXRpbC5HcmVnb3JpYW5DYWxlbmRhcigpOwogIGxvY2FsRGF0ZVRpbWUuc2V0VGltZUluTWlsbGlz
KGRhdGUuZ2V0VGltZUluTWlsbGlzKCkgKyB0aW1lLmdldFRpbWVJbk1pbGxpcygpKTsKCiAgcmV0
dXJuIGxvY2FsRGF0ZVRpbWU7Cn0KCi8vIHJldHVybnMgdGhlIHhtbCBkdXJhdGlvbiBiZXR3ZWVu
IHR3byBnaXZlbiB4bWwgZGF0ZXRpbWVzCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGR1cmF0aW9uKFN0
cmluZyBzdGFydCwgU3RyaW5nIGVuZCkgewogIHJldHVybiBkdXJhdGlvbihzdGFydCwgZW5kLCBu
dWxsKTsKfQoKLy8gcmV0dXJucyB0aGUgeG1sIGR1cmF0aW9uIGJldHdlZW4gdHdvIGdpdmVuIHht
bCBkYXRldGltZXMKcHVibGljIHN0YXRpYyBTdHJpbmcgZHVyYXRpb24oU3RyaW5nIHN0YXJ0LCBT
dHJpbmcgZW5kLCBTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuKSB7CiAgcmV0dXJuIGR1cmF0aW9uKHN0
YXJ0LCBlbmQsIGRhdGV0aW1lUGF0dGVybiwgbnVsbCk7Cn0KCi8vIHJldHVybnMgdGhlIHhtbCBk
dXJhdGlvbiBiZXR3ZWVuIHR3byBnaXZlbiB4bWwgZGF0ZXRpbWVzCnB1YmxpYyBzdGF0aWMgU3Ry
aW5nIGR1cmF0aW9uKFN0cmluZyBzdGFydCwgU3RyaW5nIGVuZCwgU3RyaW5nIGRhdGV0aW1lUGF0
dGVybiwgU3RyaW5nIGR1cmF0aW9uUGF0dGVybikgewogIHJldHVybiB0dW5kcmEuZHVyYXRpb24u
ZW1pdChkdXJhdGlvbihwYXJzZShzdGFydCwgZGF0ZXRpbWVQYXR0ZXJuKSwgcGFyc2UoZW5kLCBk
YXRldGltZVBhdHRlcm4pKSwgZHVyYXRpb25QYXR0ZXJuKTsKfQoKLy8gcmV0dXJucyB0aGUgeG1s
IGR1cmF0aW9uIGJldHdlZW4gdHdvIGdpdmVuIHhtbCBkYXRldGltZXMKcHVibGljIHN0YXRpYyBq
YXZheC54bWwuZGF0YXR5cGUuRHVyYXRpb24gZHVyYXRpb24oamF2YS51dGlsLkNhbGVuZGFyIHN0
YXJ0LCBqYXZhLnV0aWwuQ2FsZW5kYXIgZW5kKSB7CiAgaWYgKHN0YXJ0ID09IG51bGwgfHwgZW5k
ID09IG51bGwpIHJldHVybiBudWxsOwogIHJldHVybiB0dW5kcmEuZHVyYXRpb24ucGFyc2UoIiIg
KyAoZW5kLmdldFRpbWVJbk1pbGxpcygpIC0gc3RhcnQuZ2V0VGltZUluTWlsbGlzKCkpLCAibWls
bGlzZWNvbmRzIik7Cn0KCi8vIHJldHVybnMgdGhlIGdpdmVuIGRhdGV0aW1lIGFzIGFuIHhtbCBk
YXRldGltZSBzdHJpbmcKcHVibGljIHN0YXRpYyBTdHJpbmcgZW1pdChqYXZhLnV0aWwuRGF0ZSBp
bnB1dCkgewogIHJldHVybiBlbWl0KGlucHV0LCBudWxsKTsKfQoKLy8gcmV0dXJucyB0aGUgZ2l2
ZW4gZGF0ZXRpbWUgYXMgYSBzdHJpbmcgYWRoZXJpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm4KcHVi
bGljIHN0YXRpYyBTdHJpbmcgZW1pdChqYXZhLnV0aWwuRGF0ZSBpbnB1dCwgU3RyaW5nIHBhdHRl
cm4pIHsKICByZXR1cm4gZW1pdChpbnB1dCwgcGF0dGVybiwgbnVsbCk7Cn0KCi8vIHJldHVybnMg
dGhlIGdpdmVuIGRhdGV0aW1lIGFzIGEgc3RyaW5nIGFkaGVyaW5nIHRvIHRoZSBnaXZlbiBwYXR0
ZXJuCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVtaXQoamF2YS51dGlsLkRhdGUgaW5wdXQsIFN0cmlu
ZyBwYXR0ZXJuLCBTdHJpbmcgdGltZXpvbmUpIHsKICBpZiAoaW5wdXQgPT0gbnVsbCkgcmV0dXJu
IG51bGw7CgogIGphdmEudXRpbC5DYWxlbmRhciBjYWxlbmRhciA9IGphdmEudXRpbC5DYWxlbmRh
ci5nZXRJbnN0YW5jZSgpOwogIGNhbGVuZGFyLnNldFRpbWUoaW5wdXQpOwoKICByZXR1cm4gZW1p
dChjYWxlbmRhciwgcGF0dGVybiwgdGltZXpvbmUpOwp9CgovLyByZXR1cm5zIHRoZSBnaXZlbiBk
YXRldGltZSBhcyBhbiB4bWwgZGF0ZXRpbWUgc3RyaW5nCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVt
aXQoamF2YS51dGlsLkNhbGVuZGFyIGlucHV0KSB7CiAgcmV0dXJuIGVtaXQoaW5wdXQsIG51bGwp
Owp9CgovLyByZXR1cm5zIHRoZSBnaXZlbiBkYXRldGltZSBmb3JtYXR0ZWQgYXMgYSBzdHJpbmcg
YWRoZXJpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm4KcHVibGljIHN0YXRpYyBTdHJpbmcgZW1pdChq
YXZhLnV0aWwuQ2FsZW5kYXIgaW5wdXQsIFN0cmluZyBwYXR0ZXJuKSB7CiAgcmV0dXJuIGVtaXQo
aW5wdXQsIHBhdHRlcm4sIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSBnaXZlbiBkYXRldGltZSBm
b3JtYXR0ZWQgYXMgYSBzdHJpbmcgYWRoZXJpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm4KcHVibGlj
IHN0YXRpYyBTdHJpbmcgZW1pdChqYXZhLnV0aWwuQ2FsZW5kYXIgaW5wdXQsIFN0cmluZyBwYXR0
ZXJuLCBTdHJpbmcgdGltZXpvbmUpIHsKICBpZiAocGF0dGVybiA9PSBudWxsKSBwYXR0ZXJuID0g
REVGQVVMVF9EQVRFVElNRV9QQVRURVJOOwogIFN0cmluZyBvdXRwdXQgPSBudWxsOwogIAogIGlm
IChpbnB1dCAhPSBudWxsKSB7CiAgICBpZiAodGltZXpvbmUgIT0gbnVsbCkgaW5wdXQgPSB0dW5k
cmEuc3VwcG9ydC50aW1lem9uZS5jb252ZXJ0KGlucHV0LCB0aW1lem9uZSk7CgogICAgaWYgKHBh
dHRlcm4uZXF1YWxzKCJkYXRldGltZSIpIHx8IHBhdHRlcm4uZXF1YWxzKCJkYXRldGltZS54bWwi
KSkgewogICAgICBvdXRwdXQgPSBqYXZheC54bWwuYmluZC5EYXRhdHlwZUNvbnZlcnRlci5wcmlu
dERhdGVUaW1lKGlucHV0KTsKICAgIH0gZWxzZSBpZiAocGF0dGVybi5lcXVhbHMoImRhdGV0aW1l
LmpkYmMiKSkgewogICAgICBvdXRwdXQgPSAobmV3IGphdmEuc3FsLlRpbWVzdGFtcChpbnB1dC5n
ZXRUaW1lSW5NaWxsaXMoKSkpLnRvU3RyaW5nKCk7CiAgICB9IGVsc2UgaWYgKHBhdHRlcm4uZXF1
YWxzKCJtaWxsaXNlY29uZHMiKSkgewogICAgICBvdXRwdXQgPSAiIiArIGlucHV0LmdldFRpbWVJ
bk1pbGxpcygpOyAgCiAgICB9IGVsc2UgewogICAgICBpZiAobmFtZWRQYXR0ZXJucy5jb250YWlu
c0tleShwYXR0ZXJuKSkgcGF0dGVybiA9IG5hbWVkUGF0dGVybnMuZ2V0KHBhdHRlcm4pOwogICAg
ICBqYXZhLnRleHQuRGF0ZUZvcm1hdCBmb3JtYXR0ZXIgPSBuZXcgamF2YS50ZXh0LlNpbXBsZURh
dGVGb3JtYXQocGF0dGVybik7CiAgICAgIGZvcm1hdHRlci5zZXRMZW5pZW50KGZhbHNlKTsKICAg
ICAgb3V0cHV0ID0gZm9ybWF0dGVyLmZvcm1hdChpbnB1dC5nZXRUaW1lKCkpOwogICAgfQogIH0K
ICAKICByZXR1cm4gb3V0cHV0Owp9CgovLyByZXR1cm5zIHRoZSBnaXZlbiBkYXRldGltZSBmb3Jt
YXR0ZWQgYXMgYSBzdHJpbmcgYWRoZXJpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm4KcHVibGljIHN0
YXRpYyBTdHJpbmdbXSBlbWl0KGphdmEudXRpbC5DYWxlbmRhcltdIGlucHV0cywgU3RyaW5nIHBh
dHRlcm4pIHsKICByZXR1cm4gZW1pdChpbnB1dHMsIHBhdHRlcm4sIG51bGwpOwp9CgovLyByZXR1
cm5zIHRoZSBnaXZlbiBkYXRldGltZSBmb3JtYXR0ZWQgYXMgYSBzdHJpbmcgYWRoZXJpbmcgdG8g
dGhlIGdpdmVuIHBhdHRlcm4KcHVibGljIHN0YXRpYyBTdHJpbmdbXSBlbWl0KGphdmEudXRpbC5D
YWxlbmRhcltdIGlucHV0cywgU3RyaW5nIHBhdHRlcm4sIFN0cmluZyB0aW1lem9uZSkgewogIFN0
cmluZ1tdIG91dHB1dHMgPSBudWxsOwogIGlmIChpbnB1dHMgIT0gbnVsbCkgewogICAgb3V0cHV0
cyA9IG5ldyBTdHJpbmdbaW5wdXRzLmxlbmd0aF07CiAgICBmb3IgKGludCBpID0gMDsgaSA8IGlu
cHV0cy5sZW5ndGg7IGkrKykgewogICAgICBvdXRwdXRzW2ldID0gZW1pdChpbnB1dHNbaV0sIHBh
dHRlcm4sIHRpbWV6b25lKTsKICAgIH0KICB9CiAgcmV0dXJuIG91dHB1dHM7Cn0KCi8vIHJlZm9y
bWF0cyBhIGRhdGV0aW1lIHN0cmluZyBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1
YmxpYyBzdGF0aWMgU3RyaW5nIGZvcm1hdChTdHJpbmcgaW5wdXQsIFN0cmluZyBpblBhdHRlcm4s
IFN0cmluZyBvdXRQYXR0ZXJuKSB7CiAgcmV0dXJuIGZvcm1hdChpbnB1dCwgaW5QYXR0ZXJuLCBv
dXRQYXR0ZXJuLCBudWxsKTsKfQoKLy8gcmVmb3JtYXRzIGEgZGF0ZXRpbWUgc3RyaW5nIGFjY29y
ZGluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmcgZm9ybWF0KFN0
cmluZyBpbnB1dCwgU3RyaW5nIGluUGF0dGVybiwgU3RyaW5nIG91dFBhdHRlcm4sIFN0cmluZyBv
dXRUaW1lWm9uZSkgewogIHJldHVybiBlbWl0KHBhcnNlKGlucHV0LCBpblBhdHRlcm4pLCBvdXRQ
YXR0ZXJuLCBvdXRUaW1lWm9uZSk7Cn0KCi8vIHJlZm9ybWF0cyBhIGRhdGV0aW1lIHN0cmluZyBh
Y2NvcmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGZvcm1h
dChTdHJpbmcgaW5wdXQsIFN0cmluZ1tdIGluUGF0dGVybnMsIFN0cmluZyBvdXRQYXR0ZXJuKSB7
CiAgcmV0dXJuIGZvcm1hdChpbnB1dCwgaW5QYXR0ZXJucywgb3V0UGF0dGVybiwgbnVsbCk7Cn0K
Ci8vIHJlZm9ybWF0cyBhIGRhdGV0aW1lIHN0cmluZyBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIHBh
dHRlcm5zCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGZvcm1hdChTdHJpbmcgaW5wdXQsIFN0cmluZ1td
IGluUGF0dGVybnMsIFN0cmluZyBvdXRQYXR0ZXJuLCBTdHJpbmcgb3V0VGltZVpvbmUpIHsKICBy
ZXR1cm4gZW1pdChwYXJzZShpbnB1dCwgaW5QYXR0ZXJucyksIG91dFBhdHRlcm4sIG91dFRpbWVa
b25lKTsKfQoKLy8gcmVmb3JtYXRzIGEgbGlzdCBkYXRldGltZSBzdHJpbmdzIGFjY29yZGluZyB0
byB0aGUgZ2l2ZW4gcGF0dGVybnMKcHVibGljIHN0YXRpYyBTdHJpbmdbXSBmb3JtYXQoU3RyaW5n
W10gaW5wdXRzLCBTdHJpbmcgaW5QYXR0ZXJuLCBTdHJpbmcgb3V0UGF0dGVybikgewogIHJldHVy
biBmb3JtYXQoaW5wdXRzLCBpblBhdHRlcm4sIG91dFBhdHRlcm4sIG51bGwpOwp9CgovLyByZWZv
cm1hdHMgYSBsaXN0IGRhdGV0aW1lIHN0cmluZ3MgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBwYXR0
ZXJucwpwdWJsaWMgc3RhdGljIFN0cmluZ1tdIGZvcm1hdChTdHJpbmdbXSBpbnB1dHMsIFN0cmlu
ZyBpblBhdHRlcm4sIFN0cmluZyBvdXRQYXR0ZXJuLCBTdHJpbmcgb3V0VGltZVpvbmUpIHsKICBT
dHJpbmdbXSBvdXRwdXRzID0gbnVsbDsKICBpZiAoaW5wdXRzICE9IG51bGwpIHsKICAgIG91dHB1
dHMgPSBuZXcgU3RyaW5nW2lucHV0cy5sZW5ndGhdOwogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBp
bnB1dHMubGVuZ3RoOyBpKyspIHsKICAgICAgb3V0cHV0c1tpXSA9IHR1bmRyYS5kYXRldGltZS5m
b3JtYXQoaW5wdXRzW2ldLCBpblBhdHRlcm4sIG91dFBhdHRlcm4sIG91dFRpbWVab25lKTsKICAg
IH0KICB9CiAgcmV0dXJuIG91dHB1dHM7Cn0KCi8vIHJlZm9ybWF0cyBhIGxpc3QgZGF0ZXRpbWUg
c3RyaW5ncyBhY2NvcmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0aWMgU3Ry
aW5nW10gZm9ybWF0KFN0cmluZ1tdIGlucHV0cywgU3RyaW5nW10gaW5QYXR0ZXJucywgU3RyaW5n
IG91dFBhdHRlcm4pIHsKICByZXR1cm4gZm9ybWF0KGlucHV0cywgaW5QYXR0ZXJucywgb3V0UGF0
dGVybiwgbnVsbCk7Cn0KCi8vIHJlZm9ybWF0cyBhIGxpc3QgZGF0ZXRpbWUgc3RyaW5ncyBhY2Nv
cmRpbmcgdG8gdGhlIGdpdmVuIHBhdHRlcm5zCnB1YmxpYyBzdGF0aWMgU3RyaW5nW10gZm9ybWF0
KFN0cmluZ1tdIGlucHV0cywgU3RyaW5nW10gaW5QYXR0ZXJucywgU3RyaW5nIG91dFBhdHRlcm4s
IFN0cmluZyBvdXRUaW1lWm9uZSkgewogIFN0cmluZ1tdIG91dHB1dHMgPSBudWxsOwogIGlmIChp
bnB1dHMgIT0gbnVsbCkgewogICAgb3V0cHV0cyA9IG5ldyBTdHJpbmdbaW5wdXRzLmxlbmd0aF07
CiAgICBmb3IgKGludCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykgewogICAgICBvdXRw
dXRzW2ldID0gdHVuZHJhLmRhdGV0aW1lLmZvcm1hdChpbnB1dHNbaV0sIGluUGF0dGVybnMsIG91
dFBhdHRlcm4sIG91dFRpbWVab25lKTsKICAgIH0KICB9CiAgcmV0dXJuIG91dHB1dHM7Cn0KCi8v
IHJldHVybnMgdGhlIGN1cnJlbnQgZGF0ZXRpbWUgYXMgYW4geG1sIGRhdGV0aW1lIHN0cmluZwpw
dWJsaWMgc3RhdGljIFN0cmluZyBub3coKSB7CiAgcmV0dXJuIG5vdygiZGF0ZXRpbWUiKTsKfQoK
Ly8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBhcyBhbiBkYXRldGltZSBzdHJpbmcgZm9y
bWF0dGVkIGFjY29yZGluZyB0byB0aGUgZ2l2ZW4gcGF0dGVybgpwdWJsaWMgc3RhdGljIFN0cmlu
ZyBub3coU3RyaW5nIHBhdHRlcm4pIHsKICByZXR1cm4gbm93KHBhdHRlcm4sIG51bGwpOwp9Cgov
LyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIGFzIGFuIGRhdGV0aW1lIHN0cmluZyBmb3Jt
YXR0ZWQgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBwYXR0ZXJuCnB1YmxpYyBzdGF0aWMgU3RyaW5n
IG5vdyhTdHJpbmcgcGF0dGVybiwgU3RyaW5nIHRpbWV6b25lKSB7CiAgcmV0dXJuIGVtaXQoamF2
YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNlKCksIHBhdHRlcm4sIHRpbWV6b25lKTsKfQoKLy8g
cGFyc2VzIGFuIHhtbCBkYXRldGltZSBzdHJpbmcgYW5kIHJldHVybnMgYSBqYXZhLnV0aWwuRGF0
ZSBvYmplY3QKcHVibGljIHN0YXRpYyBqYXZhLnV0aWwuQ2FsZW5kYXIgcGFyc2UoU3RyaW5nIGlu
cHV0KSB7CiAgcmV0dXJuIHBhcnNlKGlucHV0LCAoU3RyaW5nKW51bGwpOwp9CgovLyBwYXJzZXMg
YSBkYXRldGltZSBzdHJpbmcgdGhhdCBhZGhlcmVzIHRvIHRoZSBnaXZlbiBwYXR0ZXJuIGFuZCBy
ZXR1cm5zIGEgamF2YS51dGlsLkRhdGUgb2JqZWN0CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNh
bGVuZGFyIHBhcnNlKFN0cmluZyBpbnB1dCwgU3RyaW5nIHBhdHRlcm4pIHRocm93cyBJbGxlZ2Fs
QXJndW1lbnRFeGNlcHRpb24gewogIGlmIChwYXR0ZXJuID09IG51bGwpIHBhdHRlcm4gPSBERUZB
VUxUX0RBVEVUSU1FX1BBVFRFUk47CiAgCiAgamF2YS51dGlsLkNhbGVuZGFyIG91dHB1dCA9IG51
bGw7CiAgCiAgaWYgKGlucHV0ICE9IG51bGwpIHsKICAgIHRyeSB7CiAgICAgIGlmIChwYXR0ZXJu
LmVxdWFscygiZGF0ZXRpbWUiKSB8fCBwYXR0ZXJuLmVxdWFscygiZGF0ZXRpbWUueG1sIikpIHsK
ICAgICAgICBvdXRwdXQgPSBqYXZheC54bWwuYmluZC5EYXRhdHlwZUNvbnZlcnRlci5wYXJzZURh
dGVUaW1lKGlucHV0KTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygiZGF0ZXRpbWUu
amRiYyIpKSB7CiAgICAgICAgb3V0cHV0ID0gamF2YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNl
KCk7CiAgICAgICAgb3V0cHV0LnNldFRpbWUoamF2YS5zcWwuVGltZXN0YW1wLnZhbHVlT2YoaW5w
dXQpKTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygiZGF0ZSIpIHx8IHBhdHRlcm4u
ZXF1YWxzKCJkYXRlLnhtbCIpKSB7CiAgICAgICAgb3V0cHV0ID0gamF2YXgueG1sLmJpbmQuRGF0
YXR5cGVDb252ZXJ0ZXIucGFyc2VEYXRlKGlucHV0KTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJu
LmVxdWFscygidGltZSIpIHx8IHBhdHRlcm4uZXF1YWxzKCJ0aW1lLnhtbCIpKSB7CiAgICAgICAg
b3V0cHV0ID0gamF2YXgueG1sLmJpbmQuRGF0YXR5cGVDb252ZXJ0ZXIucGFyc2VUaW1lKGlucHV0
KTsKICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLmVxdWFscygibWlsbGlzZWNvbmRzIikpIHsKICAg
ICAgICBvdXRwdXQgPSBqYXZhLnV0aWwuQ2FsZW5kYXIuZ2V0SW5zdGFuY2UoKTsKICAgICAgICBv
dXRwdXQuc2V0VGltZUluTWlsbGlzKExvbmcucGFyc2VMb25nKGlucHV0KSk7CiAgICAgIH0gZWxz
ZSB7CiAgICAgICAgaWYgKG5hbWVkUGF0dGVybnMuY29udGFpbnNLZXkocGF0dGVybikpIHBhdHRl
cm4gPSBuYW1lZFBhdHRlcm5zLmdldChwYXR0ZXJuKTsKICAgICAgICAKICAgICAgICBqYXZhLnRl
eHQuRGF0ZUZvcm1hdCBmb3JtYXR0ZXIgPSBuZXcgamF2YS50ZXh0LlNpbXBsZURhdGVGb3JtYXQo
cGF0dGVybik7CiAgICAgICAgZm9ybWF0dGVyLnNldExlbmllbnQoZmFsc2UpOwogICAgICAgIG91
dHB1dCA9IGphdmEudXRpbC5DYWxlbmRhci5nZXRJbnN0YW5jZSgpOwogICAgICAgIG91dHB1dC5z
ZXRUaW1lKGZvcm1hdHRlci5wYXJzZShpbnB1dCkpOwogICAgICB9CiAgICB9IGNhdGNoIChFeGNl
cHRpb24gZXgpIHsKICAgICAgdGhyb3cgbmV3IElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbigiVW5w
YXJzZWFibGUgZGF0ZXRpbWU6ICciICsgaW5wdXQgKyAiJyBkb2VzIG5vdCBjb25mb3JtIHRvIHBh
dHRlcm4gJyIgKyBwYXR0ZXJuICsgIiciKTsKICAgIH0KICB9CiAgCiAgcmV0dXJuIG91dHB1dDsK
fQoKLy8gcGFyc2VzIGEgZGF0ZXRpbWUgc3RyaW5nIHRoYXQgYWRoZXJlcyB0byB0aGUgZ2l2ZW4g
cGF0dGVybiBhbmQgcmV0dXJucyBhIGphdmEudXRpbC5EYXRlIG9iamVjdApwdWJsaWMgc3RhdGlj
IGphdmEudXRpbC5DYWxlbmRhciBwYXJzZShTdHJpbmcgaW5wdXQsIFN0cmluZy4uLiBwYXR0ZXJu
cykgdGhyb3dzIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiB7ICAKICBqYXZhLnV0aWwuQ2FsZW5k
YXIgb3V0cHV0ID0gbnVsbDsKCiAgaWYgKHBhdHRlcm5zID09IG51bGwpIHBhdHRlcm5zID0gbmV3
IFN0cmluZ1sxXTsKCiAgamF2YS51dGlsLkxpc3Q8VGhyb3dhYmxlPiBleGNlcHRpb25zID0gbmV3
IGphdmEudXRpbC5BcnJheUxpc3Q8VGhyb3dhYmxlPigpOwogIAogIGlmIChpbnB1dCAhPSBudWxs
KSB7CiAgICBib29sZWFuIHBhcnNlZCA9IGZhbHNlOwogICAgZm9yIChTdHJpbmcgcGF0dGVybiA6
IHBhdHRlcm5zKSB7CiAgICAgIHRyeSB7CiAgICAgICAgb3V0cHV0ID0gcGFyc2UoaW5wdXQsIHBh
dHRlcm4pOwogICAgICAgIHBhcnNlZCA9IHRydWU7CiAgICAgICAgYnJlYWs7CiAgICAgIH0gY2F0
Y2ggKEV4Y2VwdGlvbiBleCkgewogICAgICAgIGV4Y2VwdGlvbnMuYWRkKGV4KTsKICAgICAgfQog
ICAgfQogICAgaWYgKCFwYXJzZWQpIHRocm93IG5ldyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24o
dHVuZHJhLmV4Y2VwdGlvbi5tZXNzYWdlKGV4Y2VwdGlvbnMpKTsKICB9CiAgCiAgcmV0dXJuIG91
dHB1dDsKfQoKLy8gcGFyc2VzIGEgbGlzdCBvZiBkYXRldGltZSBzdHJpbmdzIHRoYXQgYWRoZXJl
cyB0byB0aGUgZ2l2ZW4gcGF0dGVybiBhbmQgcmV0dXJucyBhIGphdmEudXRpbC5EYXRlIG9iamVj
dApwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhcltdIHBhcnNlKFN0cmluZ1tdIGlucHV0
cywgU3RyaW5nIHBhdHRlcm4pIHRocm93cyBJbGxlZ2FsQXJndW1lbnRFeGNlcHRpb24gewogIGph
dmEudXRpbC5DYWxlbmRhcltdIG91dHB1dHMgPSBudWxsOwogIGlmIChpbnB1dHMgIT0gbnVsbCkg
ewogICAgb3V0cHV0cyA9IG5ldyBqYXZhLnV0aWwuQ2FsZW5kYXJbaW5wdXRzLmxlbmd0aF07CiAg
ICBmb3IgKGludCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykgewogICAgICBvdXRwdXRz
W2ldID0gcGFyc2UoaW5wdXRzW2ldLCBwYXR0ZXJuKTsKICAgIH0KICB9CiAgcmV0dXJuIG91dHB1
dHM7Cn0KCi8vIHBhcnNlcyBhIGxpc3Qgb2YgZGF0ZXRpbWUgc3RyaW5ncyB0aGF0IGFkaGVyZXMg
dG8gdGhlIGdpdmVuIHBhdHRlcm5zIGFuZCByZXR1cm5zIGEgamF2YS51dGlsLkRhdGUgb2JqZWN0
CnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFyW10gcGFyc2UoU3RyaW5nW10gaW5wdXRz
LCBTdHJpbmdbXSBwYXR0ZXJucykgdGhyb3dzIElsbGVnYWxBcmd1bWVudEV4Y2VwdGlvbiB7CiAg
amF2YS51dGlsLkNhbGVuZGFyW10gb3V0cHV0cyA9IG51bGw7CiAgaWYgKGlucHV0cyAhPSBudWxs
KSB7CiAgICBvdXRwdXRzID0gbmV3IGphdmEudXRpbC5DYWxlbmRhcltpbnB1dHMubGVuZ3RoXTsK
ICAgIGZvciAoaW50IGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIG91dHB1
dHNbaV0gPSBwYXJzZShpbnB1dHNbaV0sIHBhdHRlcm5zKTsKICAgIH0KICB9CiAgcmV0dXJuIG91
dHB1dHM7Cn0KCi8vIHN1YnRyYWN0cyB0aGUgZ2l2ZW4geG1sIGR1cmF0aW9uIGZyb20gdGhlIGdp
dmVuIHhtbCBkYXRldGltZSByZXR1cm5pbmcgdGhlIHJlc3VsdApwdWJsaWMgc3RhdGljIFN0cmlu
ZyBzdWJ0cmFjdChTdHJpbmcgZGF0ZXRpbWUsIFN0cmluZyBkdXJhdGlvbikgdGhyb3dzIFNlcnZp
Y2VFeGNlcHRpb24gewogIHJldHVybiBzdWJ0cmFjdChkYXRldGltZSwgbnVsbCwgZHVyYXRpb24p
Owp9CgovLyBzdWJ0cmFjdHMgdGhlIGdpdmVuIHhtbCBkdXJhdGlvbiBmcm9tIHRoZSBnaXZlbiB4
bWwgZGF0ZXRpbWUgcmV0dXJuaW5nIHRoZSByZXN1bHQKcHVibGljIHN0YXRpYyBTdHJpbmcgc3Vi
dHJhY3QoU3RyaW5nIGRhdGV0aW1lLCBTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJpbmcgZHVy
YXRpb24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gc3VidHJhY3QoZGF0ZXRp
bWUsIGRhdGV0aW1lUGF0dGVybiwgZHVyYXRpb24sIG51bGwpOwp9CgovLyBzdWJ0cmFjdHMgdGhl
IGdpdmVuIHhtbCBkdXJhdGlvbiBmcm9tIHRoZSBnaXZlbiB4bWwgZGF0ZXRpbWUgcmV0dXJuaW5n
IHRoZSByZXN1bHQKcHVibGljIHN0YXRpYyBTdHJpbmcgc3VidHJhY3QoU3RyaW5nIGRhdGV0aW1l
LCBTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJpbmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlv
blBhdHRlcm4pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gZW1pdChzdWJ0cmFj
dChwYXJzZShkYXRldGltZSwgZGF0ZXRpbWVQYXR0ZXJuKSwgdHVuZHJhLmR1cmF0aW9uLnBhcnNl
KGR1cmF0aW9uLCBkdXJhdGlvblBhdHRlcm4pKSwgZGF0ZXRpbWVQYXR0ZXJuKTsKfQoKLy8gc3Vi
dHJhY3RzIHRoZSBnaXZlbiBkdXJhdGlvbiBmcm9tIHRoZSBnaXZlbiBkYXRldGltZSByZXR1cm5p
bmcgdGhlIHJlc3VsdApwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxlbmRhciBzdWJ0cmFjdChq
YXZhLnV0aWwuQ2FsZW5kYXIgY2FsZW5kYXIsIGphdmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBk
dXJhdGlvbikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIGlmIChkdXJhdGlvbiAhPSBudWxs
KSBkdXJhdGlvbiA9IGR1cmF0aW9uLm5lZ2F0ZSgpOwogIHJldHVybiBhZGQoY2FsZW5kYXIsIGR1
cmF0aW9uKTsKfQoKLy8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBtaW51cyB0aGUgZ2l2
ZW4gWE1MIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVhcmxpZXIoU3RyaW5nIGR1cmF0
aW9uKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGVhcmxpZXIobnVsbCwgZHVy
YXRpb24sIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIG1pbnVzIHRo
ZSBnaXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIFN0cmluZyBlYXJsaWVyKFN0cmluZyBkdXJh
dGlvbiwgU3RyaW5nIGR1cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewog
IHJldHVybiBlYXJsaWVyKG51bGwsIGR1cmF0aW9uLCBkdXJhdGlvblBhdHRlcm4pOwp9CgovLyBy
ZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1lIG1pbnVzIHRoZSBnaXZlbiBkdXJhdGlvbgpwdWJs
aWMgc3RhdGljIFN0cmluZyBlYXJsaWVyKFN0cmluZyBkYXRldGltZVBhdHRlcm4sIFN0cmluZyBk
dXJhdGlvbiwgU3RyaW5nIGR1cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24g
ewogIHJldHVybiBlYXJsaWVyKGRhdGV0aW1lUGF0dGVybiwgZHVyYXRpb24sIGR1cmF0aW9uUGF0
dGVybiwgbnVsbCk7Cn0KCi8vIHJldHVybnMgdGhlIGN1cnJlbnQgZGF0ZXRpbWUgbWludXMgdGhl
IGdpdmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGVhcmxpZXIoU3RyaW5nIGRhdGV0
aW1lUGF0dGVybiwgU3RyaW5nIGR1cmF0aW9uLCBTdHJpbmcgZHVyYXRpb25QYXR0ZXJuLCBTdHJp
bmcgdGltZXpvbmUpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gZW1pdChlYXJs
aWVyKHR1bmRyYS5kdXJhdGlvbi5wYXJzZShkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKSksIGRh
dGV0aW1lUGF0dGVybiwgdGltZXpvbmUpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0
aW1lIG1pbnVzIHRoZSBnaXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIGphdmEudXRpbC5DYWxl
bmRhciBlYXJsaWVyKGphdmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBzdWJ0cmFjdChqYXZhLnV0aWwuQ2FsZW5kYXIu
Z2V0SW5zdGFuY2UoKSwgZHVyYXRpb24pOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0
aW1lIHBsdXMgdGhlIGdpdmVuIFhNTCBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIFN0cmluZyBsYXRl
cihTdHJpbmcgZHVyYXRpb24pIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICByZXR1cm4gbGF0
ZXIobnVsbCwgZHVyYXRpb24sIG51bGwpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0
aW1lIHBsdXMgdGhlIGdpdmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgU3RyaW5nIGxhdGVyKFN0
cmluZyBkdXJhdGlvbiwgU3RyaW5nIGR1cmF0aW9uUGF0dGVybikgdGhyb3dzIFNlcnZpY2VFeGNl
cHRpb24gewogIHJldHVybiBsYXRlcihudWxsLCBkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKTsK
fQoKLy8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBwbHVzIHRoZSBnaXZlbiBkdXJhdGlv
bgpwdWJsaWMgc3RhdGljIFN0cmluZyBsYXRlcihTdHJpbmcgZGF0ZXRpbWVQYXR0ZXJuLCBTdHJp
bmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4pIHRocm93cyBTZXJ2aWNlRXhjZXB0
aW9uIHsKICByZXR1cm4gbGF0ZXIoZGF0ZXRpbWVQYXR0ZXJuLCBkdXJhdGlvbiwgZHVyYXRpb25Q
YXR0ZXJuLCBudWxsKTsKfQoKLy8gcmV0dXJucyB0aGUgY3VycmVudCBkYXRldGltZSBwbHVzIHRo
ZSBnaXZlbiBkdXJhdGlvbgpwdWJsaWMgc3RhdGljIFN0cmluZyBsYXRlcihTdHJpbmcgZGF0ZXRp
bWVQYXR0ZXJuLCBTdHJpbmcgZHVyYXRpb24sIFN0cmluZyBkdXJhdGlvblBhdHRlcm4sIFN0cmlu
ZyB0aW1lem9uZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHJldHVybiBlbWl0KGxhdGVy
KHR1bmRyYS5kdXJhdGlvbi5wYXJzZShkdXJhdGlvbiwgZHVyYXRpb25QYXR0ZXJuKSksIGRhdGV0
aW1lUGF0dGVybiwgdGltZXpvbmUpOwp9CgovLyByZXR1cm5zIHRoZSBjdXJyZW50IGRhdGV0aW1l
IHBsdXMgdGhlIGdpdmVuIGR1cmF0aW9uCnB1YmxpYyBzdGF0aWMgamF2YS51dGlsLkNhbGVuZGFy
IGxhdGVyKGphdmF4LnhtbC5kYXRhdHlwZS5EdXJhdGlvbiBkdXJhdGlvbikgdGhyb3dzIFNlcnZp
Y2VFeGNlcHRpb24gewogIHJldHVybiBhZGQoamF2YS51dGlsLkNhbGVuZGFyLmdldEluc3RhbmNl
KCksIGR1cmF0aW9uKTsKfQoKLy8gcmV0dXJucyB0aGUgbGFyZ2VzdCBkYXRldGltZSBmcm9tIHRo
ZSBnaXZlbiBsaXN0IG9mIGRhdGV0aW1lIHN0cmluZ3MKcHVibGljIHN0YXRpYyBTdHJpbmcgbWF4
aW11bShTdHJpbmdbXSBkYXRldGltZXMsIFN0cmluZyBwYXR0ZXJuKSB7CiAgaWYgKGRhdGV0aW1l
cyA9PSBudWxsIHx8IGRhdGV0aW1lcy5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7CgogIGphdmEu
dXRpbC5DYWxlbmRhcltdIGNhbGVuZGFycyA9IHBhcnNlKGRhdGV0aW1lcywgcGF0dGVybik7CiAg
amF2YS51dGlsLlNvcnRlZFNldDxqYXZhLnV0aWwuQ2FsZW5kYXI+IHNldCA9IG5ldyBqYXZhLnV0
aWwuVHJlZVNldDxqYXZhLnV0aWwuQ2FsZW5kYXI+KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KGNh
bGVuZGFycykpOwogIHJldHVybiBlbWl0KHNldC5sYXN0KCksIHBhdHRlcm4pOwp9CgovLyByZXR1
cm5zIHRoZSBzbWFsbGVzdCBkYXRldGltZSBmcm9tIHRoZSBnaXZlbiBsaXN0IG9mIGRhdGV0aW1l
IHN0cmluZ3MKcHVibGljIHN0YXRpYyBTdHJpbmcgbWluaW11bShTdHJpbmdbXSBkYXRldGltZXMs
IFN0cmluZyBwYXR0ZXJuKSB7CiAgaWYgKGRhdGV0aW1lcyA9PSBudWxsIHx8IGRhdGV0aW1lcy5s
ZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7CgogIGphdmEudXRpbC5DYWxlbmRhcltdIGNhbGVuZGFy
cyA9IHBhcnNlKGRhdGV0aW1lcywgcGF0dGVybik7CiAgamF2YS51dGlsLlNvcnRlZFNldDxqYXZh
LnV0aWwuQ2FsZW5kYXI+IHNldCA9IG5ldyBqYXZhLnV0aWwuVHJlZVNldDxqYXZhLnV0aWwuQ2Fs
ZW5kYXI+KGphdmEudXRpbC5BcnJheXMuYXNMaXN0KGNhbGVuZGFycykpOwogIHJldHVybiBlbWl0
KHNldC5maXJzdCgpLCBwYXR0ZXJuKTsKfQ==</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
